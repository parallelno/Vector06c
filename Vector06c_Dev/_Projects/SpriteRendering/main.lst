0001   0000             ;-------------------------------------------------
0002   0000             ;|                                               |
0003   0000             ;|     Sprite Rendering Speed Test		         |
0004   0000             ;|     											 |
0005   0000             ;|     Original ver. 2020						 |
0006   0000             ;|     by KTSerg aka Sergey Cherkozianov		 |
0007   0000             ;-------------------------------------------------
0008   0000             
0009   0000             ; MACROS
0010   0000             #DEFINE RRC4					RRC \ RRC \ RRC \ RRC
0011   0000             
0012   0000             ; prefixes
0013   0000             ; ADDR - address
0014   0000             ; INT - interruption
0015   0000             ; SCR - screen
0016   0000             ; MEM - memory
0017   0000             ; LEN - length
0018   0000             ; SEC - seconds
0019   0000             ; RES - result
0020   0000             
0021   0000             ; global
0022   0000             #DEFINE PORT0_OUT_OUT			88H
0023   0000             
0024   0000             #DEFINE	JMP_OPCODE				0C3H
0025   0000             
0026   0000             #DEFINE	RESTART_ADDR			0000H
0027   0000             #DEFINE	INT_ADDR				0038H
0028   0000             #DEFINE	STACK_ADDR				8000H
0029   0000             #DEFINE TEMP_ADDR				0000H
0030   0000             
0031   0000             #DEFINE	SCR_BUFF_LEN			2000H
0032   0000             #DEFINE	SCR_MEM_LEN				8000H
0033   0000             
0034   0000             #DEFINE TEMP_WORD				0000H
0035   0000             #DEFINE	INT_TICKS_PER_SEC		50
0036   0000             
0037   0000             ; local
0038   0000             #DEFINE	TIMER_SEC				10
0039   0000             #DEFINE	TIMER_COUNTER_ADDR		9F10H
0040   0000             #DEFINE	TIMER_STOP_FLAG_ADDR	9F18H
0041   0000             #DEFINE	TIMER_STOP_FLAG_INIT	0FFH
0042   0000             
0043   0000             #DEFINE	SPRITE_COUNTER_ADDR		9FF4H
0044   0000             #DEFINE	SPRITE_SCR_ADDR			8EE0H
0045   0000             #DEFINE	STACK_TEMP_ADDR			9F80H
0046   0000             #DEFINE	RES_SCR_ADDR_0			80D0H
0047   0000             #DEFINE	RES_SCR_ADDR_1			80B0H
0048   0000             #DEFINE	RES_SCR_ADDR_2			8080H
0049   0000             #DEFINE	RES_SCR_ADDR_3			8060H
0050   0000             #DEFINE	RES_SCR_ADDR_4			8030H
0051   0000             #DEFINE	RES_SCR_ADDR_5			8010H
0052   0000             
0053   0000             #DEFINE	SPRITE_SCR_ADDR_		8F00H
0054   0000             #DEFINE	SPRITE_SCR_ADDR_0 		SPRITE_SCR_ADDR_ + 0D0H
0055   0000             #DEFINE	SPRITE_SCR_ADDR_1 		SPRITE_SCR_ADDR_ + 0B0H
0056   0000             #DEFINE	SPRITE_SCR_ADDR_2 		SPRITE_SCR_ADDR_ + 80H
0057   0000             #DEFINE	SPRITE_SCR_ADDR_3 		SPRITE_SCR_ADDR_ + 60H
0058   0000             #DEFINE	SPRITE_SCR_ADDR_4 		SPRITE_SCR_ADDR_ + 30H + 23
0059   0000             #DEFINE	SPRITE_SCR_ADDR_5 		SPRITE_SCR_ADDR_ + 10H + 23
0060   0000             
0061   0100             			.org	$0100
0062   0100             Start:
0063   0100 F3          			DI
0064   0101             			; dismount a quasi-disk
0065   0101 AF          			XRA		A
0066   0102 D3 10       			out		10H
0067   0104             			; set entry points of a restart, and an interruption
0068   0104 3E C3       			MVI		A, JMP_OPCODE
0069   0106 32 00 00    			STA		RESTART_ADDR
0070   0109 32 38 00    			STA		INT_ADDR
0071   010C 21 00 01    			LXI		H, Start
0072   010F 22 01 00    			SHLD 	RESTART_ADDR + 1
0073   0112 21 44 02    			LXI		H, Interruption2
0074   0115 22 39 00    			SHLD	INT_ADDR + 1
0075   0118             			; stack init
0076   0118 31 00 80    			LXI		SP, STACK_ADDR
0077   011B             
0078   011B             			; clear the screen
0079   011B 01 00 00    			LXI		B, 0000H
0080   011E 11 00 04    			LXI     D, SCR_MEM_LEN / 32
0081   0121 CD AF 0C    			CALL	MemReset
0082   0124             
0083   0124 FB          			EI
0084   0125 76          			HLT
0085   0126 CD D8 0C    			CALL	SetPalette
0086   0129             
0087   0129             ;----------------------------------------------------------------
0088   0129             ; The list of the sprite rendering subroutines to measure the render speed.
0089   0129             ; The result is an amount of sprites rendered during TIMER_SEC seconds
0090   0129             
0091   0129 CD C5 01    			CALL	InitTimer
0092   012C 21 47 8F    			LXI		H, SPRITE_SCR_ADDR_4
0093   012F 22 E1 01    			SHLD	testDrawScrAddr
0094   0132 21 45 08    			LXI		H, DrawSprite_ivagor
0095   0135 22 E5 01    			SHLD	testDrawSub
0096   0138 21 30 80    			LXI		H, RES_SCR_ADDR_4
0097   013B 22 F4 01    			SHLD	testDrawResScrAddr
0098   013E CD DA 01    			CALL	TestDraw
0099   0141             
0100   0141 21 27 8F    			LXI		H, SPRITE_SCR_ADDR_5
0101   0144 22 E1 01    			SHLD	testDrawScrAddr
0102   0147 21 7C 0A    			LXI		H, DrawSprite_parallelno
0103   014A 22 E5 01    			SHLD	testDrawSub
0104   014D 21 10 80    			LXI		H, RES_SCR_ADDR_5
0105   0150 22 F4 01    			SHLD	testDrawResScrAddr
0106   0153 CD C5 01    			CALL	InitTimer
0107   0156 CD DA 01    			CALL	TestDraw			
0108   0159             
0109   0159 21 D0 8F    			LXI		H, SPRITE_SCR_ADDR_0
0110   015C 22 E1 01    			SHLD	testDrawScrAddr
0111   015F 21 8F 02    			LXI		H, DrawSprite_Jerri_orig
0112   0162 22 E5 01    			SHLD	testDrawSub
0113   0165 21 D0 80    			LXI		H, RES_SCR_ADDR_0
0114   0168 22 F4 01    			SHLD	testDrawResScrAddr
0115   016B CD C5 01    			CALL	InitTimer
0116   016E CD DA 01    			CALL	TestDraw
0117   0171             
0118   0171 21 B0 8F    			LXI		H, SPRITE_SCR_ADDR_1
0119   0174 22 E1 01    			SHLD	testDrawScrAddr
0120   0177 21 F8 05    			LXI		H, DrawSprite_Jerri_unrolled
0121   017A 22 E5 01    			SHLD	testDrawSub
0122   017D 21 B0 80    			LXI		H, RES_SCR_ADDR_1
0123   0180 22 F4 01    			SHLD	testDrawResScrAddr
0124   0183 CD C5 01    			CALL	InitTimer
0125   0186 CD DA 01    			CALL	TestDraw
0126   0189             
0127   0189 21 80 8F    			LXI		H, SPRITE_SCR_ADDR_2
0128   018C 22 E1 01    			SHLD	testDrawScrAddr
0129   018F 21 E4 02    			LXI		H, DrawSprite_Serg_orig
0130   0192 22 E5 01    			SHLD	testDrawSub
0131   0195 21 80 80    			LXI		H, RES_SCR_ADDR_2
0132   0198 22 F4 01    			SHLD	testDrawResScrAddr
0133   019B CD C5 01    			CALL	InitTimer
0134   019E CD DA 01    			CALL	TestDraw
0135   01A1             
0136   01A1 21 60 8F    			LXI		H, SPRITE_SCR_ADDR_3
0137   01A4 22 E1 01    			SHLD	testDrawScrAddr
0138   01A7 21 69 03    			LXI		H, DrawSprite_Serg_unrolled
0139   01AA 22 E5 01    			SHLD	testDrawSub
0140   01AD 21 60 80    			LXI		H, RES_SCR_ADDR_3
0141   01B0 22 F4 01    			SHLD	testDrawResScrAddr
0142   01B3 CD C5 01    			CALL	InitTimer
0143   01B6 CD DA 01    			CALL	TestDraw	
0144   01B9             
0145   01B9             ;----------------------------------------------------------------
0146   01B9 3E 04       			MVI		A, 4
0147   01BB 32 07 0D    			STA		borderColorIdx
0148   01BE 76          			HLT		
0149   01BF CD D8 0C    			CALL	SetPalette
0150   01C2 C3 C2 01    infLoop:	JMP		infLoop
0151   01C5             
0152   01C5             
0153   01C5             ;================================================================
0154   01C5             ; SUBROUTINES
0155   01C5             ;================================================================
0156   01C5             
0157   01C5             ;----------------------------------------------------------------
0158   01C5             ; Timer Initialization
0159   01C5             ; in: none
0160   01C5             ; use: A, HL
0161   01C5             
0162   01C5 F3          InitTimer:	DI
0163   01C6             			; timer checks interruption ticks
0164   01C6 21 F4 01    			LXI		H, TIMER_SEC * INT_TICKS_PER_SEC
0165   01C9 22 10 9F    			SHLD	TIMER_COUNTER_ADDR
0166   01CC 3E FF       			MVI		A, TIMER_STOP_FLAG_INIT
0167   01CE 32 18 9F    			STA		TIMER_STOP_FLAG_ADDR
0168   01D1 21 00 00    			LXI		H, 0
0169   01D4 22 F4 9F    			SHLD	SPRITE_COUNTER_ADDR
0170   01D7 FB          			EI
0171   01D8 76          			HLT
0172   01D9 C9          			RET
0173   01DA             
0174   01DA             ;----------------------------------------------------------------
0175   01DA             ; Test Drawing a Sprite (24x24 pixels)
0176   01DA             				
0177   01DA             TestDraw:	.MODULE TestDraw
0178   01DA 2A F4 9F    			LHLD	SPRITE_COUNTER_ADDR
0179   01DD             
0180   01DD 01 14 0E    _loop:		LXI		B, spriteData01
0181   01E0             testDrawScrAddr:.EQU $+1
0182   01E0 11 00 00    			LXI		D, TEMP_ADDR
0183   01E3 E5          			PUSH	H
0184   01E4             testDrawSub:.EQU	$+1
0185   01E4 CD 00 00    			CALL	TEMP_ADDR
0186   01E7 E1          			POP		H
0187   01E8 23          			INX		H
0188   01E9 3A 18 9F    			LDA		TIMER_STOP_FLAG_ADDR
0189   01EC B7          			ORA		A
0190   01ED C2 DD 01    			JNZ		_loop
0191   01F0 22 F4 9F    			SHLD	SPRITE_COUNTER_ADDR
0192   01F3             
0193   01F3             testDrawResScrAddr: .EQU $+1
0194   01F3 11 00 00    			LXI		D, TEMP_ADDR
0195   01F6 CD FA 01    			CALL	DrawResult
0196   01F9 C9          			RET
0197   01FA             
0198   01FA             ;----------------------------------------------------------------
0199   01FA             ; Draw a Test Result (HEX)
0200   01FA             ; in: DE	result screen address
0201   01FA             ; use: A, HL, DE,
0202   01FA             
0203   01FA             DrawResult:
0204   01FA 3A F5 9F    			LDA		SPRITE_COUNTER_ADDR + 1
0205   01FD 0F          			RRC4
0205   01FE 0F          
0205   01FF 0F          
0205   0200 0F          
0206   0201 CD 36 02    			CALL	GetSpriteAddr
0207   0204 D5          			PUSH	D
0208   0205 CD 8F 02    			CALL	DrawSprite_Jerri_orig
0209   0208 D1          			POP		D
0210   0209 14          			INR		D
0211   020A 14          			INR		D
0212   020B 14          			INR		D
0213   020C             
0214   020C 3A F5 9F    			LDA		SPRITE_COUNTER_ADDR + 1
0215   020F CD 36 02    			CALL	GetSpriteAddr
0216   0212 D5          			PUSH	D
0217   0213 CD 8F 02    			CALL	DrawSprite_Jerri_orig
0218   0216 D1          			POP		D
0219   0217 14          			INR		D
0220   0218 14          			INR		D
0221   0219 14          			INR		D
0222   021A             
0223   021A 3A F4 9F    			LDA		SPRITE_COUNTER_ADDR
0224   021D 0F          			RRC4
0224   021E 0F          
0224   021F 0F          
0224   0220 0F          
0225   0221 CD 36 02    			CALL	GetSpriteAddr
0226   0224 D5          			PUSH	D
0227   0225 CD 8F 02    			CALL	DrawSprite_Jerri_orig
0228   0228 D1          			POP		D
0229   0229 14          			INR		D
0230   022A 14          			INR		D
0231   022B 14          			INR		D
0232   022C             
0233   022C 3A F4 9F    			LDA		SPRITE_COUNTER_ADDR
0234   022F CD 36 02    			CALL	GetSpriteAddr
0235   0232 CD 8F 02    			CALL	DrawSprite_Jerri_orig
0236   0235             
0237   0235 C9          			RET
0238   0236             
0239   0236             ;----------------------------------------------------------------
0240   0236             ; Get an address by a sprite index
0241   0236             ; in: A		sprite index
0242   0236             ; out: BC	sprite address
0243   0236             ; use: HL
0244   0236             
0245   0236             GetSpriteAddr:
0246   0236             			; BC = (A % 16) * 2 + spriteTable
0247   0236 E6 0F       			ANI		0FH				; (8)
0248   0238 87          			ADD		A				; (4)
0249   0239 4F          			MOV		C, A			; (8)
0250   023A 06 00       			MVI		B, 0			; (8)
0251   023C 21 18 0D    			LXI		H, spriteTable	; (12)
0252   023F 09          			DAD		B				; (12)
0253   0240 4E          			MOV		C, M			; (8)
0254   0241 23          			INX		H				; (8)
0255   0242 46          			MOV		B, M			; (8)
0256   0243 C9          			RET						; (12)
0257   0244             									; (88) total, 14 bytes
0258   0244             
0259   0244             ;----------------------------------------------------------------
0260   0244             ; The interruption sub with a stack protection.
0261   0244             ; It supports stack manipulations in the main program.
0262   0244             ;
0263   0244             ; When stack manupulations take place BC has to keep stack data that
0264   0244             ; is corrupted when an interruption happens and PUSH
0265   0244             			.MODULE Int2
0266   0244             Interruption2:
0267   0244             			; restore the Stack
0268   0244 E3          			XTHL
0269   0245 22 74 02    			SHLD	_return + 1
0270   0248 E1          			POP		H
0271   0249 22 6D 02    			SHLD	_restoreHL + 1
0272   024C 21 00 00    			LXI		H, 0
0273   024F 39          			DAD		SP
0274   0250 22 70 02    			SHLD	_restoreSP + 1
0275   0253 C5          			PUSH	B
0276   0254             			
0277   0254 31 80 9F    			LXI		SP, STACK_TEMP_ADDR
0278   0257 F5          			PUSH	PSW
0279   0258 C5          			PUSH	B
0280   0259 D5          			PUSH	D
0281   025A             
0282   025A             			; common interruption logic
0283   025A 2A 10 9F    			LHLD	TIMER_COUNTER_ADDR
0284   025D 2B          			DCX		H
0285   025E 22 10 9F    			SHLD	TIMER_COUNTER_ADDR
0286   0261 7C          			MOV		A, H
0287   0262 B5          			ORA		L
0288   0263 C2 69 02    			JNZ		_doNotStopTimer
0289   0266             
0290   0266 32 18 9F    			STA	TIMER_STOP_FLAG_ADDR	; запись 00 в фдаг остановки вывода спрайтов
0291   0269             
0292   0269             _doNotStopTimer:
0293   0269 D1          			POP		D
0294   026A C1          			POP		B
0295   026B F1          			POP		PSW
0296   026C 21 00 00    _restoreHL:	LXI		H, TEMP_ADDR
0297   026F 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR
0298   0272 FB          			EI
0299   0273 C3 00 00    _return:	JMP		TEMP_ADDR
0300   0276             
0301   0276             
0302   0276             ;----------------------------------------------------------------
0303   0276             ; The common interruption sub
0304   0276             ;
0305   0276             			.MODULE Interruption1
0306   0276             Interruption1:
0307   0276 F5          			PUSH	PSW
0308   0277 C5          			PUSH	B
0309   0278 D5          			PUSH	D
0310   0279 E5          			PUSH	H
0311   027A             
0312   027A             			; common interruption logic
0313   027A 2A 10 9F    			LHLD	TIMER_COUNTER_ADDR
0314   027D 2B          			DCX		H
0315   027E 22 10 9F    			SHLD	TIMER_COUNTER_ADDR
0316   0281 7C          			MOV		A, H
0317   0282 B5          			ORA		L
0318   0283 C2 89 02    			JNZ	_doNotStopTimer
0319   0286             			; set the flag to 0
0320   0286 32 18 9F    			STA	TIMER_STOP_FLAG_ADDR
0321   0289             
0322   0289             _doNotStopTimer:
0323   0289 E1          			POP		H
0324   028A D1          			POP		D
0325   028B C1          			POP		B
0326   028C F1          			POP		PSW
0327   028D FB          			EI
0328   028E C9          			RET
0329   028F             
0330   028F             ;========================================================
0331   028F             ;вывод спрайта в системе битпланов Вектор 06
0332   028F             ;ширина спрайта -24
0333   028F             ;на входе
0334   028F             ;bc адрес спрайта
0335   028F             ;de aдрес на экране 
0336   028F             ;E-Y D-X 
0337   028F             			.MODULE DS_Jerri_orig
0338   028F             DrawSprite_Jerri_orig:
0339   028F             			; store SP
0340   028F 21 00 00    			LXI		H, 0
0341   0292 39          			DAD		SP
0342   0293 22 E1 02    			SHLD	_restoreSP+1
0343   0296             			
0344   0296 3E 0C       			MVI		A, 12
0345   0298 60          			MOV		H, B
0346   0299 69          			MOV		L, C
0347   029A 4E          			MOV		C, M
0348   029B 23          			INX		H
0349   029C 46          			MOV		B, M
0350   029D 23          			INX		H
0351   029E F9          			SPHL
0352   029F             		;задаем Y в L
0353   029F 6B          			MOV		L, E
0354   02A0             		;задаем высоту спрайта в E
0355   02A0 5F          			MOV		E, A
0356   02A1             		;задаем X в A
0357   02A1 7A          			MOV		A, D
0358   02A2             		;переход между битпланами
0359   02A2 16 20       			MVI		D, 20H
0360   02A4             _loop:
0361   02A4 67          			MOV		H, A
0362   02A5             		;рисуем на первом плане
0363   02A5 71          			MOV		M, C
0364   02A6 24          			INR		H
0365   02A7 70          			MOV		M, B
0366   02A8 24          			INR		H
0367   02A9 C1          			POP		B
0368   02AA 71          			MOV		M, C
0369   02AB             		;переход на второй битплан
0370   02AB 82          			ADD		D
0371   02AC             
0372   02AC 67          			MOV		H, A
0373   02AD             		;рисуем на втором плане
0374   02AD 70          			MOV		M, B
0375   02AE 24          			INR		H
0376   02AF C1          			POP		B
0377   02B0 71          			MOV		M, C
0378   02B1 24          			INR		H
0379   02B2 70          			MOV		M, B
0380   02B3 C1          			POP		B
0381   02B4             		;переход на третий битплан
0382   02B4 82          			ADD		D
0383   02B5             
0384   02B5 67          			MOV		H, A
0385   02B6             		;рисуем на третьем плане
0386   02B6 71          			MOV		M, C
0387   02B7 24          			INR		H
0388   02B8 70          			MOV		M, B
0389   02B9 24          			INR		H
0390   02BA C1          			POP		B
0391   02BB 71          			MOV		M, C
0392   02BC             		;возвращаемся на первый план	
0393   02BC D6 40       			SUI		$40
0394   02BE 67          			MOV		h,a
0395   02BF             		;переходим на следующую строку
0396   02BF 2C          			INR	l	
0397   02C0             
0398   02C0             		;повторяем цикл рисования
0399   02C0 70          			MOV		M, B
0400   02C1 24          			INR		H
0401   02C2 C1          			POP		B
0402   02C3 71          			MOV		M, C
0403   02C4 24          			INR		H
0404   02C5 70          			MOV		M, B
0405   02C6 C1          			POP		B
0406   02C7             		;переход на второй битплан
0407   02C7 82          			ADD	d
0408   02C8             
0409   02C8 67          			MOV	h,a
0410   02C9             		;рисуем на втором плане
0411   02C9 71          			MOV		M, C
0412   02CA 24          			INR		H
0413   02CB 70          			MOV		M, B
0414   02CC 24          			INR		H
0415   02CD C1          			POP		B
0416   02CE 71          			MOV		M, C
0417   02CF             		;переход на третий битплан
0418   02CF 82          			ADD	d
0419   02D0             
0420   02D0 67          			MOV	h,a
0421   02D1             		;рисуем на третьем плане
0422   02D1 70          			MOV		M, B
0423   02D2 24          			INR		H
0424   02D3 C1          			POP		B
0425   02D4 71          			MOV		M, C
0426   02D5 24          			INR		H
0427   02D6 70          			MOV		M, B
0428   02D7             		;выбираем следующую пару байтов для цикла рисования
0429   02D7 C1          			POP		B
0430   02D8             
0431   02D8             		;возвращаемся на первый план	
0432   02D8 D6 40       			SUI	$40
0433   02DA 67          			MOV	h,a
0434   02DB             		;переходим на следующую строку
0435   02DB 2C          			INR	l	
0436   02DC             		;проверяем на завершение цикла 
0437   02DC 1D          			DCR	e
0438   02DD C2 A4 02    			JNZ	_loop	
0439   02E0             _restoreSP:
0440   02E0 31 00 00    			LXI		SP, TEMP_ADDR
0441   02E3 C9          			RET
0442   02E4             ;
0443   02E4             ;========================================
0444   02E4             ; выводим по 4 строки спрайта
0445   02E4             ;на входе
0446   02E4             ;bc адрес спрайта
0447   02E4             ;de aдрес на экране 
0448   02E4             ;E-Y D-X 
0449   02E4             ;=================================================================
0450   02E4             DrawSprite_Serg_orig:
0451   02E4 21 00 00    	LXI	h,0
0452   02E7 39          	DAD	sp	; в hl - указатель стека
0453   02E8 22 64 03    	SHLD	sp_rd+1	; сохраним указатель стека для восстановления
0454   02EB 60          	MOV	h,b
0455   02EC 69          	MOV	l,c
0456   02ED F9          	SPHL	; hl -> sp  - указатель стека на начало указанного спрайта
0457   02EE EB          	XCHG		; обмен hl<->de
0458   02EF 22 67 03    	SHLD	spr_ekran	; адрес спрайта на экране
0459   02F2             ;
0460   02F2             ; вывод спрайта
0461   02F2 1E 06       	MVI	e,6	; количество повторов вывода 4 строк спрайта
0462   02F4 2A 67 03    	LHLD	spr_ekran	; получение адреса спрайта на экране
0463   02F7 16 20       	MVI	d,$20		 ; смещение на след. экранную плоскость
0464   02F9 7C          spr_c6:	MOV	a,h	; сохранить адрес колонки на первой экр. плоскости
0465   02FA             ;
0466   02FA C1          	POP		B	; прочитать два байта спрайта
0467   02FB 71          	MOV		M, C	; вывод байта на экран
0468   02FC 2C          	INR	l	 ; строка вверх на экране
0469   02FD 70          	MOV		M, B	; вывод байта на экран
0470   02FE 24          	INR		H	 ; следующая колонка
0471   02FF C1          	POP		B	; прочитать два байта спрайта
0472   0300 71          	MOV		M, C	; вывод байта на экран
0473   0301 2D          	DCR	l	 ; строка вниз на экране
0474   0302 70          	MOV		M, B	; вывод байта на экран
0475   0303 24          	INR		H	 ; следующая колонка
0476   0304 C1          	POP		B	; прочитать два байта спрайта
0477   0305 71          	MOV		M, C	; вывод байта на экран
0478   0306 2C          	INR	l	 ; строка вверх на экране
0479   0307 70          	MOV		M, B	; вывод байта на экран
0480   0308             ;
0481   0308 82          	ADD	d	; след. экранная плоскость
0482   0309 67          	MOV	h,a
0483   030A             ;
0484   030A C1          	POP		B	; прочитать два байта спрайта
0485   030B 71          	MOV		M, C	; вывод байта на экран
0486   030C 2D          	DCR	l	 ; строка вниз на экране
0487   030D 70          	MOV		M, B	; вывод байта на экран
0488   030E 24          	INR		H	 ; следующая колонка
0489   030F C1          	POP		B	; прочитать два байта спрайта
0490   0310 71          	MOV		M, C	; вывод байта на экран
0491   0311 2C          	INR	l	 ; строка вверх на экране
0492   0312 70          	MOV		M, B	; вывод байта на экран
0493   0313 24          	INR		H	 ; следующая колонка
0494   0314 C1          	POP		B	; прочитать два байта спрайта
0495   0315 71          	MOV		M, C	; вывод байта на экран
0496   0316 2D          	DCR	l	 ; строка вниз на экране
0497   0317 70          	MOV		M, B	; вывод байта на экран
0498   0318             ;
0499   0318 82          	ADD	d	; след. экранная плоскость
0500   0319 67          	MOV	h,a
0501   031A             ;
0502   031A C1          	POP		B	; прочитать два байта спрайта
0503   031B 71          	MOV		M, C	; вывод байта на экран
0504   031C 2C          	INR	l	 ; строка вверх на экране
0505   031D 70          	MOV		M, B	; вывод байта на экран
0506   031E 24          	INR		H	 ; следующая колонка
0507   031F C1          	POP		B	; прочитать два байта спрайта
0508   0320 71          	MOV		M, C	; вывод байта на экран
0509   0321 2D          	DCR	l	 ; строка вниз на экране
0510   0322 70          	MOV		M, B	; вывод байта на экран
0511   0323 24          	INR		H	 ; следующая колонка
0512   0324 C1          	POP		B	; прочитать два байта спрайта
0513   0325 71          	MOV		M, C	; вывод байта на экран
0514   0326 2C          	INR	l	 ; строка вверх на экране
0515   0327 70          	MOV		M, B	; вывод байта на экран
0516   0328             ;
0517   0328 2C          	INR	l	 ; строка вверх на экране - правая колонка, 3-я строка
0518   0329 D6 40       	SUI	$40
0519   032B 67          	MOV	h,a	; первая экранная плоскость
0520   032C             ;
0521   032C C1          	POP		B	; прочитать два байта спрайта
0522   032D 71          	MOV		M, C	; вывод байта на экран
0523   032E 2C          	INR	l	 ; строка вверх на экране
0524   032F 70          	MOV		M, B	; вывод байта на экран
0525   0330 24          	INR		H	 ; следующая колонка
0526   0331 C1          	POP		B	; прочитать два байта спрайта
0527   0332 71          	MOV		M, C	; вывод байта на экран
0528   0333 2D          	DCR	l	 ; строка вниз на экране
0529   0334 70          	MOV		M, B	; вывод байта на экран
0530   0335 24          	INR		H	 ; следующая колонка
0531   0336 C1          	POP		B	; прочитать два байта спрайта
0532   0337 71          	MOV		M, C	; вывод байта на экран
0533   0338 2C          	INR	l	 ; строка вверх на экране
0534   0339 70          	MOV		M, B	; вывод байта на экран
0535   033A             ;
0536   033A 82          	ADD	d	; след. экранная плоскость
0537   033B 67          	MOV	h,a
0538   033C             ;
0539   033C C1          	POP		B	; прочитать два байта спрайта
0540   033D 71          	MOV		M, C	; вывод байта на экран
0541   033E 2D          	DCR	l	 ; строка вниз на экране
0542   033F 70          	MOV		M, B	; вывод байта на экран
0543   0340 24          	INR		H	 ; следующая колонка
0544   0341 C1          	POP		B	; прочитать два байта спрайта
0545   0342 71          	MOV		M, C	; вывод байта на экран
0546   0343 2C          	INR	l	 ; строка вверх на экране
0547   0344 70          	MOV		M, B	; вывод байта на экран
0548   0345 24          	INR		H	 ; следующая колонка
0549   0346 C1          	POP		B	; прочитать два байта спрайта
0550   0347 71          	MOV		M, C	; вывод байта на экран
0551   0348 2D          	DCR	l	 ; строка вниз на экране
0552   0349 70          	MOV		M, B	; вывод байта на экран
0553   034A             ;
0554   034A 82          	ADD	d	; след. экранная плоскость
0555   034B 67          	MOV	h,a
0556   034C             ;
0557   034C C1          	POP		B	; прочитать два байта спрайта
0558   034D 71          	MOV		M, C	; вывод байта на экран
0559   034E 2C          	INR	l	 ; строка вверх на экране
0560   034F 70          	MOV		M, B	; вывод байта на экран
0561   0350 24          	INR		H	 ; следующая колонка
0562   0351 C1          	POP		B	; прочитать два байта спрайта
0563   0352 71          	MOV		M, C	; вывод байта на экран
0564   0353 2D          	DCR	l	 ; строка вниз на экране
0565   0354 70          	MOV		M, B	; вывод байта на экран
0566   0355 24          	INR		H	 ; следующая колонка
0567   0356 C1          	POP		B	; прочитать два байта спрайта
0568   0357 71          	MOV		M, C	; вывод байта на экран
0569   0358 2C          	INR	l	 ; строка вверх на экране
0570   0359 70          	MOV		M, B	; вывод байта на экран
0571   035A             ;
0572   035A 2C          	INR	l	 ; строка вверх на экране - правая колонка, 3-я строка
0573   035B D6 40       	SUI	$40
0574   035D 67          	MOV	h,a	; первая экранная плоскость
0575   035E             ;
0576   035E 1D          	DCR	e
0577   035F C2 F9 02    	JNZ	spr_c6
0578   0362             ;
0579   0362 C1          	POP		B	; пустое чтение
0580   0363             ;
0581   0363 31 00 00    sp_rd:	LXI	sp,0	; восстановление стека после вывода спрайта
0582   0366             ;
0583   0366 C9          	RET	; вЫход из подпрограммы вывода спрайта на экран
0584   0367             ;
0585   0367             spr_ekran:
0586   0367 80 88       	.DB	$80,$88		; адрес на экране для вывода спрайта
0587   0369             
0588   0369             ;----------------------------------------------------------------
0589   0369             ; draw a sprite (24x24 pixels)
0590   0369             ; author: Serg
0591   0369             ; description: выводим по колонке, слева на право
0592   0369             
0593   0369             ; in:
0594   0369             ; BC	sprite data
0595   0369             ; DE	screen address (x,y)
0596   0369             			.MODULE DrawSprite_Serg_unrolled
0597   0369             DrawSprite_Serg_unrolled:
0598   0369 21 00 00    			LXI		H, 0
0599   036C 39          			DAD		SP			; в hl - указатель стека
0600   036D 22 4C 04    			SHLD	spr2rd+1	; сохраним указатель стека для восстановления
0601   0370 60          			MOV	h,b
0602   0371 69          			MOV	l,c
0603   0372 F9          			SPHL	; hl -> sp  - указатель стека на начало указанного спрайта
0604   0373 EB          			XCHG		; обмен hl<->de
0605   0374             
0606   0374 22 67 03    			SHLD	spr_ekran	; адрес спрайта на экране
0607   0377 3E 03       			MVI	a,3	; количество повторов вывода колонок
0608   0379 32 42 04    			STA	spr2k+1	; сохраним в алгоритм
0609   037C 7D          			MOV	a,l	 ; строка для вывода спрайта Y
0610   037D 32 40 04    			STA	spr2l+1	 ; сохраним Y
0611   0380 7C          			MOV	a,h
0612   0381 C6 20       			ADI	$20
0613   0383 57          			MOV	d,a	; вторая плоскость
0614   0384 C6 20       			ADI	$20
0615   0386 5F          			MOV	e,a	; третья плоскость
0616   0387             		;	MOV	a,h	; первая плоскость
0617   0387             ;
0618   0387             ; вывод спрайта
0619   0387             spr2c6:
0620   0387 7C          	MOV	a,h	; первая плоскость
0621   0388             ; строки 1 и 2
0622   0388 C1          	POP		B	; прочитать два байта спрайта
0623   0389 71          	MOV		M, C	; вывод байта на экран
0624   038A 62          	MOV	h,d	 ; вторая плоскость
0625   038B 70          	MOV		M, B	; вывод байта на экран
0626   038C 63          	MOV	h,e	 ; третья плоскость
0627   038D C1          	POP		B	; прочитать два байта спрайта
0628   038E 71          	MOV		M, C	; вывод байта на экран
0629   038F 2C          	INR	l	 ; строка вверх на экране
0630   0390 70          	MOV		M, B	; вывод байта на экран
0631   0391 62          	MOV	h,d	 ; вторая плоскость
0632   0392 C1          	POP		B	; прочитать два байта спрайта
0633   0393 71          	MOV		M, C	; вывод байта на экран
0634   0394 67          	MOV	h,a	; первая плоскость
0635   0395 70          	MOV		M, B	; вывод байта на экран
0636   0396             ; строки 3 и 4
0637   0396 2C          	INR	l	 ; строка вверх на экране
0638   0397 C1          	POP		B	; прочитать два байта спрайта
0639   0398 71          	MOV		M, C	; вывод байта на экран
0640   0399 62          	MOV	h,d	 ; вторая плоскость
0641   039A 70          	MOV		M, B	; вывод байта на экран
0642   039B 63          	MOV	h,e	 ; третья плоскость
0643   039C C1          	POP		B	; прочитать два байта спрайта
0644   039D 71          	MOV		M, C	; вывод байта на экран
0645   039E 2C          	INR	l	 ; строка вверх на экране
0646   039F 70          	MOV		M, B	; вывод байта на экран
0647   03A0 62          	MOV	h,d	 ; вторая плоскость
0648   03A1 C1          	POP		B	; прочитать два байта спрайта
0649   03A2 71          	MOV		M, C	; вывод байта на экран
0650   03A3 67          	MOV	h,a	; первая плоскость
0651   03A4 70          	MOV		M, B	; вывод байта на экран
0652   03A5             ; строки 5 и 6
0653   03A5 2C          	INR	l	 ; строка вверх на экране
0654   03A6 C1          	POP		B	; прочитать два байта спрайта
0655   03A7 71          	MOV		M, C	; вывод байта на экран
0656   03A8 62          	MOV	h,d	 ; вторая плоскость
0657   03A9 70          	MOV		M, B	; вывод байта на экран
0658   03AA 63          	MOV	h,e	 ; третья плоскость
0659   03AB C1          	POP		B	; прочитать два байта спрайта
0660   03AC 71          	MOV		M, C	; вывод байта на экран
0661   03AD 2C          	INR	l	 ; строка вверх на экране
0662   03AE 70          	MOV		M, B	; вывод байта на экран
0663   03AF 62          	MOV	h,d	 ; вторая плоскость
0664   03B0 C1          	POP		B	; прочитать два байта спрайта
0665   03B1 71          	MOV		M, C	; вывод байта на экран
0666   03B2 67          	MOV	h,a	; первая плоскость
0667   03B3 70          	MOV		M, B	; вывод байта на экран
0668   03B4             ; строки 7 и 8
0669   03B4 2C          	INR	l	 ; строка вверх на экране
0670   03B5 C1          	POP		B	; прочитать два байта спрайта
0671   03B6 71          	MOV		M, C	; вывод байта на экран
0672   03B7 62          	MOV	h,d	 ; вторая плоскость
0673   03B8 70          	MOV		M, B	; вывод байта на экран
0674   03B9 63          	MOV	h,e	 ; третья плоскость
0675   03BA C1          	POP		B	; прочитать два байта спрайта
0676   03BB 71          	MOV		M, C	; вывод байта на экран
0677   03BC 2C          	INR	l	 ; строка вверх на экране
0678   03BD 70          	MOV		M, B	; вывод байта на экран
0679   03BE 62          	MOV	h,d	 ; вторая плоскость
0680   03BF C1          	POP		B	; прочитать два байта спрайта
0681   03C0 71          	MOV		M, C	; вывод байта на экран
0682   03C1 67          	MOV	h,a	; первая плоскость
0683   03C2 70          	MOV		M, B	; вывод байта на экран
0684   03C3             ; строки 9 и 10
0685   03C3 2C          	INR	l	 ; строка вверх на экране
0686   03C4 C1          	POP		B	; прочитать два байта спрайта
0687   03C5 71          	MOV		M, C	; вывод байта на экран
0688   03C6 62          	MOV	h,d	 ; вторая плоскость
0689   03C7 70          	MOV		M, B	; вывод байта на экран
0690   03C8 63          	MOV	h,e	 ; третья плоскость
0691   03C9 C1          	POP		B	; прочитать два байта спрайта
0692   03CA 71          	MOV		M, C	; вывод байта на экран
0693   03CB 2C          	INR	l	 ; строка вверх на экране
0694   03CC 70          	MOV		M, B	; вывод байта на экран
0695   03CD 62          	MOV	h,d	 ; вторая плоскость
0696   03CE C1          	POP		B	; прочитать два байта спрайта
0697   03CF 71          	MOV		M, C	; вывод байта на экран
0698   03D0 67          	MOV	h,a	; первая плоскость
0699   03D1 70          	MOV		M, B	; вывод байта на экран
0700   03D2             ; строки 11 и 12
0701   03D2 2C          	INR	l	 ; строка вверх на экране
0702   03D3 C1          	POP		B	; прочитать два байта спрайта
0703   03D4 71          	MOV		M, C	; вывод байта на экран
0704   03D5 62          	MOV	h,d	 ; вторая плоскость
0705   03D6 70          	MOV		M, B	; вывод байта на экран
0706   03D7 63          	MOV	h,e	 ; третья плоскость
0707   03D8 C1          	POP		B	; прочитать два байта спрайта
0708   03D9 71          	MOV		M, C	; вывод байта на экран
0709   03DA 2C          	INR	l	 ; строка вверх на экране
0710   03DB 70          	MOV		M, B	; вывод байта на экран
0711   03DC 62          	MOV	h,d	 ; вторая плоскость
0712   03DD C1          	POP		B	; прочитать два байта спрайта
0713   03DE 71          	MOV		M, C	; вывод байта на экран
0714   03DF 67          	MOV	h,a	; первая плоскость
0715   03E0 70          	MOV		M, B	; вывод байта на экран
0716   03E1             ; строки 13 и 14
0717   03E1 2C          	INR	l	 ; строка вверх на экране
0718   03E2 C1          	POP		B	; прочитать два байта спрайта
0719   03E3 71          	MOV		M, C	; вывод байта на экран
0720   03E4 62          	MOV	h,d	 ; вторая плоскость
0721   03E5 70          	MOV		M, B	; вывод байта на экран
0722   03E6 63          	MOV	h,e	 ; третья плоскость
0723   03E7 C1          	POP		B	; прочитать два байта спрайта
0724   03E8 71          	MOV		M, C	; вывод байта на экран
0725   03E9 2C          	INR	l	 ; строка вверх на экране
0726   03EA 70          	MOV		M, B	; вывод байта на экран
0727   03EB 62          	MOV	h,d	 ; вторая плоскость
0728   03EC C1          	POP		B	; прочитать два байта спрайта
0729   03ED 71          	MOV		M, C	; вывод байта на экран
0730   03EE 67          	MOV	h,a	; первая плоскость
0731   03EF 70          	MOV		M, B	; вывод байта на экран
0732   03F0             ; строки 15 и 16
0733   03F0 2C          	INR	l	 ; строка вверх на экране
0734   03F1 C1          	POP		B	; прочитать два байта спрайта
0735   03F2 71          	MOV		M, C	; вывод байта на экран
0736   03F3 62          	MOV	h,d	 ; вторая плоскость
0737   03F4 70          	MOV		M, B	; вывод байта на экран
0738   03F5 63          	MOV	h,e	 ; третья плоскость
0739   03F6 C1          	POP		B	; прочитать два байта спрайта
0740   03F7 71          	MOV		M, C	; вывод байта на экран
0741   03F8 2C          	INR	l	 ; строка вверх на экране
0742   03F9 70          	MOV		M, B	; вывод байта на экран
0743   03FA 62          	MOV	h,d	 ; вторая плоскость
0744   03FB C1          	POP		B	; прочитать два байта спрайта
0745   03FC 71          	MOV		M, C	; вывод байта на экран
0746   03FD 67          	MOV	h,a	; первая плоскость
0747   03FE 70          	MOV		M, B	; вывод байта на экран
0748   03FF             ; строки 17 и 18
0749   03FF 2C          	INR	l	 ; строка вверх на экране
0750   0400 C1          	POP		B	; прочитать два байта спрайта
0751   0401 71          	MOV		M, C	; вывод байта на экран
0752   0402 62          	MOV	h,d	 ; вторая плоскость
0753   0403 70          	MOV		M, B	; вывод байта на экран
0754   0404 63          	MOV	h,e	 ; третья плоскость
0755   0405 C1          	POP		B	; прочитать два байта спрайта
0756   0406 71          	MOV		M, C	; вывод байта на экран
0757   0407 2C          	INR	l	 ; строка вверх на экране
0758   0408 70          	MOV		M, B	; вывод байта на экран
0759   0409 62          	MOV	h,d	 ; вторая плоскость
0760   040A C1          	POP		B	; прочитать два байта спрайта
0761   040B 71          	MOV		M, C	; вывод байта на экран
0762   040C 67          	MOV	h,a	; первая плоскость
0763   040D 70          	MOV		M, B	; вывод байта на экран
0764   040E             ; строки 19 и 20
0765   040E 2C          	INR	l	 ; строка вверх на экране
0766   040F C1          	POP		B	; прочитать два байта спрайта
0767   0410 71          	MOV		M, C	; вывод байта на экран
0768   0411 62          	MOV	h,d	 ; вторая плоскость
0769   0412 70          	MOV		M, B	; вывод байта на экран
0770   0413 63          	MOV	h,e	 ; третья плоскость
0771   0414 C1          	POP		B	; прочитать два байта спрайта
0772   0415 71          	MOV		M, C	; вывод байта на экран
0773   0416 2C          	INR	l	 ; строка вверх на экране
0774   0417 70          	MOV		M, B	; вывод байта на экран
0775   0418 62          	MOV	h,d	 ; вторая плоскость
0776   0419 C1          	POP		B	; прочитать два байта спрайта
0777   041A 71          	MOV		M, C	; вывод байта на экран
0778   041B 67          	MOV	h,a	; первая плоскость
0779   041C 70          	MOV		M, B	; вывод байта на экран
0780   041D             ; строки 21 и 22
0781   041D 2C          	INR	l	 ; строка вверх на экране
0782   041E C1          	POP		B	; прочитать два байта спрайта
0783   041F 71          	MOV		M, C	; вывод байта на экран
0784   0420 62          	MOV	h,d	 ; вторая плоскость
0785   0421 70          	MOV		M, B	; вывод байта на экран
0786   0422 63          	MOV	h,e	 ; третья плоскость
0787   0423 C1          	POP		B	; прочитать два байта спрайта
0788   0424 71          	MOV		M, C	; вывод байта на экран
0789   0425 2C          	INR	l	 ; строка вверх на экране
0790   0426 70          	MOV		M, B	; вывод байта на экран
0791   0427 62          	MOV	h,d	 ; вторая плоскость
0792   0428 C1          	POP		B	; прочитать два байта спрайта
0793   0429 71          	MOV		M, C	; вывод байта на экран
0794   042A 67          	MOV	h,a	; первая плоскость
0795   042B 70          	MOV		M, B	; вывод байта на экран
0796   042C             ; строки 23 и 24
0797   042C 2C          	INR	l	 ; строка вверх на экране
0798   042D C1          	POP		B	; прочитать два байта спрайта
0799   042E 71          	MOV		M, C	; вывод байта на экран
0800   042F 62          	MOV	h,d	 ; вторая плоскость
0801   0430 70          	MOV		M, B	; вывод байта на экран
0802   0431 63          	MOV	h,e	 ; третья плоскость
0803   0432 C1          	POP		B	; прочитать два байта спрайта
0804   0433 71          	MOV		M, C	; вывод байта на экран
0805   0434 2C          	INR	l	 ; строка вверх на экране
0806   0435 70          	MOV		M, B	; вывод байта на экран
0807   0436 62          	MOV	h,d	 ; вторая плоскость
0808   0437 C1          	POP		B	; прочитать два байта спрайта
0809   0438 71          	MOV		M, C	; вывод байта на экран
0810   0439 67          	MOV	h,a	; первая плоскость
0811   043A 70          	MOV		M, B	; вывод байта на экран
0812   043B             ;
0813   043B 14          	INR	d
0814   043C 1C          	INR	e
0815   043D 3C          	INR	a
0816   043E 67          	MOV	h,a
0817   043F 2E 00       spr2l:	MVI	l,0
0818   0441             ;
0819   0441 3E 03       spr2k:	MVI	a,3
0820   0443 3D          	DCR	a
0821   0444 32 42 04    	STA	spr2k+1
0822   0447 C2 87 03    	JNZ	spr2c6
0823   044A             ;
0824   044A C1          	POP		B	; пустое чтение
0825   044B             ;
0826   044B 31 00 00    spr2rd:	LXI	sp,0	; восстановление стека после вывода спрайта
0827   044E C9          			RET	; вЫход из подпрограммы вывода спрайта на экран
0828   044F             
0829   044F             
0830   044F             ;==========================================================
0831   044F             ;Вывод квадратика 24x24 точки в сразу в три плоскости для статичных объектов
0832   044F             ;стар вход HL - куда на экран выводить DE - адрес графики
0833   044F             ;нов вход de - куда на экран выводить bc - адрес графики
0834   044F             DrawSprite_metamorpho1:
0835   044F 62          	MOV H,D
0836   0450 6B          	MOV l,e
0837   0451 50          	MOV d,b
0838   0452 59          	MOV e,c
0839   0453             
0840   0453 7C          	MOV A,h ; сохраняем начало столбик X плоскость (1) куда выводим графику
0841   0454 32 F7 05    	STA pozic_xP1
0842   0457 7D          	MOV A,l
0843   0458 32 F6 05    	STA pozic_y; сохраняем начало строки Y куда выводим графику
0844   045B 3E 03       	MVI a,3
0845   045D 32 F5 05    	STA PLAST
0846   0460             
0847   0460 01 00 20    	LXI B,2000h
0848   0463             ;====================== строка 1
0849   0463             fumbingo:
0850   0463 1A          	LDAX D ; загружаем акумулятор А содержимым графики
0851   0464 77          	MOV M,A ; выводим в экран по адресу "HL" байт графики
0852   0465 13          	INX D ; DE=DE+1 увеличиваем адрес откуда брать графику
0853   0466 09          	DAD B ; адрес плоскости 2
0854   0467 1A          	LDAX D
0855   0468 77          	MOV M,A
0856   0469 13          	INX D
0857   046A 09          	DAD B ; адрес плоскости 3
0858   046B 1A          	LDAX D
0859   046C 77          	MOV M,A
0860   046D 13          	INX D
0861   046E             
0862   046E 2D          	DCR L ; ==================== строка 2
0863   046F 3A F7 05    	LDA pozic_xP1
0864   0472 67          	MOV H,A ; адрес плоскости 1
0865   0473 1A          	LDAX D
0866   0474 77          	MOV M,A
0867   0475 13          	INX D
0868   0476 09          	DAD B ; адрес плоскости 2
0869   0477 1A          	LDAX D
0870   0478 77          	MOV M,A
0871   0479 13          	INX D
0872   047A 09          	DAD B ; адрес плоскости 3
0873   047B 1A          	LDAX D
0874   047C 77          	MOV M,A
0875   047D 13          	INX D
0876   047E             
0877   047E 2D          	DCR L ; ==================== строка 3
0878   047F 3A F7 05    	LDA pozic_xP1
0879   0482 67          	MOV H,A ; адрес плоскости 1
0880   0483 1A          	LDAX D
0881   0484 77          	MOV M,A
0882   0485 13          	INX D
0883   0486 09          	DAD B ; адрес плоскости 2
0884   0487 1A          	LDAX D
0885   0488 77          	MOV M,A
0886   0489 13          	INX D
0887   048A 09          	DAD B ; адрес плоскости 3
0888   048B 1A          	LDAX D
0889   048C 77          	MOV M,A 	
0890   048D 13          	INX D
0891   048E             
0892   048E 2D          	DCR L ; ==================== строка 4
0893   048F 3A F7 05    	LDA pozic_xP1
0894   0492 67          	MOV H,A ; адрес плоскости 1
0895   0493 1A          	LDAX D
0896   0494 77          	MOV M,A
0897   0495 13          	INX D
0898   0496 09          	DAD B ; адрес плоскости 2
0899   0497 1A          	LDAX D
0900   0498 77          	MOV M,A
0901   0499 13          	INX D
0902   049A 09          	DAD B ; адрес плоскости 3
0903   049B 1A          	LDAX D
0904   049C 77          	MOV M,A
0905   049D 13          	INX D
0906   049E             
0907   049E 2D          	DCR L ; ==================== строка 5
0908   049F 3A F7 05    	LDA pozic_xP1
0909   04A2 67          	MOV H,A ; адрес плоскости 1
0910   04A3 1A          	LDAX D
0911   04A4 77          	MOV M,A
0912   04A5 13          	INX D
0913   04A6 09          	DAD B ; адрес плоскости 2
0914   04A7 1A          	LDAX D
0915   04A8 77          	MOV M,A
0916   04A9 13          	INX D
0917   04AA 09          	DAD B ; адрес плоскости 3
0918   04AB 1A          	LDAX D
0919   04AC 77          	MOV M,A
0920   04AD 13          	INX D
0921   04AE             
0922   04AE 2D          	DCR L ; ==================== строка 6
0923   04AF 3A F7 05    	LDA pozic_xP1
0924   04B2 67          	MOV H,A ; адрес плоскости 1
0925   04B3 1A          	LDAX D
0926   04B4 77          	MOV M,A
0927   04B5 13          	INX D
0928   04B6 09          	DAD B ; адрес плоскости 2
0929   04B7 1A          	LDAX D
0930   04B8 77          	MOV M,A
0931   04B9 13          	INX D
0932   04BA 09          	DAD B ; адрес плоскости 3
0933   04BB 1A          	LDAX D
0934   04BC 77          	MOV M,A
0935   04BD 13          	INX D
0936   04BE             
0937   04BE 2D          	DCR L ; ==================== строка 7
0938   04BF 3A F7 05    	LDA pozic_xP1
0939   04C2 67          	MOV H,A ; адрес плоскости 1
0940   04C3 1A          	LDAX D
0941   04C4 77          	MOV M,A
0942   04C5 13          	INX D
0943   04C6 09          	DAD B ; адрес плоскости 2
0944   04C7 1A          	LDAX D
0945   04C8 77          	MOV M,A
0946   04C9 13          	INX D
0947   04CA 09          	DAD B ; адрес плоскости 3
0948   04CB 1A          	LDAX D
0949   04CC 77          	MOV M,A
0950   04CD 13          	INX D
0951   04CE             
0952   04CE 2D          	DCR L ; ==================== строка 8
0953   04CF 3A F7 05    	LDA pozic_xP1
0954   04D2 67          	MOV H,A ; адрес плоскости 1
0955   04D3 1A          	LDAX D
0956   04D4 77          	MOV M,A
0957   04D5 13          	INX D
0958   04D6 09          	DAD B ; адрес плоскости 2
0959   04D7 1A          	LDAX D
0960   04D8 77          	MOV M,A
0961   04D9 13          	INX D
0962   04DA 09          	DAD B ; адрес плоскости 3
0963   04DB 1A          	LDAX D
0964   04DC 77          	MOV M,A
0965   04DD 13          	INX D
0966   04DE             
0967   04DE 2D          	DCR L ; ==================== строка 9
0968   04DF 3A F7 05    	LDA pozic_xP1
0969   04E2 67          	MOV H,A ; адрес плоскости 1
0970   04E3 1A          	LDAX D
0971   04E4 77          	MOV M,A
0972   04E5 13          	INX D
0973   04E6 09          	DAD B ; адрес плоскости 2
0974   04E7 1A          	LDAX D
0975   04E8 77          	MOV M,A
0976   04E9 13          	INX D
0977   04EA 09          	DAD B ; адрес плоскости 3
0978   04EB 1A          	LDAX D
0979   04EC 77          	MOV M,A
0980   04ED 13          	INX D
0981   04EE             
0982   04EE 2D          	DCR L ; ==================== строка 10
0983   04EF 3A F7 05    	LDA pozic_xP1
0984   04F2 67          	MOV H,A ; адрес плоскости 1
0985   04F3 1A          	LDAX D
0986   04F4 77          	MOV M,A
0987   04F5 13          	INX D
0988   04F6 09          	DAD B ; адрес плоскости 2
0989   04F7 1A          	LDAX D
0990   04F8 77          	MOV M,A
0991   04F9 13          	INX D
0992   04FA 09          	DAD B ; адрес плоскости 3
0993   04FB 1A          	LDAX D
0994   04FC 77          	MOV M,A
0995   04FD 13          	INX D
0996   04FE             
0997   04FE 2D          	DCR L ; ==================== строка 11
0998   04FF 3A F7 05    	LDA pozic_xP1
0999   0502 67          	MOV H,A ; адрес плоскости 1
1000   0503 1A          	LDAX D
1001   0504 77          	MOV M,A
1002   0505 13          	INX D
1003   0506 09          	DAD B ; адрес плоскости 2
1004   0507 1A          	LDAX D
1005   0508 77          	MOV M,A
1006   0509 13          	INX D
1007   050A 09          	DAD B ; адрес плоскости 3
1008   050B 1A          	LDAX D
1009   050C 77          	MOV M,A
1010   050D 13          	INX D
1011   050E             
1012   050E 2D          	DCR L ; ==================== строка 12
1013   050F 3A F7 05    	LDA pozic_xP1
1014   0512 67          	MOV H,A ; адрес плоскости 1
1015   0513 1A          	LDAX D
1016   0514 77          	MOV M,A
1017   0515 13          	INX D
1018   0516 09          	DAD B ; адрес плоскости 2
1019   0517 1A          	LDAX D  	
1020   0518 77          	MOV M,A
1021   0519 13          	INX D
1022   051A 09          	DAD B ; адрес плоскости 3
1023   051B 1A          	LDAX D
1024   051C 77          	MOV M,A
1025   051D 13          	INX D
1026   051E             
1027   051E 2D          	DCR L ; ==================== строка 13
1028   051F 3A F7 05    	LDA pozic_xP1
1029   0522 67          	MOV H,A ; адрес плоскости 1
1030   0523 1A          	LDAX D
1031   0524 77          	MOV M,A
1032   0525 13          	INX D
1033   0526 09          	DAD B ; адрес плоскости 2
1034   0527 1A          	LDAX D
1035   0528 77          	MOV M,A
1036   0529 13          	INX D
1037   052A 09          	DAD B ; адрес плоскости 3
1038   052B 1A          	LDAX D
1039   052C 77          	MOV M,A
1040   052D 13          	INX D
1041   052E             
1042   052E 2D          	DCR L ; ==================== строка 14
1043   052F 3A F7 05    	LDA pozic_xP1
1044   0532 67          	MOV H,A ; адрес плоскости 1
1045   0533 1A          	LDAX D
1046   0534 77          	MOV M,A
1047   0535 13          	INX D
1048   0536 09          	DAD B ; адрес плоскости 2
1049   0537 1A          	LDAX D
1050   0538 77          	MOV M,A
1051   0539 13          	INX D
1052   053A 09          	DAD B ; адрес плоскости 3
1053   053B 1A          	LDAX D
1054   053C 77          	MOV M,A
1055   053D 13          	INX D
1056   053E             
1057   053E 2D          	DCR L ; ==================== строка 15
1058   053F 3A F7 05    	LDA pozic_xP1
1059   0542 67          	MOV H,A ; адрес плоскости 1
1060   0543 1A          	LDAX D
1061   0544 77          	MOV M,A
1062   0545 13          	INX D
1063   0546 09          	DAD B ; адрес плоскости 2
1064   0547 1A          	LDAX D
1065   0548 77          	MOV M,A
1066   0549 13          	INX D
1067   054A 09          	DAD B ; адрес плоскости 3
1068   054B 1A          	LDAX D
1069   054C 77          	MOV M,A
1070   054D 13          	INX D
1071   054E             
1072   054E 2D          	DCR L ; ==================== строка 16
1073   054F 3A F7 05    	LDA pozic_xP1
1074   0552 67          	MOV H,A ; адрес плоскости 1
1075   0553 1A          	LDAX D
1076   0554 77          	MOV M,A
1077   0555 13          	INX D
1078   0556 09          	DAD B ; адрес плоскости 2
1079   0557 1A          	LDAX D
1080   0558 77          	MOV M,A
1081   0559 13          	INX D
1082   055A 09          	DAD B ; адрес плоскости 3
1083   055B 1A          	LDAX D
1084   055C 77          	MOV M,A
1085   055D 13          	INX D
1086   055E             
1087   055E 2D          	DCR L ; ==================== строка 17
1088   055F 3A F7 05    	LDA pozic_xP1
1089   0562 67          	MOV H,A ; адрес плоскости 1
1090   0563 1A          	LDAX D
1091   0564 77          	MOV M,A
1092   0565 13          	INX D
1093   0566 09          	DAD B ; адрес плоскости 2
1094   0567 1A          	LDAX D
1095   0568 77          	MOV M,A
1096   0569 13          	INX D
1097   056A 09          	DAD B ; адрес плоскости 3
1098   056B 1A          	LDAX D
1099   056C 77          	MOV M,A
1100   056D 13          	INX D
1101   056E             
1102   056E 2D          	DCR L ; ==================== строка 18
1103   056F 3A F7 05    	LDA pozic_xP1
1104   0572 67          	MOV H,A ; адрес плоскости 1
1105   0573 1A          	LDAX D
1106   0574 77          	MOV M,A
1107   0575 13          	INX D
1108   0576 09          	DAD B ; адрес плоскости 2
1109   0577 1A          	LDAX D
1110   0578 77          	MOV M,A
1111   0579 13          	INX D
1112   057A 09          	DAD B ; адрес плоскости 3
1113   057B 1A          	LDAX D
1114   057C 77          	MOV M,A
1115   057D 13          	INX D
1116   057E             
1117   057E 2D          	DCR L ; ==================== строка 19
1118   057F 3A F7 05    	LDA pozic_xP1
1119   0582 67          	MOV H,A ; адрес плоскости 1
1120   0583 1A          	LDAX D
1121   0584 77          	MOV M,A
1122   0585 13          	INX D
1123   0586 09          	DAD B ; адрес плоскости 2
1124   0587 1A          	LDAX D
1125   0588 77          	MOV M,A
1126   0589 13          	INX D
1127   058A 09          	DAD B ; адрес плоскости 3
1128   058B 1A          	LDAX D
1129   058C 77          	MOV M,A
1130   058D 13          	INX D
1131   058E             
1132   058E 2D          	DCR L ; ==================== строка 20
1133   058F 3A F7 05    	LDA pozic_xP1
1134   0592 67          	MOV H,A ; адрес плоскости 1
1135   0593 1A          	LDAX D
1136   0594 77          	MOV M,A
1137   0595 13          	INX D
1138   0596 09          	DAD B ; адрес плоскости 2
1139   0597 1A          	LDAX D
1140   0598 77          	MOV M,A
1141   0599 13          	INX D
1142   059A 09          	DAD B ; адрес плоскости 3
1143   059B 1A          	LDAX D
1144   059C 77          	MOV M,A
1145   059D 13          	INX D
1146   059E             
1147   059E 2D          	DCR L ; ==================== строка 21
1148   059F 3A F7 05    	LDA pozic_xP1
1149   05A2 67          	MOV H,A ; адрес плоскости 1
1150   05A3 1A          	LDAX D
1151   05A4 77          	MOV M,A
1152   05A5 13          	INX D
1153   05A6 09          	DAD B ; адрес плоскости 2
1154   05A7 1A          	LDAX D
1155   05A8 77          	MOV M,A
1156   05A9 13          	INX D
1157   05AA 09          	DAD B ; адрес плоскости 3
1158   05AB 1A          	LDAX D
1159   05AC 77          	MOV M,A
1160   05AD 13          	INX D
1161   05AE             
1162   05AE 2D          	DCR L ; ==================== строка 22
1163   05AF 3A F7 05    	LDA pozic_xP1
1164   05B2 67          	MOV H,A ; адрес плоскости 1
1165   05B3 1A          	LDAX D
1166   05B4 77          	MOV M,A
1167   05B5 13          	INX D
1168   05B6 09          	DAD B ; адрес плоскости 2
1169   05B7 1A          	LDAX D
1170   05B8 77          	MOV M,A
1171   05B9 13          	INX D
1172   05BA 09          	DAD B ; адрес плоскости 3
1173   05BB 1A          	LDAX D
1174   05BC 77          	MOV M,A
1175   05BD 13          	INX D
1176   05BE             
1177   05BE 2D          	DCR L ; ==================== строка 23
1178   05BF 3A F7 05    	LDA pozic_xP1
1179   05C2 67          	MOV H,A ; адрес плоскости 1
1180   05C3 1A          	LDAX D
1181   05C4 77          	MOV M,A
1182   05C5 13          	INX D
1183   05C6 09          	DAD B ; адрес плоскости 2
1184   05C7 1A          	LDAX D
1185   05C8 77          	MOV M,A
1186   05C9 13          	INX D
1187   05CA 09          	DAD B ; адрес плоскости 3
1188   05CB 1A          	LDAX D
1189   05CC 77          	MOV M,A
1190   05CD 13          	INX D
1191   05CE             
1192   05CE 2D          	DCR L ; ==================== строка 24
1193   05CF 3A F7 05    	LDA pozic_xP1
1194   05D2 67          	MOV H,A ; адрес плоскости 1
1195   05D3 1A          	LDAX D
1196   05D4 77          	MOV M,A
1197   05D5 13          	INX D
1198   05D6 09          	DAD B ; адрес плоскости 2
1199   05D7 1A          	LDAX D
1200   05D8 77          	MOV M,A
1201   05D9 13          	INX D
1202   05DA 09          	DAD B ; адрес плоскости 3
1203   05DB 1A          	LDAX D
1204   05DC 77          	MOV M,A
1205   05DD 13          	INX D
1206   05DE             
1207   05DE 3A F5 05    	LDA PLAST ; счётчик столбиков (всего 3)
1208   05E1 3D          	DCR a
1209   05E2 CA F4 05    	jz rimikoq ; если все три столбика нарисованы выходим из подпрограммы
1210   05E5             	
1211   05E5 32 F5 05    	STA PLAST
1212   05E8             	; следующий столбец X
1213   05E8 21 F7 05    	LXI H,pozic_xP1
1214   05EB 34          	INR M
1215   05EC 66          	MOV H,M
1216   05ED 3A F6 05    	LDA pozic_y
1217   05F0 6F          	MOV L,A ; восстанавливаем Y
1218   05F1 C3 63 04    	JMP fumbingo
1219   05F4             	
1220   05F4             rimikoq:
1221   05F4             ;=============
1222   05F4             ;
1223   05F4 C9          	RET ;иначе - выйти из п/п вывода квадратиков
1224   05F5             ;
1225   05F5 00          PLAST:	.DB	0
1226   05F6             pozic_y:
1227   05F6 00          	.DB	0
1228   05F7             pozic_xP1
1229   05F7 00          	.DB	0
1230   05F8             
1231   05F8             
1232   05F8             ;----------------------------------------------------------------
1233   05F8             ; draw a sprite (24x24 pixels)
1234   05F8             ; author: jerri
1235   05F8             ; method:
1236   05F8             ; in:
1237   05F8             ; BC	sprite data
1238   05F8             ; DE	screen address (x,y)
1239   05F8             
1240   05F8             DrawSprite_Jerri_unrolled:
1241   05F8 21 00 00    			LXI		H, 0
1242   05FB 39          			DAD		SP
1243   05FC 22 42 08    			SHLD	sprite_sp0_2 + 1
1244   05FF 60          			MOV		H, B
1245   0600 69          			MOV		L, C
1246   0601 4E          			MOV		C, M
1247   0602 23          			INX		H
1248   0603 46          			MOV		B, M
1249   0604 23          			INX		H
1250   0605 F9          			SPHL
1251   0606             	
1252   0606             			;задаем Y в L
1253   0606 6B          			MOV		L, E	;			(8)
1254   0607             			;задаем X в A
1255   0607 7A          			MOV		A, D	;битплан1	(8)
1256   0608 C6 20       			ADI		$20		;			(8)
1257   060A 5F          			MOV		E, A	;битплан2	(8)
1258   060B C6 20       			ADI		$20		;битплан3	(8)
1259   060D             							;			(40) total
1260   060D             
1261   060D             
1262   060D 62          	MOV	h,d
1263   060E             ;рисуем на первом плане
1264   060E 71          	MOV		M, C
1265   060F 24          	INR		H
1266   0610 70          	MOV		M, B
1267   0611 24          	INR		H
1268   0612 C1          	POP		B
1269   0613 71          	MOV		M, C
1270   0614             ;переход на второй битплан
1271   0614 63          	MOV	h,e
1272   0615             ;рисуем на втором плане
1273   0615 70          	MOV		M, B
1274   0616 24          	INR		H
1275   0617 C1          	POP		B
1276   0618 71          	MOV		M, C
1277   0619 24          	INR		H
1278   061A 70          	MOV		M, B
1279   061B C1          	POP		B
1280   061C             ;переход на третий битплан
1281   061C 67          	MOV	h,a
1282   061D             ;рисуем на третьем плане
1283   061D 71          	MOV		M, C
1284   061E 24          	INR		H
1285   061F 70          	MOV		M, B
1286   0620 24          	INR		H
1287   0621 C1          	POP		B
1288   0622 71          	MOV		M, C
1289   0623             ;переходим на следующую строку
1290   0623 2C          	INR	l	
1291   0624             ;возвращаемся на первый план	
1292   0624 62          	MOV	h,d
1293   0625             ;повторяем цикл рисования
1294   0625 70          	MOV		M, B
1295   0626 24          	INR		H
1296   0627 C1          	POP		B
1297   0628 71          	MOV		M, C
1298   0629 24          	INR		H
1299   062A 70          	MOV		M, B
1300   062B C1          	POP		B
1301   062C             ;переход на второй битплан
1302   062C 63          	MOV	h,e
1303   062D             ;рисуем на втором плане
1304   062D 71          	MOV		M, C
1305   062E 24          	INR		H
1306   062F 70          	MOV		M, B
1307   0630 24          	INR		H
1308   0631 C1          	POP		B
1309   0632 71          	MOV		M, C
1310   0633             ;переход на третий битплан
1311   0633 67          	MOV	h,a
1312   0634             ;рисуем на третьем плане
1313   0634 70          	MOV		M, B
1314   0635 24          	INR		H
1315   0636 C1          	POP		B
1316   0637 71          	MOV		M, C
1317   0638 24          	INR		H
1318   0639 70          	MOV		M, B
1319   063A             ;выбираем следующую пару байтов для цикла рисования
1320   063A 2C          	INR	l	
1321   063B C1          	POP		B
1322   063C             ;	
1323   063C 62          	MOV	h,d
1324   063D             ;рисуем на первом плане
1325   063D 71          	MOV		M, C
1326   063E 24          	INR		H
1327   063F 70          	MOV		M, B
1328   0640 24          	INR		H
1329   0641 C1          	POP		B
1330   0642 71          	MOV		M, C
1331   0643             ;переход на второй битплан
1332   0643 63          	MOV	h,e
1333   0644             ;рисуем на втором плане
1334   0644 70          	MOV		M, B
1335   0645 24          	INR		H
1336   0646 C1          	POP		B
1337   0647 71          	MOV		M, C
1338   0648 24          	INR		H
1339   0649 70          	MOV		M, B
1340   064A C1          	POP		B
1341   064B             ;переход на третий битплан
1342   064B 67          	MOV	h,a
1343   064C             ;рисуем на третьем плане
1344   064C 71          	MOV		M, C
1345   064D 24          	INR		H
1346   064E 70          	MOV		M, B
1347   064F 24          	INR		H
1348   0650 C1          	POP		B
1349   0651 71          	MOV		M, C
1350   0652             ;переходим на следующую строку
1351   0652 2C          	INR	l	
1352   0653             ;возвращаемся на первый план	
1353   0653 62          	MOV	h,d
1354   0654             ;повторяем цикл рисования
1355   0654 70          	MOV		M, B
1356   0655 24          	INR		H
1357   0656 C1          	POP		B
1358   0657 71          	MOV		M, C
1359   0658 24          	INR		H
1360   0659 70          	MOV		M, B
1361   065A C1          	POP		B
1362   065B             ;переход на второй битплан
1363   065B 63          	MOV	h,e
1364   065C             ;рисуем на втором плане
1365   065C 71          	MOV		M, C
1366   065D 24          	INR		H
1367   065E 70          	MOV		M, B
1368   065F 24          	INR		H
1369   0660 C1          	POP		B
1370   0661 71          	MOV		M, C
1371   0662             ;переход на третий битплан
1372   0662 67          	MOV	h,a
1373   0663             ;рисуем на третьем плане
1374   0663 70          	MOV		M, B
1375   0664 24          	INR		H
1376   0665 C1          	POP		B
1377   0666 71          	MOV		M, C
1378   0667 24          	INR		H
1379   0668 70          	MOV		M, B
1380   0669             ;выбираем следующую пару байтов для цикла рисования
1381   0669 2C          	INR	l	
1382   066A C1          	POP		B
1383   066B             ;	
1384   066B 62          	MOV	h,d
1385   066C             ;рисуем на первом плане
1386   066C 71          	MOV		M, C
1387   066D 24          	INR		H
1388   066E 70          	MOV		M, B
1389   066F 24          	INR		H
1390   0670 C1          	POP		B
1391   0671 71          	MOV		M, C
1392   0672             ;переход на второй битплан
1393   0672 63          	MOV	h,e
1394   0673             ;рисуем на втором плане
1395   0673 70          	MOV		M, B
1396   0674 24          	INR		H
1397   0675 C1          	POP		B
1398   0676 71          	MOV		M, C
1399   0677 24          	INR		H
1400   0678 70          	MOV		M, B
1401   0679 C1          	POP		B
1402   067A             ;переход на третий битплан
1403   067A 67          	MOV	h,a
1404   067B             ;рисуем на третьем плане
1405   067B 71          	MOV		M, C
1406   067C 24          	INR		H
1407   067D 70          	MOV		M, B
1408   067E 24          	INR		H
1409   067F C1          	POP		B
1410   0680 71          	MOV		M, C
1411   0681             ;переходим на следующую строку
1412   0681 2C          	INR	l	
1413   0682             ;возвращаемся на первый план	
1414   0682 62          	MOV	h,d
1415   0683             ;повторяем цикл рисования
1416   0683 70          	MOV		M, B
1417   0684 24          	INR		H
1418   0685 C1          	POP		B
1419   0686 71          	MOV		M, C
1420   0687 24          	INR		H
1421   0688 70          	MOV		M, B
1422   0689 C1          	POP		B
1423   068A             ;переход на второй битплан
1424   068A 63          	MOV	h,e
1425   068B             ;рисуем на втором плане
1426   068B 71          	MOV		M, C
1427   068C 24          	INR		H
1428   068D 70          	MOV		M, B
1429   068E 24          	INR		H
1430   068F C1          	POP		B
1431   0690 71          	MOV		M, C
1432   0691             ;переход на третий битплан
1433   0691 67          	MOV	h,a
1434   0692             ;рисуем на третьем плане
1435   0692 70          	MOV		M, B
1436   0693 24          	INR		H
1437   0694 C1          	POP		B
1438   0695 71          	MOV		M, C
1439   0696 24          	INR		H
1440   0697 70          	MOV		M, B
1441   0698             ;выбираем следующую пару байтов для цикла рисования
1442   0698 2C          	INR	l	
1443   0699 C1          	POP		B
1444   069A             ;	
1445   069A 62          	MOV	h,d
1446   069B             ;рисуем на первом плане
1447   069B 71          	MOV		M, C
1448   069C 24          	INR		H
1449   069D 70          	MOV		M, B
1450   069E 24          	INR		H
1451   069F C1          	POP		B
1452   06A0 71          	MOV		M, C
1453   06A1             ;переход на второй битплан
1454   06A1 63          	MOV	h,e
1455   06A2             ;рисуем на втором плане
1456   06A2 70          	MOV		M, B
1457   06A3 24          	INR		H
1458   06A4 C1          	POP		B
1459   06A5 71          	MOV		M, C
1460   06A6 24          	INR		H
1461   06A7 70          	MOV		M, B
1462   06A8 C1          	POP		B
1463   06A9             ;переход на третий битплан
1464   06A9 67          	MOV	h,a
1465   06AA             ;рисуем на третьем плане
1466   06AA 71          	MOV		M, C
1467   06AB 24          	INR		H
1468   06AC 70          	MOV		M, B
1469   06AD 24          	INR		H
1470   06AE C1          	POP		B
1471   06AF 71          	MOV		M, C
1472   06B0             ;переходим на следующую строку
1473   06B0 2C          	INR	l	
1474   06B1             ;возвращаемся на первый план	
1475   06B1 62          	MOV	h,d
1476   06B2             ;повторяем цикл рисования
1477   06B2 70          	MOV		M, B
1478   06B3 24          	INR		H
1479   06B4 C1          	POP		B
1480   06B5 71          	MOV		M, C
1481   06B6 24          	INR		H
1482   06B7 70          	MOV		M, B
1483   06B8 C1          	POP		B
1484   06B9             ;переход на второй битплан
1485   06B9 63          	MOV	h,e
1486   06BA             ;рисуем на втором плане
1487   06BA 71          	MOV		M, C
1488   06BB 24          	INR		H
1489   06BC 70          	MOV		M, B
1490   06BD 24          	INR		H
1491   06BE C1          	POP		B
1492   06BF 71          	MOV		M, C
1493   06C0             ;переход на третий битплан
1494   06C0 67          	MOV	h,a
1495   06C1             ;рисуем на третьем плане
1496   06C1 70          	MOV		M, B
1497   06C2 24          	INR		H
1498   06C3 C1          	POP		B
1499   06C4 71          	MOV		M, C
1500   06C5 24          	INR		H
1501   06C6 70          	MOV		M, B
1502   06C7             ;выбираем следующую пару байтов для цикла рисования
1503   06C7 2C          	INR	l	
1504   06C8 C1          	POP		B
1505   06C9             ;	
1506   06C9 62          	MOV	h,d
1507   06CA             ;рисуем на первом плане
1508   06CA 71          	MOV		M, C
1509   06CB 24          	INR		H
1510   06CC 70          	MOV		M, B
1511   06CD 24          	INR		H
1512   06CE C1          	POP		B
1513   06CF 71          	MOV		M, C
1514   06D0             ;переход на второй битплан
1515   06D0 63          	MOV	h,e
1516   06D1             ;рисуем на втором плане
1517   06D1 70          	MOV		M, B
1518   06D2 24          	INR		H
1519   06D3 C1          	POP		B
1520   06D4 71          	MOV		M, C
1521   06D5 24          	INR		H
1522   06D6 70          	MOV		M, B
1523   06D7 C1          	POP		B
1524   06D8             ;переход на третий битплан
1525   06D8 67          	MOV	h,a
1526   06D9             ;рисуем на третьем плане
1527   06D9 71          	MOV		M, C
1528   06DA 24          	INR		H
1529   06DB 70          	MOV		M, B
1530   06DC 24          	INR		H
1531   06DD C1          	POP		B
1532   06DE 71          	MOV		M, C
1533   06DF             ;переходим на следующую строку
1534   06DF 2C          	INR	l	
1535   06E0             ;возвращаемся на первый план	
1536   06E0 62          	MOV	h,d
1537   06E1             ;повторяем цикл рисования
1538   06E1 70          	MOV		M, B
1539   06E2 24          	INR		H
1540   06E3 C1          	POP		B
1541   06E4 71          	MOV		M, C
1542   06E5 24          	INR		H
1543   06E6 70          	MOV		M, B
1544   06E7 C1          	POP		B
1545   06E8             ;переход на второй битплан
1546   06E8 63          	MOV	h,e
1547   06E9             ;рисуем на втором плане
1548   06E9 71          	MOV		M, C
1549   06EA 24          	INR		H
1550   06EB 70          	MOV		M, B
1551   06EC 24          	INR		H
1552   06ED C1          	POP		B
1553   06EE 71          	MOV		M, C
1554   06EF             ;переход на третий битплан
1555   06EF 67          	MOV	h,a
1556   06F0             ;рисуем на третьем плане
1557   06F0 70          	MOV		M, B
1558   06F1 24          	INR		H
1559   06F2 C1          	POP		B
1560   06F3 71          	MOV		M, C
1561   06F4 24          	INR		H
1562   06F5 70          	MOV		M, B
1563   06F6             ;выбираем следующую пару байтов для цикла рисования
1564   06F6 2C          	INR	l	
1565   06F7 C1          	POP		B
1566   06F8             ;	
1567   06F8 62          	MOV	h,d
1568   06F9             ;рисуем на первом плане
1569   06F9 71          	MOV		M, C
1570   06FA 24          	INR		H
1571   06FB 70          	MOV		M, B
1572   06FC 24          	INR		H
1573   06FD C1          	POP		B
1574   06FE 71          	MOV		M, C
1575   06FF             ;переход на второй битплан
1576   06FF 63          	MOV	h,e
1577   0700             ;рисуем на втором плане
1578   0700 70          	MOV		M, B
1579   0701 24          	INR		H
1580   0702 C1          	POP		B
1581   0703 71          	MOV		M, C
1582   0704 24          	INR		H
1583   0705 70          	MOV		M, B
1584   0706 C1          	POP		B
1585   0707             ;переход на третий битплан
1586   0707 67          	MOV	h,a
1587   0708             ;рисуем на третьем плане
1588   0708 71          	MOV		M, C
1589   0709 24          	INR		H
1590   070A 70          	MOV		M, B
1591   070B 24          	INR		H
1592   070C C1          	POP		B
1593   070D 71          	MOV		M, C
1594   070E             ;переходим на следующую строку
1595   070E 2C          	INR	l	
1596   070F             ;возвращаемся на первый план	
1597   070F 62          	MOV	h,d
1598   0710             ;повторяем цикл рисования
1599   0710 70          	MOV		M, B
1600   0711 24          	INR		H
1601   0712 C1          	POP		B
1602   0713 71          	MOV		M, C
1603   0714 24          	INR		H
1604   0715 70          	MOV		M, B
1605   0716 C1          	POP		B
1606   0717             ;переход на второй битплан
1607   0717 63          	MOV	h,e
1608   0718             ;рисуем на втором плане
1609   0718 71          	MOV		M, C
1610   0719 24          	INR		H
1611   071A 70          	MOV		M, B
1612   071B 24          	INR		H
1613   071C C1          	POP		B
1614   071D 71          	MOV		M, C
1615   071E             ;переход на третий битплан
1616   071E 67          	MOV	h,a
1617   071F             ;рисуем на третьем плане
1618   071F 70          	MOV		M, B
1619   0720 24          	INR		H
1620   0721 C1          	POP		B
1621   0722 71          	MOV		M, C
1622   0723 24          	INR		H
1623   0724 70          	MOV		M, B
1624   0725             ;выбираем следующую пару байтов для цикла рисования
1625   0725 2C          	INR	l	
1626   0726 C1          	POP		B
1627   0727             ;	
1628   0727 62          	MOV	h,d
1629   0728             ;рисуем на первом плане
1630   0728 71          	MOV		M, C
1631   0729 24          	INR		H
1632   072A 70          	MOV		M, B
1633   072B 24          	INR		H
1634   072C C1          	POP		B
1635   072D 71          	MOV		M, C
1636   072E             ;переход на второй битплан
1637   072E 63          	MOV	h,e
1638   072F             ;рисуем на втором плане
1639   072F 70          	MOV		M, B
1640   0730 24          	INR		H
1641   0731 C1          	POP		B
1642   0732 71          	MOV		M, C
1643   0733 24          	INR		H
1644   0734 70          	MOV		M, B
1645   0735 C1          	POP		B
1646   0736             ;переход на третий битплан
1647   0736 67          	MOV	h,a
1648   0737             ;рисуем на третьем плане
1649   0737 71          	MOV		M, C
1650   0738 24          	INR		H
1651   0739 70          	MOV		M, B
1652   073A 24          	INR		H
1653   073B C1          	POP		B
1654   073C 71          	MOV		M, C
1655   073D             ;переходим на следующую строку
1656   073D 2C          	INR	l	
1657   073E             ;возвращаемся на первый план	
1658   073E 62          	MOV	h,d
1659   073F             ;повторяем цикл рисования
1660   073F 70          	MOV		M, B
1661   0740 24          	INR		H
1662   0741 C1          	POP		B
1663   0742 71          	MOV		M, C
1664   0743 24          	INR		H
1665   0744 70          	MOV		M, B
1666   0745 C1          	POP		B
1667   0746             ;переход на второй битплан
1668   0746 63          	MOV	h,e
1669   0747             ;рисуем на втором плане
1670   0747 71          	MOV		M, C
1671   0748 24          	INR		H
1672   0749 70          	MOV		M, B
1673   074A 24          	INR		H
1674   074B C1          	POP		B
1675   074C 71          	MOV		M, C
1676   074D             ;переход на третий битплан
1677   074D 67          	MOV	h,a
1678   074E             ;рисуем на третьем плане
1679   074E 70          	MOV		M, B
1680   074F 24          	INR		H
1681   0750 C1          	POP		B
1682   0751 71          	MOV		M, C
1683   0752 24          	INR		H
1684   0753 70          	MOV		M, B
1685   0754             ;выбираем следующую пару байтов для цикла рисования
1686   0754 2C          	INR	l	
1687   0755 C1          	POP		B
1688   0756             ;	
1689   0756 62          	MOV	h,d
1690   0757             ;рисуем на первом плане
1691   0757 71          	MOV		M, C
1692   0758 24          	INR		H
1693   0759 70          	MOV		M, B
1694   075A 24          	INR		H
1695   075B C1          	POP		B
1696   075C 71          	MOV		M, C
1697   075D             ;переход на второй битплан
1698   075D 63          	MOV	h,e
1699   075E             ;рисуем на втором плане
1700   075E 70          	MOV		M, B
1701   075F 24          	INR		H
1702   0760 C1          	POP		B
1703   0761 71          	MOV		M, C
1704   0762 24          	INR		H
1705   0763 70          	MOV		M, B
1706   0764 C1          	POP		B
1707   0765             ;переход на третий битплан
1708   0765 67          	MOV	h,a
1709   0766             ;рисуем на третьем плане
1710   0766 71          	MOV		M, C
1711   0767 24          	INR		H
1712   0768 70          	MOV		M, B
1713   0769 24          	INR		H
1714   076A C1          	POP		B
1715   076B 71          	MOV		M, C
1716   076C             ;переходим на следующую строку
1717   076C 2C          	INR	l	
1718   076D             ;возвращаемся на первый план	
1719   076D 62          	MOV	h,d
1720   076E             ;повторяем цикл рисования
1721   076E 70          	MOV		M, B
1722   076F 24          	INR		H
1723   0770 C1          	POP		B
1724   0771 71          	MOV		M, C
1725   0772 24          	INR		H
1726   0773 70          	MOV		M, B
1727   0774 C1          	POP		B
1728   0775             ;переход на второй битплан
1729   0775 63          	MOV	h,e
1730   0776             ;рисуем на втором плане
1731   0776 71          	MOV		M, C
1732   0777 24          	INR		H
1733   0778 70          	MOV		M, B
1734   0779 24          	INR		H
1735   077A C1          	POP		B
1736   077B 71          	MOV		M, C
1737   077C             ;переход на третий битплан
1738   077C 67          	MOV	h,a
1739   077D             ;рисуем на третьем плане
1740   077D 70          	MOV		M, B
1741   077E 24          	INR		H
1742   077F C1          	POP		B
1743   0780 71          	MOV		M, C
1744   0781 24          	INR		H
1745   0782 70          	MOV		M, B
1746   0783             ;выбираем следующую пару байтов для цикла рисования
1747   0783 2C          	INR	l	
1748   0784 C1          	POP		B
1749   0785             ;	
1750   0785 62          	MOV	h,d
1751   0786             ;рисуем на первом плане
1752   0786 71          	MOV		M, C
1753   0787 24          	INR		H
1754   0788 70          	MOV		M, B
1755   0789 24          	INR		H
1756   078A C1          	POP		B
1757   078B 71          	MOV		M, C
1758   078C             ;переход на второй битплан
1759   078C 63          	MOV	h,e
1760   078D             ;рисуем на втором плане
1761   078D 70          	MOV		M, B
1762   078E 24          	INR		H
1763   078F C1          	POP		B
1764   0790 71          	MOV		M, C
1765   0791 24          	INR		H
1766   0792 70          	MOV		M, B
1767   0793 C1          	POP		B
1768   0794             ;переход на третий битплан
1769   0794 67          	MOV	h,a
1770   0795             ;рисуем на третьем плане
1771   0795 71          	MOV		M, C
1772   0796 24          	INR		H
1773   0797 70          	MOV		M, B
1774   0798 24          	INR		H
1775   0799 C1          	POP		B
1776   079A 71          	MOV		M, C
1777   079B             ;переходим на следующую строку
1778   079B 2C          	INR	l	
1779   079C             ;возвращаемся на первый план	
1780   079C 62          	MOV	h,d
1781   079D             ;повторяем цикл рисования
1782   079D 70          	MOV		M, B
1783   079E 24          	INR		H
1784   079F C1          	POP		B
1785   07A0 71          	MOV		M, C
1786   07A1 24          	INR		H
1787   07A2 70          	MOV		M, B
1788   07A3 C1          	POP		B
1789   07A4             ;переход на второй битплан
1790   07A4 63          	MOV	h,e
1791   07A5             ;рисуем на втором плане
1792   07A5 71          	MOV		M, C
1793   07A6 24          	INR		H
1794   07A7 70          	MOV		M, B
1795   07A8 24          	INR		H
1796   07A9 C1          	POP		B
1797   07AA 71          	MOV		M, C
1798   07AB             ;переход на третий битплан
1799   07AB 67          	MOV	h,a
1800   07AC             ;рисуем на третьем плане
1801   07AC 70          	MOV		M, B
1802   07AD 24          	INR		H
1803   07AE C1          	POP		B
1804   07AF 71          	MOV		M, C
1805   07B0 24          	INR		H
1806   07B1 70          	MOV		M, B
1807   07B2             ;выбираем следующую пару байтов для цикла рисования
1808   07B2 2C          	INR	l	
1809   07B3 C1          	POP		B
1810   07B4             ;	
1811   07B4 62          	MOV	h,d
1812   07B5             ;рисуем на первом плане
1813   07B5 71          	MOV		M, C
1814   07B6 24          	INR		H
1815   07B7 70          	MOV		M, B
1816   07B8 24          	INR		H
1817   07B9 C1          	POP		B
1818   07BA 71          	MOV		M, C
1819   07BB             ;переход на второй битплан
1820   07BB 63          	MOV	h,e
1821   07BC             ;рисуем на втором плане
1822   07BC 70          	MOV		M, B
1823   07BD 24          	INR		H
1824   07BE C1          	POP		B
1825   07BF 71          	MOV		M, C
1826   07C0 24          	INR		H
1827   07C1 70          	MOV		M, B
1828   07C2 C1          	POP		B
1829   07C3             ;переход на третий битплан
1830   07C3 67          	MOV	h,a
1831   07C4             ;рисуем на третьем плане
1832   07C4 71          	MOV		M, C
1833   07C5 24          	INR		H
1834   07C6 70          	MOV		M, B
1835   07C7 24          	INR		H
1836   07C8 C1          	POP		B
1837   07C9 71          	MOV		M, C
1838   07CA             ;переходим на следующую строку
1839   07CA 2C          	INR	l	
1840   07CB             ;возвращаемся на первый план	
1841   07CB 62          	MOV	h,d
1842   07CC             ;повторяем цикл рисования
1843   07CC 70          	MOV		M, B
1844   07CD 24          	INR		H
1845   07CE C1          	POP		B
1846   07CF 71          	MOV		M, C
1847   07D0 24          	INR		H
1848   07D1 70          	MOV		M, B
1849   07D2 C1          	POP		B
1850   07D3             ;переход на второй битплан
1851   07D3 63          	MOV	h,e
1852   07D4             ;рисуем на втором плане
1853   07D4 71          	MOV		M, C
1854   07D5 24          	INR		H
1855   07D6 70          	MOV		M, B
1856   07D7 24          	INR		H
1857   07D8 C1          	POP		B
1858   07D9 71          	MOV		M, C
1859   07DA             ;переход на третий битплан
1860   07DA 67          	MOV	h,a
1861   07DB             ;рисуем на третьем плане
1862   07DB 70          	MOV		M, B
1863   07DC 24          	INR		H
1864   07DD C1          	POP		B
1865   07DE 71          	MOV		M, C
1866   07DF 24          	INR		H
1867   07E0 70          	MOV		M, B
1868   07E1             ;выбираем следующую пару байтов для цикла рисования
1869   07E1 2C          	INR	l	
1870   07E2 C1          	POP		B
1871   07E3             ;	
1872   07E3 62          	MOV	h,d
1873   07E4             ;рисуем на первом плане
1874   07E4 71          	MOV		M, C
1875   07E5 24          	INR		H
1876   07E6 70          	MOV		M, B
1877   07E7 24          	INR		H
1878   07E8 C1          	POP		B
1879   07E9 71          	MOV		M, C
1880   07EA             ;переход на второй битплан
1881   07EA 63          	MOV	h,e
1882   07EB             ;рисуем на втором плане
1883   07EB 70          	MOV		M, B
1884   07EC 24          	INR		H
1885   07ED C1          	POP		B
1886   07EE 71          	MOV		M, C
1887   07EF 24          	INR		H
1888   07F0 70          	MOV		M, B
1889   07F1 C1          	POP		B
1890   07F2             ;переход на третий битплан
1891   07F2 67          	MOV	h,a
1892   07F3             ;рисуем на третьем плане
1893   07F3 71          	MOV		M, C
1894   07F4 24          	INR		H
1895   07F5 70          	MOV		M, B
1896   07F6 24          	INR		H
1897   07F7 C1          	POP		B
1898   07F8 71          	MOV		M, C
1899   07F9             ;переходим на следующую строку
1900   07F9 2C          	INR	l	
1901   07FA             ;возвращаемся на первый план	
1902   07FA 62          	MOV	h,d
1903   07FB             ;повторяем цикл рисования
1904   07FB 70          	MOV		M, B
1905   07FC 24          	INR		H
1906   07FD C1          	POP		B
1907   07FE 71          	MOV		M, C
1908   07FF 24          	INR		H
1909   0800 70          	MOV		M, B
1910   0801 C1          	POP		B
1911   0802             ;переход на второй битплан
1912   0802 63          	MOV	h,e
1913   0803             ;рисуем на втором плане
1914   0803 71          	MOV		M, C
1915   0804 24          	INR		H
1916   0805 70          	MOV		M, B
1917   0806 24          	INR		H
1918   0807 C1          	POP		B
1919   0808 71          	MOV		M, C
1920   0809             ;переход на третий битплан
1921   0809 67          	MOV	h,a
1922   080A             ;рисуем на третьем плане
1923   080A 70          	MOV		M, B
1924   080B 24          	INR		H
1925   080C C1          	POP		B
1926   080D 71          	MOV		M, C
1927   080E 24          	INR		H
1928   080F 70          	MOV		M, B
1929   0810             ;выбираем следующую пару байтов для цикла рисования
1930   0810 2C          	INR	l	
1931   0811 C1          	POP		B
1932   0812             ;	
1933   0812 62          	MOV	h,d
1934   0813             ;рисуем на первом плане
1935   0813 71          	MOV		M, C
1936   0814 24          	INR		H
1937   0815 70          	MOV		M, B
1938   0816 24          	INR		H
1939   0817 C1          	POP		B
1940   0818 71          	MOV		M, C
1941   0819             ;переход на второй битплан
1942   0819 63          	MOV	h,e
1943   081A             ;рисуем на втором плане
1944   081A 70          	MOV		M, B
1945   081B 24          	INR		H
1946   081C C1          	POP		B
1947   081D 71          	MOV		M, C
1948   081E 24          	INR		H
1949   081F 70          	MOV		M, B
1950   0820 C1          	POP		B
1951   0821             ;переход на третий битплан
1952   0821 67          	MOV	h,a
1953   0822             ;рисуем на третьем плане
1954   0822 71          	MOV		M, C
1955   0823 24          	INR		H
1956   0824 70          	MOV		M, B
1957   0825 24          	INR		H
1958   0826 C1          	POP		B
1959   0827 71          	MOV		M, C
1960   0828             ;переходим на следующую строку
1961   0828 2C          	INR	l	
1962   0829             ;возвращаемся на первый план	
1963   0829 62          	MOV	h,d
1964   082A             ;повторяем цикл рисования
1965   082A 70          	MOV		M, B
1966   082B 24          	INR		H
1967   082C C1          	POP		B
1968   082D 71          	MOV		M, C
1969   082E 24          	INR		H
1970   082F 70          	MOV		M, B
1971   0830 C1          	POP		B
1972   0831             ;переход на второй битплан
1973   0831 63          	MOV	h,e
1974   0832             ;рисуем на втором плане
1975   0832 71          	MOV		M, C
1976   0833 24          	INR		H
1977   0834 70          	MOV		M, B
1978   0835 24          	INR		H
1979   0836 C1          	POP		B
1980   0837 71          	MOV		M, C
1981   0838             ;переход на третий битплан
1982   0838 67          	MOV	h,a
1983   0839             ;рисуем на третьем плане
1984   0839 70          	MOV		M, B
1985   083A 24          	INR		H
1986   083B C1          	POP		B
1987   083C 71          	MOV		M, C
1988   083D 24          	INR		H
1989   083E 70          	MOV		M, B
1990   083F             ;выбираем следующую пару байтов для цикла рисования
1991   083F 2C          	INR	l	
1992   0840 C1          	POP		B
1993   0841             ;	
1994   0841             sprite_sp0_2:
1995   0841 31 31 31    	LXI	sp,$3131
1996   0844 C9          	RET
1997   0845             
1998   0845             ;----------------------------------------------------------------
1999   0845             ; draw a sprite (24x24 pixels)
2000   0845             ; author ivagor
2001   0845             ; method: zig-zag, unrolled
2002   0845             
2003   0845             ; in:
2004   0845             ; BC	sprite data
2005   0845             ; DE	screen address (x,y)
2006   0845             		.MODULE DS_ivagor
2007   0845             DrawSprite_ivagor:
2008   0845             		; store SP
2009   0845 21 00 00    		LXI		H,0				; (12)
2010   0848 39          		DAD		SP				; (12)
2011   0849 22 79 0A    		SHLD	_restoreSP+1	; (20)
2012   084C             		; HL = BC
2013   084C 60          		MOV		H, B			; (8)
2014   084D 69          		MOV		L, C			; (8)
2015   084E             		; BC = (HL), HL +=2
2016   084E 4E          		MOV		C, M			; (8)
2017   084F 23          		INX		H				; (8)
2018   0850 46          		MOV		B, M			; (8)
2019   0851 23          		INX		H				; (8)
2020   0852             		; SP = HL
2021   0852 F9          		SPHL					; (8)
2022   0853             		
2023   0853             		; HL = DE
2024   0853 EB          		XCHG					; (4)
2025   0854             		; D = screen X
2026   0854 54          		MOV		D, H			; (8)
2027   0855             		; E = second screen X
2028   0855 3E 20       		MVI		A, 20h			; (8)
2029   0857 82          		ADD		D
2030   0858 5F          		MOV		E, A
2031   0859             		; A = third screen X
2032   0859 3E 20       		MVI		A, 20h			; (8)
2033   085B 83          		ADD		E				; (4)
2034   085C             		; X += 2
2035   085C 24          		INR		H				; (8)
2036   085D 24          		INR		H				; (8)
2037   085E             
2038   085E             ; HL = screen address (X + 2, Y)
2039   085E             ; SP = data + 2
2040   085E             
2041   085E             #DEFINE 	DRAW_BACKWARD_LINE_IVAGOR	\
2042   085E             #DEFCONT \	POP B\ MOV M,C\ DCR H\ MOV M,B\ DCR H\ POP B\ MOV M,C
2043   085E             #DEFCONT \	MOV H,E\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2044   085E             #DEFCONT \	MOV h,a\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2045   085E             #DEFCONT \	DCR L
2046   085E             
2047   085E             #DEFINE 	DRAW_FORWARD_LINE_IVAGOR	\
2048   085E             #DEFCONT \	MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2049   085E             #DEFCONT \	MOV H,E\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2050   085E             #DEFCONT \	MOV H,D\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2051   085E             #DEFCONT \	DCR L
2052   085E             
2053   085E             			; first line
2054   085E 71          			MOV M,C\ DCR H\ MOV M,B\ DCR H\ POP B\ MOV M,C
2054   085F 25          
2054   0860 70          
2054   0861 25          
2054   0862 C1          
2054   0863 71          
2055   0864 63          			MOV H,E\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2055   0865 70          
2055   0866 24          
2055   0867 C1          
2055   0868 71          
2055   0869 24          
2055   086A 70          
2056   086B 67          			MOV h,a\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2056   086C C1          
2056   086D 71          
2056   086E 24          
2056   086F 70          
2056   0870 24          
2056   0871 C1          
2056   0872 71          
2057   0873 2D          			DCR L
2058   0874             
2059   0874             			DRAW_FORWARD_LINE_IVAGOR
2059   0874             
2059   0874 70          
2059   0875 25          
2059   0876 C1          
2059   0877 71          
2059   0878 25          
2059   0879 70          
2059   087A 63          
2059   087B C1          
2059   087C 71          
2059   087D 24          
2059   087E 70          
2059   087F 24          
2059   0880 C1          
2059   0881 71          
2059   0882 62          
2059   0883 70          
2059   0884 24          
2059   0885 C1          
2059   0886 71          
2059   0887 24          
2059   0888 70          
2059   0889 2D          
2060   088A             			DRAW_BACKWARD_LINE_IVAGOR
2060   088A             
2060   088A C1          
2060   088B 71          
2060   088C 25          
2060   088D 70          
2060   088E 25          
2060   088F C1          
2060   0890 71          
2060   0891 63          
2060   0892 70          
2060   0893 24          
2060   0894 C1          
2060   0895 71          
2060   0896 24          
2060   0897 70          
2060   0898 67          
2060   0899 C1          
2060   089A 71          
2060   089B 24          
2060   089C 70          
2060   089D 24          
2060   089E C1          
2060   089F 71          
2060   08A0 2D          
2061   08A1             			DRAW_FORWARD_LINE_IVAGOR
2061   08A1             
2061   08A1 70          
2061   08A2 25          
2061   08A3 C1          
2061   08A4 71          
2061   08A5 25          
2061   08A6 70          
2061   08A7 63          
2061   08A8 C1          
2061   08A9 71          
2061   08AA 24          
2061   08AB 70          
2061   08AC 24          
2061   08AD C1          
2061   08AE 71          
2061   08AF 62          
2061   08B0 70          
2061   08B1 24          
2061   08B2 C1          
2061   08B3 71          
2061   08B4 24          
2061   08B5 70          
2061   08B6 2D          
2062   08B7             			DRAW_BACKWARD_LINE_IVAGOR
2062   08B7             
2062   08B7 C1          
2062   08B8 71          
2062   08B9 25          
2062   08BA 70          
2062   08BB 25          
2062   08BC C1          
2062   08BD 71          
2062   08BE 63          
2062   08BF 70          
2062   08C0 24          
2062   08C1 C1          
2062   08C2 71          
2062   08C3 24          
2062   08C4 70          
2062   08C5 67          
2062   08C6 C1          
2062   08C7 71          
2062   08C8 24          
2062   08C9 70          
2062   08CA 24          
2062   08CB C1          
2062   08CC 71          
2062   08CD 2D          
2063   08CE             			DRAW_FORWARD_LINE_IVAGOR
2063   08CE             
2063   08CE 70          
2063   08CF 25          
2063   08D0 C1          
2063   08D1 71          
2063   08D2 25          
2063   08D3 70          
2063   08D4 63          
2063   08D5 C1          
2063   08D6 71          
2063   08D7 24          
2063   08D8 70          
2063   08D9 24          
2063   08DA C1          
2063   08DB 71          
2063   08DC 62          
2063   08DD 70          
2063   08DE 24          
2063   08DF C1          
2063   08E0 71          
2063   08E1 24          
2063   08E2 70          
2063   08E3 2D          
2064   08E4             			DRAW_BACKWARD_LINE_IVAGOR
2064   08E4             
2064   08E4 C1          
2064   08E5 71          
2064   08E6 25          
2064   08E7 70          
2064   08E8 25          
2064   08E9 C1          
2064   08EA 71          
2064   08EB 63          
2064   08EC 70          
2064   08ED 24          
2064   08EE C1          
2064   08EF 71          
2064   08F0 24          
2064   08F1 70          
2064   08F2 67          
2064   08F3 C1          
2064   08F4 71          
2064   08F5 24          
2064   08F6 70          
2064   08F7 24          
2064   08F8 C1          
2064   08F9 71          
2064   08FA 2D          
2065   08FB             			DRAW_FORWARD_LINE_IVAGOR	
2065   08FB             
2065   08FB 70          
2065   08FC 25          
2065   08FD C1          
2065   08FE 71          
2065   08FF 25          
2065   0900 70          
2065   0901 63          
2065   0902 C1          
2065   0903 71          
2065   0904 24          
2065   0905 70          
2065   0906 24          
2065   0907 C1          
2065   0908 71          
2065   0909 62          
2065   090A 70          
2065   090B 24          
2065   090C C1          
2065   090D 71          
2065   090E 24          
2065   090F 70          
2065   0910 2D          
2066   0911             			DRAW_BACKWARD_LINE_IVAGOR
2066   0911             
2066   0911 C1          
2066   0912 71          
2066   0913 25          
2066   0914 70          
2066   0915 25          
2066   0916 C1          
2066   0917 71          
2066   0918 63          
2066   0919 70          
2066   091A 24          
2066   091B C1          
2066   091C 71          
2066   091D 24          
2066   091E 70          
2066   091F 67          
2066   0920 C1          
2066   0921 71          
2066   0922 24          
2066   0923 70          
2066   0924 24          
2066   0925 C1          
2066   0926 71          
2066   0927 2D          
2067   0928             			DRAW_FORWARD_LINE_IVAGOR
2067   0928             
2067   0928 70          
2067   0929 25          
2067   092A C1          
2067   092B 71          
2067   092C 25          
2067   092D 70          
2067   092E 63          
2067   092F C1          
2067   0930 71          
2067   0931 24          
2067   0932 70          
2067   0933 24          
2067   0934 C1          
2067   0935 71          
2067   0936 62          
2067   0937 70          
2067   0938 24          
2067   0939 C1          
2067   093A 71          
2067   093B 24          
2067   093C 70          
2067   093D 2D          
2068   093E             			DRAW_BACKWARD_LINE_IVAGOR
2068   093E             
2068   093E C1          
2068   093F 71          
2068   0940 25          
2068   0941 70          
2068   0942 25          
2068   0943 C1          
2068   0944 71          
2068   0945 63          
2068   0946 70          
2068   0947 24          
2068   0948 C1          
2068   0949 71          
2068   094A 24          
2068   094B 70          
2068   094C 67          
2068   094D C1          
2068   094E 71          
2068   094F 24          
2068   0950 70          
2068   0951 24          
2068   0952 C1          
2068   0953 71          
2068   0954 2D          
2069   0955             			DRAW_FORWARD_LINE_IVAGOR
2069   0955             
2069   0955 70          
2069   0956 25          
2069   0957 C1          
2069   0958 71          
2069   0959 25          
2069   095A 70          
2069   095B 63          
2069   095C C1          
2069   095D 71          
2069   095E 24          
2069   095F 70          
2069   0960 24          
2069   0961 C1          
2069   0962 71          
2069   0963 62          
2069   0964 70          
2069   0965 24          
2069   0966 C1          
2069   0967 71          
2069   0968 24          
2069   0969 70          
2069   096A 2D          
2070   096B             			DRAW_BACKWARD_LINE_IVAGOR
2070   096B             
2070   096B C1          
2070   096C 71          
2070   096D 25          
2070   096E 70          
2070   096F 25          
2070   0970 C1          
2070   0971 71          
2070   0972 63          
2070   0973 70          
2070   0974 24          
2070   0975 C1          
2070   0976 71          
2070   0977 24          
2070   0978 70          
2070   0979 67          
2070   097A C1          
2070   097B 71          
2070   097C 24          
2070   097D 70          
2070   097E 24          
2070   097F C1          
2070   0980 71          
2070   0981 2D          
2071   0982             			DRAW_FORWARD_LINE_IVAGOR	
2071   0982             
2071   0982 70          
2071   0983 25          
2071   0984 C1          
2071   0985 71          
2071   0986 25          
2071   0987 70          
2071   0988 63          
2071   0989 C1          
2071   098A 71          
2071   098B 24          
2071   098C 70          
2071   098D 24          
2071   098E C1          
2071   098F 71          
2071   0990 62          
2071   0991 70          
2071   0992 24          
2071   0993 C1          
2071   0994 71          
2071   0995 24          
2071   0996 70          
2071   0997 2D          
2072   0998             			DRAW_BACKWARD_LINE_IVAGOR
2072   0998             
2072   0998 C1          
2072   0999 71          
2072   099A 25          
2072   099B 70          
2072   099C 25          
2072   099D C1          
2072   099E 71          
2072   099F 63          
2072   09A0 70          
2072   09A1 24          
2072   09A2 C1          
2072   09A3 71          
2072   09A4 24          
2072   09A5 70          
2072   09A6 67          
2072   09A7 C1          
2072   09A8 71          
2072   09A9 24          
2072   09AA 70          
2072   09AB 24          
2072   09AC C1          
2072   09AD 71          
2072   09AE 2D          
2073   09AF             			DRAW_FORWARD_LINE_IVAGOR
2073   09AF             
2073   09AF 70          
2073   09B0 25          
2073   09B1 C1          
2073   09B2 71          
2073   09B3 25          
2073   09B4 70          
2073   09B5 63          
2073   09B6 C1          
2073   09B7 71          
2073   09B8 24          
2073   09B9 70          
2073   09BA 24          
2073   09BB C1          
2073   09BC 71          
2073   09BD 62          
2073   09BE 70          
2073   09BF 24          
2073   09C0 C1          
2073   09C1 71          
2073   09C2 24          
2073   09C3 70          
2073   09C4 2D          
2074   09C5             			DRAW_BACKWARD_LINE_IVAGOR
2074   09C5             
2074   09C5 C1          
2074   09C6 71          
2074   09C7 25          
2074   09C8 70          
2074   09C9 25          
2074   09CA C1          
2074   09CB 71          
2074   09CC 63          
2074   09CD 70          
2074   09CE 24          
2074   09CF C1          
2074   09D0 71          
2074   09D1 24          
2074   09D2 70          
2074   09D3 67          
2074   09D4 C1          
2074   09D5 71          
2074   09D6 24          
2074   09D7 70          
2074   09D8 24          
2074   09D9 C1          
2074   09DA 71          
2074   09DB 2D          
2075   09DC             			DRAW_FORWARD_LINE_IVAGOR
2075   09DC             
2075   09DC 70          
2075   09DD 25          
2075   09DE C1          
2075   09DF 71          
2075   09E0 25          
2075   09E1 70          
2075   09E2 63          
2075   09E3 C1          
2075   09E4 71          
2075   09E5 24          
2075   09E6 70          
2075   09E7 24          
2075   09E8 C1          
2075   09E9 71          
2075   09EA 62          
2075   09EB 70          
2075   09EC 24          
2075   09ED C1          
2075   09EE 71          
2075   09EF 24          
2075   09F0 70          
2075   09F1 2D          
2076   09F2             			DRAW_BACKWARD_LINE_IVAGOR
2076   09F2             
2076   09F2 C1          
2076   09F3 71          
2076   09F4 25          
2076   09F5 70          
2076   09F6 25          
2076   09F7 C1          
2076   09F8 71          
2076   09F9 63          
2076   09FA 70          
2076   09FB 24          
2076   09FC C1          
2076   09FD 71          
2076   09FE 24          
2076   09FF 70          
2076   0A00 67          
2076   0A01 C1          
2076   0A02 71          
2076   0A03 24          
2076   0A04 70          
2076   0A05 24          
2076   0A06 C1          
2076   0A07 71          
2076   0A08 2D          
2077   0A09             			DRAW_FORWARD_LINE_IVAGOR
2077   0A09             
2077   0A09 70          
2077   0A0A 25          
2077   0A0B C1          
2077   0A0C 71          
2077   0A0D 25          
2077   0A0E 70          
2077   0A0F 63          
2077   0A10 C1          
2077   0A11 71          
2077   0A12 24          
2077   0A13 70          
2077   0A14 24          
2077   0A15 C1          
2077   0A16 71          
2077   0A17 62          
2077   0A18 70          
2077   0A19 24          
2077   0A1A C1          
2077   0A1B 71          
2077   0A1C 24          
2077   0A1D 70          
2077   0A1E 2D          
2078   0A1F             			DRAW_BACKWARD_LINE_IVAGOR
2078   0A1F             
2078   0A1F C1          
2078   0A20 71          
2078   0A21 25          
2078   0A22 70          
2078   0A23 25          
2078   0A24 C1          
2078   0A25 71          
2078   0A26 63          
2078   0A27 70          
2078   0A28 24          
2078   0A29 C1          
2078   0A2A 71          
2078   0A2B 24          
2078   0A2C 70          
2078   0A2D 67          
2078   0A2E C1          
2078   0A2F 71          
2078   0A30 24          
2078   0A31 70          
2078   0A32 24          
2078   0A33 C1          
2078   0A34 71          
2078   0A35 2D          
2079   0A36             			DRAW_FORWARD_LINE_IVAGOR
2079   0A36             
2079   0A36 70          
2079   0A37 25          
2079   0A38 C1          
2079   0A39 71          
2079   0A3A 25          
2079   0A3B 70          
2079   0A3C 63          
2079   0A3D C1          
2079   0A3E 71          
2079   0A3F 24          
2079   0A40 70          
2079   0A41 24          
2079   0A42 C1          
2079   0A43 71          
2079   0A44 62          
2079   0A45 70          
2079   0A46 24          
2079   0A47 C1          
2079   0A48 71          
2079   0A49 24          
2079   0A4A 70          
2079   0A4B 2D          
2080   0A4C             			DRAW_BACKWARD_LINE_IVAGOR
2080   0A4C             
2080   0A4C C1          
2080   0A4D 71          
2080   0A4E 25          
2080   0A4F 70          
2080   0A50 25          
2080   0A51 C1          
2080   0A52 71          
2080   0A53 63          
2080   0A54 70          
2080   0A55 24          
2080   0A56 C1          
2080   0A57 71          
2080   0A58 24          
2080   0A59 70          
2080   0A5A 67          
2080   0A5B C1          
2080   0A5C 71          
2080   0A5D 24          
2080   0A5E 70          
2080   0A5F 24          
2080   0A60 C1          
2080   0A61 71          
2080   0A62 2D          
2081   0A63             			; 24th line
2082   0A63 70          			MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2082   0A64 25          
2082   0A65 C1          
2082   0A66 71          
2082   0A67 25          
2082   0A68 70          
2083   0A69 63          			MOV H,E\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2083   0A6A C1          
2083   0A6B 71          
2083   0A6C 24          
2083   0A6D 70          
2083   0A6E 24          
2083   0A6F C1          
2083   0A70 71          
2084   0A71 62          			MOV H,D\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2084   0A72 70          
2084   0A73 24          
2084   0A74 C1          
2084   0A75 71          
2084   0A76 24          
2084   0A77 70          
2085   0A78             
2086   0A78 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR	; restore SP (12)
2087   0A7B C9          			RET
2088   0A7C             
2089   0A7C             ;----------------------------------------------------------------
2090   0A7C             ; draw a sprite (24x24 pixels)
2091   0A7C             ; author: parallelno
2092   0A7C             ; method: zig-zag
2093   0A7C             ; in:
2094   0A7C             ; BC	sprite data
2095   0A7C             ; DE	screen address (x,y)
2096   0A7C             
2097   0A7C             			.MODULE DS_parallelno
2098   0A7C             DrawSprite_parallelno:
2099   0A7C             			; store SP
2100   0A7C 21 00 00    			LXI		H, 0			; (12)
2101   0A7F 39          			DAD		SP				; (12)
2102   0A80 22 AC 0C    			SHLD	_restoreSP + 1	; (20)
2103   0A83             			; SP = BC
2104   0A83 60          			MOV		H, B			; (8)
2105   0A84 69          			MOV		L, C			; (8)
2106   0A85 F9          			SPHL					; (8)
2107   0A86             			; D, E, A are initial X for 
2108   0A86             			; the 1st, the 2nd, the 3rd screen buff
2109   0A86 EB          			XCHG					; (4)
2110   0A87 54          			MOV		D, H			; (8)
2111   0A88 3E 20       			MVI		A, 20H			; (8)
2112   0A8A 82          			ADD 	D				; (4)
2113   0A8B 5F          			MOV 	E, A			; (8)
2114   0A8C C6 20       			ADI 	20H				; (8)
2115   0A8E 14          			INR 	D				; (8)
2116   0A8F 14          			INR 	D				; (8)
2117   0A90             									; (124) total
2118   0A90             
2119   0A90             ; screen format
2120   0A90             ; DRAW_FORWARD_LINE_PARALLELNO1
2121   0A90             ; 1st screen buff : 1 -> 2 -> 3
2122   0A90             ; 2nd screen buff : 4 -> 5 -> 6
2123   0A90             ; 3rd screen buff : 7 -> 8 -> 9
2124   0A90             ; y--
2125   0A90             ; DRAW_BACKWARD_LINE_PARALLELNO1
2126   0A90             ; 3nd screen buff : 12 <- 11 <- 10
2127   0A90             ; 2nd screen buff : 13 -> 14 -> 15
2128   0A90             ; 1st screen buff : 18 <- 17 <- 16
2129   0A90             ; y--
2130   0A90             ; repeat
2131   0A90             
2132   0A90             ; HL - 1st screen buff XY
2133   0A90             ; SP - sprite data
2134   0A90             ; D - 1st screen buff X + 2
2135   0A90             ; E - 2nd screen buff X
2136   0A90             ; A - 3rd screen buff X		
2137   0A90             
2138   0A90             #DEFINE 	DRAW_FORWARD_LINE_PARALLELNO1	\
2139   0A90             #DEFCONT \	POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2140   0A90             #DEFCONT \	MOV H,E\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2141   0A90             #DEFCONT \	MOV H,A\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2142   0A90             
2143   0A90             #DEFINE 	DRAW_BACKWARD_LINE_PARALLELNO1	\
2144   0A90             #DEFCONT \	MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2145   0A90             #DEFCONT \	MOV H,E\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2146   0A90             #DEFCONT \	MOV H,D\ MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2147   0A90             
2148   0A90             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2148   0A90             
2148   0A90 C1          
2148   0A91 71          
2148   0A92 24          
2148   0A93 70          
2148   0A94 24          
2148   0A95 C1          
2148   0A96 71          
2148   0A97 63          
2148   0A98 70          
2148   0A99 24          
2148   0A9A C1          
2148   0A9B 71          
2148   0A9C 24          
2148   0A9D 70          
2148   0A9E 67          
2148   0A9F C1          
2148   0AA0 71          
2148   0AA1 24          
2148   0AA2 70          
2148   0AA3 24          
2148   0AA4 C1          
2148   0AA5 71          
2148   0AA6 2D          
2149   0AA7             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2149   0AA7             
2149   0AA7 70          
2149   0AA8 25          
2149   0AA9 C1          
2149   0AAA 71          
2149   0AAB 25          
2149   0AAC 70          
2149   0AAD 63          
2149   0AAE C1          
2149   0AAF 71          
2149   0AB0 24          
2149   0AB1 70          
2149   0AB2 24          
2149   0AB3 C1          
2149   0AB4 71          
2149   0AB5 62          
2149   0AB6 70          
2149   0AB7 25          
2149   0AB8 C1          
2149   0AB9 71          
2149   0ABA 25          
2149   0ABB 70          
2149   0ABC 2D          
2150   0ABD             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2150   0ABD             
2150   0ABD C1          
2150   0ABE 71          
2150   0ABF 24          
2150   0AC0 70          
2150   0AC1 24          
2150   0AC2 C1          
2150   0AC3 71          
2150   0AC4 63          
2150   0AC5 70          
2150   0AC6 24          
2150   0AC7 C1          
2150   0AC8 71          
2150   0AC9 24          
2150   0ACA 70          
2150   0ACB 67          
2150   0ACC C1          
2150   0ACD 71          
2150   0ACE 24          
2150   0ACF 70          
2150   0AD0 24          
2150   0AD1 C1          
2150   0AD2 71          
2150   0AD3 2D          
2151   0AD4             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2151   0AD4             
2151   0AD4 70          
2151   0AD5 25          
2151   0AD6 C1          
2151   0AD7 71          
2151   0AD8 25          
2151   0AD9 70          
2151   0ADA 63          
2151   0ADB C1          
2151   0ADC 71          
2151   0ADD 24          
2151   0ADE 70          
2151   0ADF 24          
2151   0AE0 C1          
2151   0AE1 71          
2151   0AE2 62          
2151   0AE3 70          
2151   0AE4 25          
2151   0AE5 C1          
2151   0AE6 71          
2151   0AE7 25          
2151   0AE8 70          
2151   0AE9 2D          
2152   0AEA             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2152   0AEA             
2152   0AEA C1          
2152   0AEB 71          
2152   0AEC 24          
2152   0AED 70          
2152   0AEE 24          
2152   0AEF C1          
2152   0AF0 71          
2152   0AF1 63          
2152   0AF2 70          
2152   0AF3 24          
2152   0AF4 C1          
2152   0AF5 71          
2152   0AF6 24          
2152   0AF7 70          
2152   0AF8 67          
2152   0AF9 C1          
2152   0AFA 71          
2152   0AFB 24          
2152   0AFC 70          
2152   0AFD 24          
2152   0AFE C1          
2152   0AFF 71          
2152   0B00 2D          
2153   0B01             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2153   0B01             
2153   0B01 70          
2153   0B02 25          
2153   0B03 C1          
2153   0B04 71          
2153   0B05 25          
2153   0B06 70          
2153   0B07 63          
2153   0B08 C1          
2153   0B09 71          
2153   0B0A 24          
2153   0B0B 70          
2153   0B0C 24          
2153   0B0D C1          
2153   0B0E 71          
2153   0B0F 62          
2153   0B10 70          
2153   0B11 25          
2153   0B12 C1          
2153   0B13 71          
2153   0B14 25          
2153   0B15 70          
2153   0B16 2D          
2154   0B17             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2154   0B17             
2154   0B17 C1          
2154   0B18 71          
2154   0B19 24          
2154   0B1A 70          
2154   0B1B 24          
2154   0B1C C1          
2154   0B1D 71          
2154   0B1E 63          
2154   0B1F 70          
2154   0B20 24          
2154   0B21 C1          
2154   0B22 71          
2154   0B23 24          
2154   0B24 70          
2154   0B25 67          
2154   0B26 C1          
2154   0B27 71          
2154   0B28 24          
2154   0B29 70          
2154   0B2A 24          
2154   0B2B C1          
2154   0B2C 71          
2154   0B2D 2D          
2155   0B2E             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2155   0B2E             
2155   0B2E 70          
2155   0B2F 25          
2155   0B30 C1          
2155   0B31 71          
2155   0B32 25          
2155   0B33 70          
2155   0B34 63          
2155   0B35 C1          
2155   0B36 71          
2155   0B37 24          
2155   0B38 70          
2155   0B39 24          
2155   0B3A C1          
2155   0B3B 71          
2155   0B3C 62          
2155   0B3D 70          
2155   0B3E 25          
2155   0B3F C1          
2155   0B40 71          
2155   0B41 25          
2155   0B42 70          
2155   0B43 2D          
2156   0B44             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2156   0B44             
2156   0B44 C1          
2156   0B45 71          
2156   0B46 24          
2156   0B47 70          
2156   0B48 24          
2156   0B49 C1          
2156   0B4A 71          
2156   0B4B 63          
2156   0B4C 70          
2156   0B4D 24          
2156   0B4E C1          
2156   0B4F 71          
2156   0B50 24          
2156   0B51 70          
2156   0B52 67          
2156   0B53 C1          
2156   0B54 71          
2156   0B55 24          
2156   0B56 70          
2156   0B57 24          
2156   0B58 C1          
2156   0B59 71          
2156   0B5A 2D          
2157   0B5B             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2157   0B5B             
2157   0B5B 70          
2157   0B5C 25          
2157   0B5D C1          
2157   0B5E 71          
2157   0B5F 25          
2157   0B60 70          
2157   0B61 63          
2157   0B62 C1          
2157   0B63 71          
2157   0B64 24          
2157   0B65 70          
2157   0B66 24          
2157   0B67 C1          
2157   0B68 71          
2157   0B69 62          
2157   0B6A 70          
2157   0B6B 25          
2157   0B6C C1          
2157   0B6D 71          
2157   0B6E 25          
2157   0B6F 70          
2157   0B70 2D          
2158   0B71             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2158   0B71             
2158   0B71 C1          
2158   0B72 71          
2158   0B73 24          
2158   0B74 70          
2158   0B75 24          
2158   0B76 C1          
2158   0B77 71          
2158   0B78 63          
2158   0B79 70          
2158   0B7A 24          
2158   0B7B C1          
2158   0B7C 71          
2158   0B7D 24          
2158   0B7E 70          
2158   0B7F 67          
2158   0B80 C1          
2158   0B81 71          
2158   0B82 24          
2158   0B83 70          
2158   0B84 24          
2158   0B85 C1          
2158   0B86 71          
2158   0B87 2D          
2159   0B88             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2159   0B88             
2159   0B88 70          
2159   0B89 25          
2159   0B8A C1          
2159   0B8B 71          
2159   0B8C 25          
2159   0B8D 70          
2159   0B8E 63          
2159   0B8F C1          
2159   0B90 71          
2159   0B91 24          
2159   0B92 70          
2159   0B93 24          
2159   0B94 C1          
2159   0B95 71          
2159   0B96 62          
2159   0B97 70          
2159   0B98 25          
2159   0B99 C1          
2159   0B9A 71          
2159   0B9B 25          
2159   0B9C 70          
2159   0B9D 2D          
2160   0B9E             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2160   0B9E             
2160   0B9E C1          
2160   0B9F 71          
2160   0BA0 24          
2160   0BA1 70          
2160   0BA2 24          
2160   0BA3 C1          
2160   0BA4 71          
2160   0BA5 63          
2160   0BA6 70          
2160   0BA7 24          
2160   0BA8 C1          
2160   0BA9 71          
2160   0BAA 24          
2160   0BAB 70          
2160   0BAC 67          
2160   0BAD C1          
2160   0BAE 71          
2160   0BAF 24          
2160   0BB0 70          
2160   0BB1 24          
2160   0BB2 C1          
2160   0BB3 71          
2160   0BB4 2D          
2161   0BB5             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2161   0BB5             
2161   0BB5 70          
2161   0BB6 25          
2161   0BB7 C1          
2161   0BB8 71          
2161   0BB9 25          
2161   0BBA 70          
2161   0BBB 63          
2161   0BBC C1          
2161   0BBD 71          
2161   0BBE 24          
2161   0BBF 70          
2161   0BC0 24          
2161   0BC1 C1          
2161   0BC2 71          
2161   0BC3 62          
2161   0BC4 70          
2161   0BC5 25          
2161   0BC6 C1          
2161   0BC7 71          
2161   0BC8 25          
2161   0BC9 70          
2161   0BCA 2D          
2162   0BCB             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2162   0BCB             
2162   0BCB C1          
2162   0BCC 71          
2162   0BCD 24          
2162   0BCE 70          
2162   0BCF 24          
2162   0BD0 C1          
2162   0BD1 71          
2162   0BD2 63          
2162   0BD3 70          
2162   0BD4 24          
2162   0BD5 C1          
2162   0BD6 71          
2162   0BD7 24          
2162   0BD8 70          
2162   0BD9 67          
2162   0BDA C1          
2162   0BDB 71          
2162   0BDC 24          
2162   0BDD 70          
2162   0BDE 24          
2162   0BDF C1          
2162   0BE0 71          
2162   0BE1 2D          
2163   0BE2             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2163   0BE2             
2163   0BE2 70          
2163   0BE3 25          
2163   0BE4 C1          
2163   0BE5 71          
2163   0BE6 25          
2163   0BE7 70          
2163   0BE8 63          
2163   0BE9 C1          
2163   0BEA 71          
2163   0BEB 24          
2163   0BEC 70          
2163   0BED 24          
2163   0BEE C1          
2163   0BEF 71          
2163   0BF0 62          
2163   0BF1 70          
2163   0BF2 25          
2163   0BF3 C1          
2163   0BF4 71          
2163   0BF5 25          
2163   0BF6 70          
2163   0BF7 2D          
2164   0BF8             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2164   0BF8             
2164   0BF8 C1          
2164   0BF9 71          
2164   0BFA 24          
2164   0BFB 70          
2164   0BFC 24          
2164   0BFD C1          
2164   0BFE 71          
2164   0BFF 63          
2164   0C00 70          
2164   0C01 24          
2164   0C02 C1          
2164   0C03 71          
2164   0C04 24          
2164   0C05 70          
2164   0C06 67          
2164   0C07 C1          
2164   0C08 71          
2164   0C09 24          
2164   0C0A 70          
2164   0C0B 24          
2164   0C0C C1          
2164   0C0D 71          
2164   0C0E 2D          
2165   0C0F             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2165   0C0F             
2165   0C0F 70          
2165   0C10 25          
2165   0C11 C1          
2165   0C12 71          
2165   0C13 25          
2165   0C14 70          
2165   0C15 63          
2165   0C16 C1          
2165   0C17 71          
2165   0C18 24          
2165   0C19 70          
2165   0C1A 24          
2165   0C1B C1          
2165   0C1C 71          
2165   0C1D 62          
2165   0C1E 70          
2165   0C1F 25          
2165   0C20 C1          
2165   0C21 71          
2165   0C22 25          
2165   0C23 70          
2165   0C24 2D          
2166   0C25             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2166   0C25             
2166   0C25 C1          
2166   0C26 71          
2166   0C27 24          
2166   0C28 70          
2166   0C29 24          
2166   0C2A C1          
2166   0C2B 71          
2166   0C2C 63          
2166   0C2D 70          
2166   0C2E 24          
2166   0C2F C1          
2166   0C30 71          
2166   0C31 24          
2166   0C32 70          
2166   0C33 67          
2166   0C34 C1          
2166   0C35 71          
2166   0C36 24          
2166   0C37 70          
2166   0C38 24          
2166   0C39 C1          
2166   0C3A 71          
2166   0C3B 2D          
2167   0C3C             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2167   0C3C             
2167   0C3C 70          
2167   0C3D 25          
2167   0C3E C1          
2167   0C3F 71          
2167   0C40 25          
2167   0C41 70          
2167   0C42 63          
2167   0C43 C1          
2167   0C44 71          
2167   0C45 24          
2167   0C46 70          
2167   0C47 24          
2167   0C48 C1          
2167   0C49 71          
2167   0C4A 62          
2167   0C4B 70          
2167   0C4C 25          
2167   0C4D C1          
2167   0C4E 71          
2167   0C4F 25          
2167   0C50 70          
2167   0C51 2D          
2168   0C52             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2168   0C52             
2168   0C52 C1          
2168   0C53 71          
2168   0C54 24          
2168   0C55 70          
2168   0C56 24          
2168   0C57 C1          
2168   0C58 71          
2168   0C59 63          
2168   0C5A 70          
2168   0C5B 24          
2168   0C5C C1          
2168   0C5D 71          
2168   0C5E 24          
2168   0C5F 70          
2168   0C60 67          
2168   0C61 C1          
2168   0C62 71          
2168   0C63 24          
2168   0C64 70          
2168   0C65 24          
2168   0C66 C1          
2168   0C67 71          
2168   0C68 2D          
2169   0C69             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2169   0C69             
2169   0C69 70          
2169   0C6A 25          
2169   0C6B C1          
2169   0C6C 71          
2169   0C6D 25          
2169   0C6E 70          
2169   0C6F 63          
2169   0C70 C1          
2169   0C71 71          
2169   0C72 24          
2169   0C73 70          
2169   0C74 24          
2169   0C75 C1          
2169   0C76 71          
2169   0C77 62          
2169   0C78 70          
2169   0C79 25          
2169   0C7A C1          
2169   0C7B 71          
2169   0C7C 25          
2169   0C7D 70          
2169   0C7E 2D          
2170   0C7F             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2170   0C7F             
2170   0C7F C1          
2170   0C80 71          
2170   0C81 24          
2170   0C82 70          
2170   0C83 24          
2170   0C84 C1          
2170   0C85 71          
2170   0C86 63          
2170   0C87 70          
2170   0C88 24          
2170   0C89 C1          
2170   0C8A 71          
2170   0C8B 24          
2170   0C8C 70          
2170   0C8D 67          
2170   0C8E C1          
2170   0C8F 71          
2170   0C90 24          
2170   0C91 70          
2170   0C92 24          
2170   0C93 C1          
2170   0C94 71          
2170   0C95 2D          
2171   0C96             			DRAW_BACKWARD_LINE_PARALLELNO1
2171   0C96             
2171   0C96 70          
2171   0C97 25          
2171   0C98 C1          
2171   0C99 71          
2171   0C9A 25          
2171   0C9B 70          
2171   0C9C 63          
2171   0C9D C1          
2171   0C9E 71          
2171   0C9F 24          
2171   0CA0 70          
2171   0CA1 24          
2171   0CA2 C1          
2171   0CA3 71          
2171   0CA4 62          
2171   0CA5 70          
2171   0CA6 25          
2171   0CA7 C1          
2171   0CA8 71          
2171   0CA9 25          
2171   0CAA 70          
2172   0CAB             
2173   0CAB 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR	; restore SP (12)
2174   0CAE C9          			RET
2175   0CAF             
2176   0CAF             ;----------------------------------------------------------------
2177   0CAF             ; Memory Reset
2178   0CAF             ; in:
2179   0CAF             ; BC	buffer last byte + 1
2180   0CAF             ; DE	counter (buffer length / 32)
2181   0CAF             ; use: HL
2182   0CAF             
2183   0CAF             MemReset:	.MODULE MemsetM
2184   0CAF 21 00 00    			LXI		H, 0			; (12)
2185   0CB2 39          			DAD		SP				; (12)
2186   0CB3 22 D5 0C    			SHLD	_restoreSP+1	; (20)
2187   0CB6             
2188   0CB6 60          			MOV		H, B			; (8)
2189   0CB7 69          			MOV		L, C			; (8)
2190   0CB8 F9          			SPHL					; (8)
2191   0CB9 01 00 00    			LXI		B, 0000H		; (12)
2192   0CBC             
2193   0CBC C5          _loop:		PUSH	B				; (16)
2194   0CBD C5          			PUSH	B
2195   0CBE C5          			PUSH	B
2196   0CBF C5          			PUSH	B
2197   0CC0             
2198   0CC0 C5          			PUSH	B				; (16)
2199   0CC1 C5          			PUSH	B
2200   0CC2 C5          			PUSH	B
2201   0CC3 C5          			PUSH	B
2202   0CC4             
2203   0CC4 C5          			PUSH	B				; (16)
2204   0CC5 C5          			PUSH	B
2205   0CC6 C5          			PUSH	B
2206   0CC7 C5          			PUSH	B
2207   0CC8             
2208   0CC8 C5          			PUSH	B				; (16)
2209   0CC9 C5          			PUSH	B
2210   0CCA C5          			PUSH	B
2211   0CCB C5          			PUSH	B
2212   0CCC             
2213   0CCC 1D          			DCR		E				; (8)
2214   0CCD C2 BC 0C    			JNZ		_loop			; (12)
2215   0CD0 15          			DCR		D				; (8)
2216   0CD1 C2 BC 0C    			JNZ		_loop			; (12)
2217   0CD4             _restoreSP:	
2218   0CD4 31 00 00    			LXI		SP, TEMP_ADDR	; restore SP (12)
2219   0CD7 C9          			RET
2220   0CD8             
2221   0CD8             ;----------------------------------------------------------------
2222   0CD8             ; Set Palette
2223   0CD8             ; in: none
2224   0CD8             ; use: A, HL, BC
2225   0CD8             
2226   0CD8             #DEFINE INIT_COLOR_IDX 			0FH
2227   0CD8             
2228   0CD8             SetPalette:	.MODULE SetPaletteM
2229   0CD8 F5          			PUSH	PSW			; (16)
2230   0CD9 C5          			PUSH	B
2231   0CDA E5          			PUSH	H
2232   0CDB             					
2233   0CDB 21 17 0D    			LXI		H, colorTable + INIT_COLOR_IDX
2234   0CDE 06 0F       			MVI		B, INIT_COLOR_IDX
2235   0CE0             
2236   0CE0 78          _loop:		MOV		A, B		; (8)
2237   0CE1 D3 02       			OUT		2			; (12)
2238   0CE3 7E          			MOV		A,M			; (8)
2239   0CE4 D3 0C       			OUT		0CH			; (12)
2240   0CE6 04          			INR		B			; (8) delay
2241   0CE7 D3 0C       			OUT		0CH			; (12)
2242   0CE9 2B          			DCX		H			; (8)
2243   0CEA D3 0C       			OUT		0CH			; (12)
2244   0CEC 05          			DCR		B			; (8) delay
2245   0CED 05          			DCR		B			; (8)
2246   0CEE D3 0C       			OUT		0CH			; (12)
2247   0CF0             								; (108) total
2248   0CF0 F2 E0 0C    			JP		_loop
2249   0CF3             
2250   0CF3 3E 88       			MVI		A, PORT0_OUT_OUT
2251   0CF5 D3 00       			OUT		0
2252   0CF7 3A 07 0D    			LDA  	borderColorIdx ; (16)			
2253   0CFA D3 02       			OUT		2
2254   0CFC 3A 05 0D    			LDA		vScroll
2255   0CFF D3 03       			OUT		3
2256   0D01             
2257   0D01 E1          			POP		H			; (12)
2258   0D02 C1          			POP		B
2259   0D03 F1          			POP		PSW
2260   0D04 C9          			RET
2261   0D05             
2262   0D05 FF          vScroll:	.DB 0FFH
2263   0D06 00          			.DB 0
2264   0D07             borderColorIdx:
2265   0D07 00          			.DB 0
2266   0D08 5B 03 62 14 colorTable:	.DB	01011011b, $03, 01100010b, $14, 
2267   0D0C AD 55 FE 80 			.DB 10101101b, $55, 11111110b, $80,
2268   0D10 F8 F0 12 2D 			.DB 11111000b, $F0, 00010010b, $2D,
2269   0D14 2D 2D 2D 07 			.DB $2D, $2D, $2D, $07
2270   0D18             
2271   0D18 3A 0D 14 0E spriteTable:.dw	spriteData00, spriteData01, spriteData02, spriteData03
2271   0D1C EE 0E C8 0F 
2272   0D20 A2 10 7C 11 			.dw	spriteData04, spriteData05, spriteData06, spriteData07
2272   0D24 56 12 30 13 
2273   0D28 0A 14 E4 14 			.dw	spriteData08, spriteData09, spriteData10, spriteData11
2273   0D2C BE 15 98 16 
2274   0D30 72 17 4C 18 			.dw	spriteData12, spriteData13, spriteData14, spriteData15
2274   0D34 26 19 00 1A 
2275   0D38             
2276   0D38             spriteDataSafetyBytes:
2277   0D38 00 00       			.DB	0,0
2278   0D3A             spriteData00:
2279   0D3A 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2279   0D3E 00 00 7F FF 
2279   0D42 FE 
2280   0D43 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2280   0D47 00 00 FF FF 
2280   0D4B FF 
2281   0D4C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2281   0D50 00 00 FF FF 
2281   0D54 FF 
2282   0D55 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2282   0D59 00 00 FF FF 
2282   0D5D FF 
2283   0D5E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2283   0D62 00 00 FF FF 
2283   0D66 FF 
2284   0D67 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2284   0D6B 00 00 FF FF 
2284   0D6F FF 
2285   0D70 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2285   0D74 00 00 FF FF 
2285   0D78 FF 
2286   0D79 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2286   0D7D 00 00 FF FF 
2286   0D81 FF 
2287   0D82 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2287   0D86 00 00 FF FF 
2287   0D8A FF 
2288   0D8B 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2288   0D8F 7E 00 FF FF 
2288   0D93 FF 
2289   0D94 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2289   0D98 81 00 FF FF 
2289   0D9C FF 
2290   0D9D 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2290   0DA1 81 00 FF FF 
2290   0DA5 FF 
2291   0DA6 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2291   0DAA 81 00 FF FF 
2291   0DAE FF 
2292   0DAF 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2292   0DB3 81 00 FF FF 
2292   0DB7 FF 
2293   0DB8 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2293   0DBC 81 00 FF FF 
2293   0DC0 FF 
2294   0DC1 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2294   0DC5 7E 00 FF FF 
2294   0DC9 FF 
2295   0DCA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2295   0DCE 00 00 FF FF 
2295   0DD2 FF 
2296   0DD3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2296   0DD7 00 00 FF FF 
2296   0DDB FF 
2297   0DDC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2297   0DE0 00 00 FF FF 
2297   0DE4 FF 
2298   0DE5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2298   0DE9 00 00 FF FF 
2298   0DED FF 
2299   0DEE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2299   0DF2 00 00 FF FF 
2299   0DF6 FF 
2300   0DF7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2300   0DFB 00 00 FF FF 
2300   0DFF FF 
2301   0E00 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2301   0E04 00 00 FF FF 
2301   0E08 FF 
2302   0E09 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2302   0E0D 00 00 7F FF 
2302   0E11 FE 
2303   0E12 00 00       			.DB	0,0
2304   0E14             
2305   0E14             spriteData01:
2306   0E14 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2306   0E18 00 00 7F FF 
2306   0E1C FE 
2307   0E1D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2307   0E21 00 00 FF FF 
2307   0E25 FF 
2308   0E26 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2308   0E2A 00 00 FF FF 
2308   0E2E FF 
2309   0E2F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2309   0E33 00 00 FF FF 
2309   0E37 FF 
2310   0E38 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2310   0E3C 00 00 FF FF 
2310   0E40 FF 
2311   0E41 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2311   0E45 00 00 FF FF 
2311   0E49 FF 
2312   0E4A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2312   0E4E 00 00 FF FF 
2312   0E52 FF 
2313   0E53 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2313   0E57 00 00 FF FF 
2313   0E5B FF 
2314   0E5C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2314   0E60 00 00 FF FF 
2314   0E64 FF 
2315   0E65 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2315   0E69 FF 00 FF FF 
2315   0E6D FF 
2316   0E6E 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2316   0E72 18 00 FF FF 
2316   0E76 FF 
2317   0E77 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2317   0E7B 18 00 FF FF 
2317   0E7F FF 
2318   0E80 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2318   0E84 18 00 FF FF 
2318   0E88 FF 
2319   0E89 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2319   0E8D 18 00 FF FF 
2319   0E91 FF 
2320   0E92 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2320   0E96 18 00 FF FF 
2320   0E9A FF 
2321   0E9B 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2321   0E9F 18 00 FF FF 
2321   0EA3 FF 
2322   0EA4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2322   0EA8 00 00 FF FF 
2322   0EAC FF 
2323   0EAD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2323   0EB1 00 00 FF FF 
2323   0EB5 FF 
2324   0EB6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2324   0EBA 00 00 FF FF 
2324   0EBE FF 
2325   0EBF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2325   0EC3 00 00 FF FF 
2325   0EC7 FF 
2326   0EC8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2326   0ECC 00 00 FF FF 
2326   0ED0 FF 
2327   0ED1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2327   0ED5 00 00 FF FF 
2327   0ED9 FF 
2328   0EDA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2328   0EDE 00 00 FF FF 
2328   0EE2 FF 
2329   0EE3 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2329   0EE7 00 00 7F FF 
2329   0EEB FE 
2330   0EEC 00 00       			.DB	0,0
2331   0EEE             
2332   0EEE             spriteData02:
2333   0EEE 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2333   0EF2 00 00 7F FF 
2333   0EF6 FE 
2334   0EF7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2334   0EFB 00 00 FF FF 
2334   0EFF FF 
2335   0F00 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2335   0F04 00 00 FF FF 
2335   0F08 FF 
2336   0F09 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2336   0F0D 00 00 FF FF 
2336   0F11 FF 
2337   0F12 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2337   0F16 00 00 FF FF 
2337   0F1A FF 
2338   0F1B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2338   0F1F 00 00 FF FF 
2338   0F23 FF 
2339   0F24 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2339   0F28 00 00 FF FF 
2339   0F2C FF 
2340   0F2D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2340   0F31 00 00 FF FF 
2340   0F35 FF 
2341   0F36 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2341   0F3A 00 00 FF FF 
2341   0F3E FF 
2342   0F3F 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2342   0F43 FF 00 FF FF 
2342   0F47 FF 
2343   0F48 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2343   0F4C 80 00 FF FF 
2343   0F50 FF 
2344   0F51 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2344   0F55 80 00 FF FF 
2344   0F59 FF 
2345   0F5A 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2345   0F5E FF 00 FF FF 
2345   0F62 FF 
2346   0F63 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2346   0F67 01 00 FF FF 
2346   0F6B FF 
2347   0F6C 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2347   0F70 01 00 FF FF 
2347   0F74 FF 
2348   0F75 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2348   0F79 FF 00 FF FF 
2348   0F7D FF 
2349   0F7E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2349   0F82 00 00 FF FF 
2349   0F86 FF 
2350   0F87 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2350   0F8B 00 00 FF FF 
2350   0F8F FF 
2351   0F90 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2351   0F94 00 00 FF FF 
2351   0F98 FF 
2352   0F99 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2352   0F9D 00 00 FF FF 
2352   0FA1 FF 
2353   0FA2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2353   0FA6 00 00 FF FF 
2353   0FAA FF 
2354   0FAB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2354   0FAF 00 00 FF FF 
2354   0FB3 FF 
2355   0FB4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2355   0FB8 00 00 FF FF 
2355   0FBC FF 
2356   0FBD 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2356   0FC1 00 00 7F FF 
2356   0FC5 FE 
2357   0FC6 00 00       			.DB	0,0
2358   0FC8             
2359   0FC8             spriteData03:
2360   0FC8 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2360   0FCC 00 00 7F FF 
2360   0FD0 FE 
2361   0FD1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2361   0FD5 00 00 FF FF 
2361   0FD9 FF 
2362   0FDA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2362   0FDE 00 00 FF FF 
2362   0FE2 FF 
2363   0FE3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2363   0FE7 00 00 FF FF 
2363   0FEB FF 
2364   0FEC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2364   0FF0 00 00 FF FF 
2364   0FF4 FF 
2365   0FF5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2365   0FF9 00 00 FF FF 
2365   0FFD FF 
2366   0FFE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2366   1002 00 00 FF FF 
2366   1006 FF 
2367   1007 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2367   100B 00 00 FF FF 
2367   100F FF 
2368   1010 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2368   1014 00 00 FF FF 
2368   1018 FF 
2369   1019 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2369   101D 7E 00 FF FF 
2369   1021 FF 
2370   1022 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2370   1026 81 00 FF FF 
2370   102A FF 
2371   102B 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2371   102F 01 00 FF FF 
2371   1033 FF 
2372   1034 80 00 01 00 			.DB	$80,$00,$01,$00,$3e,$00,$ff,$ff,$ff
2372   1038 3E 00 FF FF 
2372   103C FF 
2373   103D 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2373   1041 01 00 FF FF 
2373   1045 FF 
2374   1046 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2374   104A 81 00 FF FF 
2374   104E FF 
2375   104F 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2375   1053 7E 00 FF FF 
2375   1057 FF 
2376   1058 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2376   105C 00 00 FF FF 
2376   1060 FF 
2377   1061 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2377   1065 00 00 FF FF 
2377   1069 FF 
2378   106A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2378   106E 00 00 FF FF 
2378   1072 FF 
2379   1073 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2379   1077 00 00 FF FF 
2379   107B FF 
2380   107C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2380   1080 00 00 FF FF 
2380   1084 FF 
2381   1085 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2381   1089 00 00 FF FF 
2381   108D FF 
2382   108E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2382   1092 00 00 FF FF 
2382   1096 FF 
2383   1097 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2383   109B 00 00 7F FF 
2383   109F FE 
2384   10A0 00 00       			.DB	0,0
2385   10A2             
2386   10A2             spriteData04:	
2387   10A2 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2387   10A6 00 00 7F FF 
2387   10AA FE 
2388   10AB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2388   10AF 00 00 FF FF 
2388   10B3 FF 
2389   10B4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2389   10B8 00 00 FF FF 
2389   10BC FF 
2390   10BD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2390   10C1 00 00 FF FF 
2390   10C5 FF 
2391   10C6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2391   10CA 00 00 FF FF 
2391   10CE FF 
2392   10CF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2392   10D3 00 00 FF FF 
2392   10D7 FF 
2393   10D8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2393   10DC 00 00 FF FF 
2393   10E0 FF 
2394   10E1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2394   10E5 00 00 FF FF 
2394   10E9 FF 
2395   10EA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2395   10EE 00 00 FF FF 
2395   10F2 FF 
2396   10F3 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2396   10F7 01 00 FF FF 
2396   10FB FF 
2397   10FC 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2397   1100 01 00 FF FF 
2397   1104 FF 
2398   1105 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2398   1109 01 00 FF FF 
2398   110D FF 
2399   110E 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2399   1112 FF 00 FF FF 
2399   1116 FF 
2400   1117 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2400   111B 81 00 FF FF 
2400   111F FF 
2401   1120 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2401   1124 81 00 FF FF 
2401   1128 FF 
2402   1129 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2402   112D 81 00 FF FF 
2402   1131 FF 
2403   1132 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2403   1136 00 00 FF FF 
2403   113A FF 
2404   113B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2404   113F 00 00 FF FF 
2404   1143 FF 
2405   1144 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2405   1148 00 00 FF FF 
2405   114C FF 
2406   114D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2406   1151 00 00 FF FF 
2406   1155 FF 
2407   1156 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2407   115A 00 00 FF FF 
2407   115E FF 
2408   115F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2408   1163 00 00 FF FF 
2408   1167 FF 
2409   1168 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2409   116C 00 00 FF FF 
2409   1170 FF 
2410   1171 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2410   1175 00 00 7F FF 
2410   1179 FE 
2411   117A 00 00       			.DB	0,0
2412   117C             
2413   117C             spriteData05:
2414   117C 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2414   1180 00 00 7F FF 
2414   1184 FE 
2415   1185 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2415   1189 00 00 FF FF 
2415   118D FF 
2416   118E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2416   1192 00 00 FF FF 
2416   1196 FF 
2417   1197 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2417   119B 00 00 FF FF 
2417   119F FF 
2418   11A0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2418   11A4 00 00 FF FF 
2418   11A8 FF 
2419   11A9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2419   11AD 00 00 FF FF 
2419   11B1 FF 
2420   11B2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2420   11B6 00 00 FF FF 
2420   11BA FF 
2421   11BB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2421   11BF 00 00 FF FF 
2421   11C3 FF 
2422   11C4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2422   11C8 00 00 FF FF 
2422   11CC FF 
2423   11CD 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2423   11D1 7E 00 FF FF 
2423   11D5 FF 
2424   11D6 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2424   11DA 81 00 FF FF 
2424   11DE FF 
2425   11DF 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2425   11E3 01 00 FF FF 
2425   11E7 FF 
2426   11E8 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2426   11EC FE 00 FF FF 
2426   11F0 FF 
2427   11F1 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2427   11F5 80 00 FF FF 
2427   11F9 FF 
2428   11FA 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2428   11FE 80 00 FF FF 
2428   1202 FF 
2429   1203 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2429   1207 FF 00 FF FF 
2429   120B FF 
2430   120C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2430   1210 00 00 FF FF 
2430   1214 FF 
2431   1215 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2431   1219 00 00 FF FF 
2431   121D FF 
2432   121E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2432   1222 00 00 FF FF 
2432   1226 FF 
2433   1227 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2433   122B 00 00 FF FF 
2433   122F FF 
2434   1230 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2434   1234 00 00 FF FF 
2434   1238 FF 
2435   1239 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2435   123D 00 00 FF FF 
2435   1241 FF 
2436   1242 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2436   1246 00 00 FF FF 
2436   124A FF 
2437   124B 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2437   124F 00 00 7F FF 
2437   1253 FE 
2438   1254 00 00       			.DB	0,0
2439   1256             
2440   1256             spriteData06:
2441   1256 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2441   125A 00 00 7F FF 
2441   125E FE 
2442   125F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2442   1263 00 00 FF FF 
2442   1267 FF 
2443   1268 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2443   126C 00 00 FF FF 
2443   1270 FF 
2444   1271 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2444   1275 00 00 FF FF 
2444   1279 FF 
2445   127A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2445   127E 00 00 FF FF 
2445   1282 FF 
2446   1283 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2446   1287 00 00 FF FF 
2446   128B FF 
2447   128C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2447   1290 00 00 FF FF 
2447   1294 FF 
2448   1295 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2448   1299 00 00 FF FF 
2448   129D FF 
2449   129E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2449   12A2 00 00 FF FF 
2449   12A6 FF 
2450   12A7 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2450   12AB 7E 00 FF FF 
2450   12AF FF 
2451   12B0 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2451   12B4 81 00 FF FF 
2451   12B8 FF 
2452   12B9 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2452   12BD 81 00 FF FF 
2452   12C1 FF 
2453   12C2 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2453   12C6 FE 00 FF FF 
2453   12CA FF 
2454   12CB 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2454   12CF 80 00 FF FF 
2454   12D3 FF 
2455   12D4 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2455   12D8 81 00 FF FF 
2455   12DC FF 
2456   12DD 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2456   12E1 7E 00 FF FF 
2456   12E5 FF 
2457   12E6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2457   12EA 00 00 FF FF 
2457   12EE FF 
2458   12EF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2458   12F3 00 00 FF FF 
2458   12F7 FF 
2459   12F8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2459   12FC 00 00 FF FF 
2459   1300 FF 
2460   1301 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2460   1305 00 00 FF FF 
2460   1309 FF 
2461   130A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2461   130E 00 00 FF FF 
2461   1312 FF 
2462   1313 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2462   1317 00 00 FF FF 
2462   131B FF 
2463   131C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2463   1320 00 00 FF FF 
2463   1324 FF 
2464   1325 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2464   1329 00 00 7F FF 
2464   132D FE 
2465   132E 00 00       			.DB	0,0
2466   1330             
2467   1330             spriteData07:
2468   1330 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2468   1334 00 00 7F FF 
2468   1338 FE 
2469   1339 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2469   133D 00 00 FF FF 
2469   1341 FF 
2470   1342 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2470   1346 00 00 FF FF 
2470   134A FF 
2471   134B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2471   134F 00 00 FF FF 
2471   1353 FF 
2472   1354 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2472   1358 00 00 FF FF 
2472   135C FF 
2473   135D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2473   1361 00 00 FF FF 
2473   1365 FF 
2474   1366 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2474   136A 00 00 FF FF 
2474   136E FF 
2475   136F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2475   1373 00 00 FF FF 
2475   1377 FF 
2476   1378 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2476   137C 00 00 FF FF 
2476   1380 FF 
2477   1381 80 00 01 00 			.DB	$80,$00,$01,$00,$08,$00,$ff,$ff,$ff
2477   1385 08 00 FF FF 
2477   1389 FF 
2478   138A 80 00 01 00 			.DB	$80,$00,$01,$00,$04,$00,$ff,$ff,$ff
2478   138E 04 00 FF FF 
2478   1392 FF 
2479   1393 80 00 01 00 			.DB	$80,$00,$01,$00,$02,$00,$ff,$ff,$ff
2479   1397 02 00 FF FF 
2479   139B FF 
2480   139C 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2480   13A0 01 00 FF FF 
2480   13A4 FF 
2481   13A5 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2481   13A9 01 00 FF FF 
2481   13AD FF 
2482   13AE 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2482   13B2 01 00 FF FF 
2482   13B6 FF 
2483   13B7 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2483   13BB FF 00 FF FF 
2483   13BF FF 
2484   13C0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2484   13C4 00 00 FF FF 
2484   13C8 FF 
2485   13C9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2485   13CD 00 00 FF FF 
2485   13D1 FF 
2486   13D2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2486   13D6 00 00 FF FF 
2486   13DA FF 
2487   13DB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2487   13DF 00 00 FF FF 
2487   13E3 FF 
2488   13E4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2488   13E8 00 00 FF FF 
2488   13EC FF 
2489   13ED 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2489   13F1 00 00 FF FF 
2489   13F5 FF 
2490   13F6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2490   13FA 00 00 FF FF 
2490   13FE FF 
2491   13FF 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2491   1403 00 00 7F FF 
2491   1407 FE 
2492   1408 00 00       			.DB	0,0
2493   140A             
2494   140A             spriteData08:	
2495   140A 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2495   140E 00 00 7F FF 
2495   1412 FE 
2496   1413 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2496   1417 00 00 FF FF 
2496   141B FF 
2497   141C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2497   1420 00 00 FF FF 
2497   1424 FF 
2498   1425 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2498   1429 00 00 FF FF 
2498   142D FF 
2499   142E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2499   1432 00 00 FF FF 
2499   1436 FF 
2500   1437 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2500   143B 00 00 FF FF 
2500   143F FF 
2501   1440 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2501   1444 00 00 FF FF 
2501   1448 FF 
2502   1449 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2502   144D 00 00 FF FF 
2502   1451 FF 
2503   1452 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2503   1456 00 00 FF FF 
2503   145A FF 
2504   145B 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2504   145F 7E 00 FF FF 
2504   1463 FF 
2505   1464 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2505   1468 81 00 FF FF 
2505   146C FF 
2506   146D 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2506   1471 81 00 FF FF 
2506   1475 FF 
2507   1476 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2507   147A 7E 00 FF FF 
2507   147E FF 
2508   147F 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2508   1483 81 00 FF FF 
2508   1487 FF 
2509   1488 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2509   148C 81 00 FF FF 
2509   1490 FF 
2510   1491 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2510   1495 7E 00 FF FF 
2510   1499 FF 
2511   149A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2511   149E 00 00 FF FF 
2511   14A2 FF 
2512   14A3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2512   14A7 00 00 FF FF 
2512   14AB FF 
2513   14AC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2513   14B0 00 00 FF FF 
2513   14B4 FF 
2514   14B5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2514   14B9 00 00 FF FF 
2514   14BD FF 
2515   14BE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2515   14C2 00 00 FF FF 
2515   14C6 FF 
2516   14C7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2516   14CB 00 00 FF FF 
2516   14CF FF 
2517   14D0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2517   14D4 00 00 FF FF 
2517   14D8 FF 
2518   14D9 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2518   14DD 00 00 7F FF 
2518   14E1 FE 
2519   14E2 00 00       			.DB	0,0
2520   14E4             
2521   14E4             spriteData09:	
2522   14E4 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2522   14E8 00 00 7F FF 
2522   14EC FE 
2523   14ED 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2523   14F1 00 00 FF FF 
2523   14F5 FF 
2524   14F6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2524   14FA 00 00 FF FF 
2524   14FE FF 
2525   14FF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2525   1503 00 00 FF FF 
2525   1507 FF 
2526   1508 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2526   150C 00 00 FF FF 
2526   1510 FF 
2527   1511 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2527   1515 00 00 FF FF 
2527   1519 FF 
2528   151A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2528   151E 00 00 FF FF 
2528   1522 FF 
2529   1523 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2529   1527 00 00 FF FF 
2529   152B FF 
2530   152C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2530   1530 00 00 FF FF 
2530   1534 FF 
2531   1535 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2531   1539 7E 00 FF FF 
2531   153D FF 
2532   153E 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2532   1542 81 00 FF FF 
2532   1546 FF 
2533   1547 80 00 01 00 			.DB	$80,$00,$01,$00,$08,$00,$ff,$ff,$ff
2533   154B 08 00 FF FF 
2533   154F FF 
2534   1550 80 00 01 00 			.DB	$80,$00,$01,$00,$7f,$00,$ff,$ff,$ff
2534   1554 7F 00 FF FF 
2534   1558 FF 
2535   1559 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2535   155D 81 00 FF FF 
2535   1561 FF 
2536   1562 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2536   1566 81 00 FF FF 
2536   156A FF 
2537   156B 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2537   156F 7E 00 FF FF 
2537   1573 FF 
2538   1574 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2538   1578 00 00 FF FF 
2538   157C FF 
2539   157D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2539   1581 00 00 FF FF 
2539   1585 FF 
2540   1586 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2540   158A 00 00 FF FF 
2540   158E FF 
2541   158F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2541   1593 00 00 FF FF 
2541   1597 FF 
2542   1598 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2542   159C 00 00 FF FF 
2542   15A0 FF 
2543   15A1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2543   15A5 00 00 FF FF 
2543   15A9 FF 
2544   15AA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2544   15AE 00 00 FF FF 
2544   15B2 FF 
2545   15B3 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2545   15B7 00 00 7F FF 
2545   15BB FE 
2546   15BC 00 00       			.DB	0,0
2547   15BE             
2548   15BE             spriteData10:	
2549   15BE 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2549   15C2 00 00 7F FF 
2549   15C6 FE 
2550   15C7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2550   15CB 00 00 FF FF 
2550   15CF FF 
2551   15D0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2551   15D4 00 00 FF FF 
2551   15D8 FF 
2552   15D9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2552   15DD 00 00 FF FF 
2552   15E1 FF 
2553   15E2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2553   15E6 00 00 FF FF 
2553   15EA FF 
2554   15EB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2554   15EF 00 00 FF FF 
2554   15F3 FF 
2555   15F4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2555   15F8 00 00 FF FF 
2555   15FC FF 
2556   15FD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2556   1601 00 00 FF FF 
2556   1605 FF 
2557   1606 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2557   160A 00 00 FF FF 
2557   160E FF 
2558   160F 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2558   1613 81 00 FF FF 
2558   1617 FF 
2559   1618 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2559   161C 81 00 FF FF 
2559   1620 FF 
2560   1621 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2560   1625 81 00 FF FF 
2560   1629 FF 
2561   162A 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2561   162E FF 00 FF FF 
2561   1632 FF 
2562   1633 80 00 01 00 			.DB	$80,$00,$01,$00,$42,$00,$ff,$ff,$ff
2562   1637 42 00 FF FF 
2562   163B FF 
2563   163C 80 00 01 00 			.DB	$80,$00,$01,$00,$24,$00,$ff,$ff,$ff
2563   1640 24 00 FF FF 
2563   1644 FF 
2564   1645 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2564   1649 18 00 FF FF 
2564   164D FF 
2565   164E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2565   1652 00 00 FF FF 
2565   1656 FF 
2566   1657 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2566   165B 00 00 FF FF 
2566   165F FF 
2567   1660 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2567   1664 00 00 FF FF 
2567   1668 FF 
2568   1669 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2568   166D 00 00 FF FF 
2568   1671 FF 
2569   1672 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2569   1676 00 00 FF FF 
2569   167A FF 
2570   167B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2570   167F 00 00 FF FF 
2570   1683 FF 
2571   1684 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2571   1688 00 00 FF FF 
2571   168C FF 
2572   168D 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2572   1691 00 00 7F FF 
2572   1695 FE 
2573   1696 00 00       			.DB	0,0
2574   1698             
2575   1698             spriteData11:
2576   1698 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2576   169C 00 00 7F FF 
2576   16A0 FE 
2577   16A1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2577   16A5 00 00 FF FF 
2577   16A9 FF 
2578   16AA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2578   16AE 00 00 FF FF 
2578   16B2 FF 
2579   16B3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2579   16B7 00 00 FF FF 
2579   16BB FF 
2580   16BC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2580   16C0 00 00 FF FF 
2580   16C4 FF 
2581   16C5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2581   16C9 00 00 FF FF 
2581   16CD FF 
2582   16CE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2582   16D2 00 00 FF FF 
2582   16D6 FF 
2583   16D7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2583   16DB 00 00 FF FF 
2583   16DF FF 
2584   16E0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2584   16E4 00 00 FF FF 
2584   16E8 FF 
2585   16E9 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2585   16ED FE 00 FF FF 
2585   16F1 FF 
2586   16F2 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2586   16F6 81 00 FF FF 
2586   16FA FF 
2587   16FB 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2587   16FF 81 00 FF FF 
2587   1703 FF 
2588   1704 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2588   1708 FE 00 FF FF 
2588   170C FF 
2589   170D 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2589   1711 81 00 FF FF 
2589   1715 FF 
2590   1716 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2590   171A 81 00 FF FF 
2590   171E FF 
2591   171F 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2591   1723 FE 00 FF FF 
2591   1727 FF 
2592   1728 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2592   172C 00 00 FF FF 
2592   1730 FF 
2593   1731 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2593   1735 00 00 FF FF 
2593   1739 FF 
2594   173A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2594   173E 00 00 FF FF 
2594   1742 FF 
2595   1743 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2595   1747 00 00 FF FF 
2595   174B FF 
2596   174C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2596   1750 00 00 FF FF 
2596   1754 FF 
2597   1755 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2597   1759 00 00 FF FF 
2597   175D FF 
2598   175E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2598   1762 00 00 FF FF 
2598   1766 FF 
2599   1767 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2599   176B 00 00 7F FF 
2599   176F FE 
2600   1770 00 00       			.DB	0,0
2601   1772             
2602   1772             spriteData12:
2603   1772 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2603   1776 00 00 7F FF 
2603   177A FE 
2604   177B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2604   177F 00 00 FF FF 
2604   1783 FF 
2605   1784 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2605   1788 00 00 FF FF 
2605   178C FF 
2606   178D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2606   1791 00 00 FF FF 
2606   1795 FF 
2607   1796 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2607   179A 00 00 FF FF 
2607   179E FF 
2608   179F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2608   17A3 00 00 FF FF 
2608   17A7 FF 
2609   17A8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2609   17AC 00 00 FF FF 
2609   17B0 FF 
2610   17B1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2610   17B5 00 00 FF FF 
2610   17B9 FF 
2611   17BA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2611   17BE 00 00 FF FF 
2611   17C2 FF 
2612   17C3 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2612   17C7 7E 00 FF FF 
2612   17CB FF 
2613   17CC 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2613   17D0 81 00 FF FF 
2613   17D4 FF 
2614   17D5 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2614   17D9 80 00 FF FF 
2614   17DD FF 
2615   17DE 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2615   17E2 80 00 FF FF 
2615   17E6 FF 
2616   17E7 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2616   17EB 80 00 FF FF 
2616   17EF FF 
2617   17F0 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2617   17F4 81 00 FF FF 
2617   17F8 FF 
2618   17F9 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2618   17FD 7E 00 FF FF 
2618   1801 FF 
2619   1802 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2619   1806 00 00 FF FF 
2619   180A FF 
2620   180B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2620   180F 00 00 FF FF 
2620   1813 FF 
2621   1814 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2621   1818 00 00 FF FF 
2621   181C FF 
2622   181D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2622   1821 00 00 FF FF 
2622   1825 FF 
2623   1826 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2623   182A 00 00 FF FF 
2623   182E FF 
2624   182F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2624   1833 00 00 FF FF 
2624   1837 FF 
2625   1838 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2625   183C 00 00 FF FF 
2625   1840 FF 
2626   1841 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2626   1845 00 00 7F FF 
2626   1849 FE 
2627   184A 00 00       			.DB	0,0
2628   184C             
2629   184C             spriteData13:
2630   184C 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2630   1850 00 00 7F FF 
2630   1854 FE 
2631   1855 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2631   1859 00 00 FF FF 
2631   185D FF 
2632   185E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2632   1862 00 00 FF FF 
2632   1866 FF 
2633   1867 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2633   186B 00 00 FF FF 
2633   186F FF 
2634   1870 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2634   1874 00 00 FF FF 
2634   1878 FF 
2635   1879 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2635   187D 00 00 FF FF 
2635   1881 FF 
2636   1882 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2636   1886 00 00 FF FF 
2636   188A FF 
2637   188B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2637   188F 00 00 FF FF 
2637   1893 FF 
2638   1894 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2638   1898 00 00 FF FF 
2638   189C FF 
2639   189D 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2639   18A1 FE 00 FF FF 
2639   18A5 FF 
2640   18A6 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2640   18AA 81 00 FF FF 
2640   18AE FF 
2641   18AF 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2641   18B3 81 00 FF FF 
2641   18B7 FF 
2642   18B8 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2642   18BC 81 00 FF FF 
2642   18C0 FF 
2643   18C1 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2643   18C5 81 00 FF FF 
2643   18C9 FF 
2644   18CA 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2644   18CE 81 00 FF FF 
2644   18D2 FF 
2645   18D3 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2645   18D7 FE 00 FF FF 
2645   18DB FF 
2646   18DC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2646   18E0 00 00 FF FF 
2646   18E4 FF 
2647   18E5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2647   18E9 00 00 FF FF 
2647   18ED FF 
2648   18EE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2648   18F2 00 00 FF FF 
2648   18F6 FF 
2649   18F7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2649   18FB 00 00 FF FF 
2649   18FF FF 
2650   1900 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2650   1904 00 00 FF FF 
2650   1908 FF 
2651   1909 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2651   190D 00 00 FF FF 
2651   1911 FF 
2652   1912 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2652   1916 00 00 FF FF 
2652   191A FF 
2653   191B 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2653   191F 00 00 7F FF 
2653   1923 FE 
2654   1924 00 00       			.DB	0,0
2655   1926             
2656   1926             spriteData14:
2657   1926 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2657   192A 00 00 7F FF 
2657   192E FE 
2658   192F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2658   1933 00 00 FF FF 
2658   1937 FF 
2659   1938 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2659   193C 00 00 FF FF 
2659   1940 FF 
2660   1941 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2660   1945 00 00 FF FF 
2660   1949 FF 
2661   194A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2661   194E 00 00 FF FF 
2661   1952 FF 
2662   1953 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2662   1957 00 00 FF FF 
2662   195B FF 
2663   195C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2663   1960 00 00 FF FF 
2663   1964 FF 
2664   1965 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2664   1969 00 00 FF FF 
2664   196D FF 
2665   196E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2665   1972 00 00 FF FF 
2665   1976 FF 
2666   1977 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2666   197B FF 00 FF FF 
2666   197F FF 
2667   1980 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2667   1984 80 00 FF FF 
2667   1988 FF 
2668   1989 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2668   198D 80 00 FF FF 
2668   1991 FF 
2669   1992 80 00 01 00 			.DB	$80,$00,$01,$00,$fc,$00,$ff,$ff,$ff
2669   1996 FC 00 FF FF 
2669   199A FF 
2670   199B 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2670   199F 80 00 FF FF 
2670   19A3 FF 
2671   19A4 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2671   19A8 80 00 FF FF 
2671   19AC FF 
2672   19AD 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2672   19B1 FF 00 FF FF 
2672   19B5 FF 
2673   19B6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2673   19BA 00 00 FF FF 
2673   19BE FF 
2674   19BF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2674   19C3 00 00 FF FF 
2674   19C7 FF 
2675   19C8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2675   19CC 00 00 FF FF 
2675   19D0 FF 
2676   19D1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2676   19D5 00 00 FF FF 
2676   19D9 FF 
2677   19DA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2677   19DE 00 00 FF FF 
2677   19E2 FF 
2678   19E3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2678   19E7 00 00 FF FF 
2678   19EB FF 
2679   19EC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2679   19F0 00 00 FF FF 
2679   19F4 FF 
2680   19F5 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2680   19F9 00 00 7F FF 
2680   19FD FE 
2681   19FE 00 00       			.DB	0,0
2682   1A00             
2683   1A00             spriteData15:
2684   1A00 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2684   1A04 00 00 7F FF 
2684   1A08 FE 
2685   1A09 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2685   1A0D 00 00 FF FF 
2685   1A11 FF 
2686   1A12 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2686   1A16 00 00 FF FF 
2686   1A1A FF 
2687   1A1B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2687   1A1F 00 00 FF FF 
2687   1A23 FF 
2688   1A24 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2688   1A28 00 00 FF FF 
2688   1A2C FF 
2689   1A2D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2689   1A31 00 00 FF FF 
2689   1A35 FF 
2690   1A36 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2690   1A3A 00 00 FF FF 
2690   1A3E FF 
2691   1A3F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2691   1A43 00 00 FF FF 
2691   1A47 FF 
2692   1A48 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2692   1A4C 00 00 FF FF 
2692   1A50 FF 
2693   1A51 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2693   1A55 80 00 FF FF 
2693   1A59 FF 
2694   1A5A 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2694   1A5E 80 00 FF FF 
2694   1A62 FF 
2695   1A63 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2695   1A67 80 00 FF FF 
2695   1A6B FF 
2696   1A6C 80 00 01 00 			.DB	$80,$00,$01,$00,$fc,$00,$ff,$ff,$ff
2696   1A70 FC 00 FF FF 
2696   1A74 FF 
2697   1A75 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2697   1A79 80 00 FF FF 
2697   1A7D FF 
2698   1A7E 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2698   1A82 80 00 FF FF 
2698   1A86 FF 
2699   1A87 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2699   1A8B FF 00 FF FF 
2699   1A8F FF 
2700   1A90 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2700   1A94 00 00 FF FF 
2700   1A98 FF 
2701   1A99 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2701   1A9D 00 00 FF FF 
2701   1AA1 FF 
2702   1AA2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2702   1AA6 00 00 FF FF 
2702   1AAA FF 
2703   1AAB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2703   1AAF 00 00 FF FF 
2703   1AB3 FF 
2704   1AB4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2704   1AB8 00 00 FF FF 
2704   1ABC FF 
2705   1ABD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2705   1AC1 00 00 FF FF 
2705   1AC5 FF 
2706   1AC6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2706   1ACA 00 00 FF FF 
2706   1ACE FF 
2707   1ACF 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2707   1AD3 00 00 7F FF 
2707   1AD7 FE 
2708   1AD8             			; .DB	0,0
2709   1AD8             
2710   1AD8             ;================================================================
2711   1AD8             			.ENDtasm: Number of errors = 0
