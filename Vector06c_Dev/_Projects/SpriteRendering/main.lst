0001   0000             ;-------------------------------------------------
0002   0000             ;|                                               |
0003   0000             ;|     Sprite Rendering Speed Test		         |
0004   0000             ;|     											 |
0005   0000             ;|     Original ver. 2020						 |
0006   0000             ;|     by KTSerg aka Sergey Cherkozianov		 |
0007   0000             ;-------------------------------------------------
0008   0000             
0009   0000             ; MACROS
0010   0000             #DEFINE RRC4					RRC \ RRC \ RRC \ RRC
0011   0000             
0012   0000             ; prefixes
0013   0000             ; ADDR - address
0014   0000             ; INT - interruption
0015   0000             ; SCR - screen
0016   0000             ; MEM - memory
0017   0000             ; LEN - length
0018   0000             ; SEC - seconds
0019   0000             ; RES - result
0020   0000             
0021   0000             ; global
0022   0000             #DEFINE PORT0_OUT_OUT			88H
0023   0000             
0024   0000             #DEFINE	JMP_OPCODE				0C3H
0025   0000             
0026   0000             #DEFINE	RESTART_ADDR			0000H
0027   0000             #DEFINE	INT_ADDR				0038H
0028   0000             #DEFINE	STACK_ADDR				8000H
0029   0000             #DEFINE TEMP_ADDR				0000H
0030   0000             
0031   0000             #DEFINE	SCR_BUFF_LEN			2000H
0032   0000             #DEFINE	SCR_MEM_LEN				8000H
0033   0000             
0034   0000             #DEFINE TEMP_WORD				0000H
0035   0000             #DEFINE	INT_TICKS_PER_SEC		50
0036   0000             
0037   0000             ; local
0038   0000             #DEFINE	TIMER_SEC				10
0039   0000             #DEFINE	TIMER_COUNTER_ADDR		9F10H
0040   0000             #DEFINE	TIMER_STOP_FLAG_ADDR	9F18H
0041   0000             #DEFINE	TIMER_STOP_FLAG_INIT	0FFH
0042   0000             
0043   0000             #DEFINE	SPRITE_COUNTER_ADDR		9FF4H
0044   0000             #DEFINE	SPRITE_SCR_ADDR			8EE0H
0045   0000             #DEFINE	STACK_TEMP_ADDR			9F80H
0046   0000             #DEFINE	RES_SCR_ADDR_0			80D0H
0047   0000             #DEFINE	RES_SCR_ADDR_1			80B0H
0048   0000             #DEFINE	RES_SCR_ADDR_2			8080H
0049   0000             #DEFINE	RES_SCR_ADDR_3			8060H
0050   0000             #DEFINE	RES_SCR_ADDR_4			8030H
0051   0000             #DEFINE	RES_SCR_ADDR_5			8010H
0052   0000             
0053   0000             #DEFINE	SPRITE_SCR_ADDR_		8F00H
0054   0000             #DEFINE	SPRITE_SCR_ADDR_0 		SPRITE_SCR_ADDR_ + 0D0H
0055   0000             #DEFINE	SPRITE_SCR_ADDR_1 		SPRITE_SCR_ADDR_ + 0B0H
0056   0000             #DEFINE	SPRITE_SCR_ADDR_2 		SPRITE_SCR_ADDR_ + 80H
0057   0000             #DEFINE	SPRITE_SCR_ADDR_3 		SPRITE_SCR_ADDR_ + 60H
0058   0000             #DEFINE	SPRITE_SCR_ADDR_4 		SPRITE_SCR_ADDR_ + 30H + 23
0059   0000             #DEFINE	SPRITE_SCR_ADDR_5 		SPRITE_SCR_ADDR_ + 10H + 23
0060   0000             
0061   0100             			.org	$0100
0062   0100             Start:
0063   0100 F3          			DI
0064   0101             			; dismount a quasi-disk
0065   0101 AF          			XRA		A
0066   0102 D3 10       			out		10H
0067   0104             			; set entry points of a restart, and an interruption
0068   0104 3E C3       			MVI		A, JMP_OPCODE
0069   0106 32 00 00    			STA		RESTART_ADDR
0070   0109 32 38 00    			STA		INT_ADDR
0071   010C 21 00 01    			LXI		H, Start
0072   010F 22 01 00    			SHLD 	RESTART_ADDR + 1
0073   0112 21 44 02    			LXI		H, Interruption2
0074   0115 22 39 00    			SHLD	INT_ADDR + 1
0075   0118             			; stack init
0076   0118 31 00 80    			LXI		SP, STACK_ADDR
0077   011B             
0078   011B             			; clear the screen
0079   011B 01 00 00    			LXI		B, 0000H
0080   011E 11 00 04    			LXI     D, SCR_MEM_LEN / 32
0081   0121 CD E4 0E    			CALL	MemReset
0082   0124             
0083   0124 FB          			EI
0084   0125 76          			HLT
0085   0126 CD 0D 0F    			CALL	SetPalette
0086   0129             
0087   0129             ;----------------------------------------------------------------
0088   0129             ; The list of the sprite rendering subroutines to measure the render speed.
0089   0129             ; The result is an amount of sprites rendered during TIMER_SEC seconds
0090   0129             
0091   0129 CD C5 01    			CALL	InitTimer
0092   012C 21 47 8F    			LXI		H, SPRITE_SCR_ADDR_4
0093   012F 22 E1 01    			SHLD	testDrawScrAddr
0094   0132 21 47 08    			LXI		H, DrawSprite_ivagor
0095   0135 22 E5 01    			SHLD	testDrawSub
0096   0138 21 30 80    			LXI		H, RES_SCR_ADDR_4
0097   013B 22 F4 01    			SHLD	testDrawResScrAddr
0098   013E CD DA 01    			CALL	TestDraw
0099   0141             
0100   0141 21 27 8F    			LXI		H, SPRITE_SCR_ADDR_5
0101   0144 22 E1 01    			SHLD	testDrawScrAddr
0102   0147 21 B1 0C    			LXI		H, DrawSprite_parallelno2
0103   014A 22 E5 01    			SHLD	testDrawSub
0104   014D 21 10 80    			LXI		H, RES_SCR_ADDR_5
0105   0150 22 F4 01    			SHLD	testDrawResScrAddr
0106   0153 CD C5 01    			CALL	InitTimer
0107   0156 CD DA 01    			CALL	TestDraw			
0108   0159             
0109   0159 21 D0 8F    			LXI		H, SPRITE_SCR_ADDR_0
0110   015C 22 E1 01    			SHLD	testDrawScrAddr
0111   015F 21 91 02    			LXI		H, DrawSprite_Jerri_orig
0112   0162 22 E5 01    			SHLD	testDrawSub
0113   0165 21 D0 80    			LXI		H, RES_SCR_ADDR_0
0114   0168 22 F4 01    			SHLD	testDrawResScrAddr
0115   016B CD C5 01    			CALL	InitTimer
0116   016E CD DA 01    			CALL	TestDraw
0117   0171             
0118   0171 21 B0 8F    			LXI		H, SPRITE_SCR_ADDR_1
0119   0174 22 E1 01    			SHLD	testDrawScrAddr
0120   0177 21 FA 05    			LXI		H, DrawSprite_Jerri_unrolled
0121   017A 22 E5 01    			SHLD	testDrawSub
0122   017D 21 B0 80    			LXI		H, RES_SCR_ADDR_1
0123   0180 22 F4 01    			SHLD	testDrawResScrAddr
0124   0183 CD C5 01    			CALL	InitTimer
0125   0186 CD DA 01    			CALL	TestDraw
0126   0189             
0127   0189 21 80 8F    			LXI		H, SPRITE_SCR_ADDR_2
0128   018C 22 E1 01    			SHLD	testDrawScrAddr
0129   018F 21 E6 02    			LXI		H, DrawSprite_Serg_orig
0130   0192 22 E5 01    			SHLD	testDrawSub
0131   0195 21 80 80    			LXI		H, RES_SCR_ADDR_2
0132   0198 22 F4 01    			SHLD	testDrawResScrAddr
0133   019B CD C5 01    			CALL	InitTimer
0134   019E CD DA 01    			CALL	TestDraw
0135   01A1             
0136   01A1 21 60 8F    			LXI		H, SPRITE_SCR_ADDR_3
0137   01A4 22 E1 01    			SHLD	testDrawScrAddr
0138   01A7 21 6B 03    			LXI		H, DrawSprite_Serg_unrolled
0139   01AA 22 E5 01    			SHLD	testDrawSub
0140   01AD 21 60 80    			LXI		H, RES_SCR_ADDR_3
0141   01B0 22 F4 01    			SHLD	testDrawResScrAddr
0142   01B3 CD C5 01    			CALL	InitTimer
0143   01B6 CD DA 01    			CALL	TestDraw	
0144   01B9             
0145   01B9             ;----------------------------------------------------------------
0146   01B9 3E 04       			MVI		A, 4
0147   01BB 32 3C 0F    			STA		borderColorIdx
0148   01BE 76          			HLT		
0149   01BF CD 0D 0F    			CALL	SetPalette
0150   01C2 C3 C2 01    infLoop:	JMP		infLoop
0151   01C5             
0152   01C5             
0153   01C5             ;================================================================
0154   01C5             ; SUBROUTINES
0155   01C5             ;================================================================
0156   01C5             
0157   01C5             ;----------------------------------------------------------------
0158   01C5             ; Timer Initialization
0159   01C5             ; in: none
0160   01C5             ; use: A, HL
0161   01C5             
0162   01C5 F3          InitTimer:	DI
0163   01C6             			; timer checks interruption ticks
0164   01C6 21 F4 01    			LXI		H, TIMER_SEC * INT_TICKS_PER_SEC
0165   01C9 22 10 9F    			SHLD	TIMER_COUNTER_ADDR
0166   01CC 3E FF       			MVI		A, TIMER_STOP_FLAG_INIT
0167   01CE 32 18 9F    			STA		TIMER_STOP_FLAG_ADDR
0168   01D1 21 00 00    			LXI		H, 0
0169   01D4 22 F4 9F    			SHLD	SPRITE_COUNTER_ADDR
0170   01D7 FB          			EI
0171   01D8 76          			HLT
0172   01D9 C9          			RET
0173   01DA             
0174   01DA             ;----------------------------------------------------------------
0175   01DA             ; Test Drawing a Sprite (24x24 pixels)
0176   01DA             				
0177   01DA             TestDraw:	.MODULE TestDraw
0178   01DA 2A F4 9F    			LHLD	SPRITE_COUNTER_ADDR
0179   01DD             
0180   01DD 01 49 10    _loop:		LXI		B, spriteData01
0181   01E0             testDrawScrAddr:.EQU $+1
0182   01E0 11 00 00    			LXI		D, TEMP_ADDR
0183   01E3 E5          			PUSH	H
0184   01E4             testDrawSub:.EQU	$+1
0185   01E4 CD 00 00    			CALL	TEMP_ADDR
0186   01E7 E1          			POP		H
0187   01E8 23          			INX		H
0188   01E9 3A 18 9F    			LDA		TIMER_STOP_FLAG_ADDR
0189   01EC B7          			ORA		A
0190   01ED C2 DD 01    			JNZ		_loop
0191   01F0 22 F4 9F    			SHLD	SPRITE_COUNTER_ADDR
0192   01F3             
0193   01F3             testDrawResScrAddr: .EQU $+1
0194   01F3 11 00 00    			LXI		D, TEMP_ADDR
0195   01F6 CD FA 01    			CALL	DrawResult
0196   01F9 C9          			RET
0197   01FA             
0198   01FA             ;----------------------------------------------------------------
0199   01FA             ; Draw a Test Result (HEX)
0200   01FA             ; in: DE	result screen address
0201   01FA             ; use: A, HL, DE,
0202   01FA             
0203   01FA             DrawResult:
0204   01FA 3A F5 9F    			LDA		SPRITE_COUNTER_ADDR + 1
0205   01FD 0F          			RRC4
0205   01FE 0F          
0205   01FF 0F          
0205   0200 0F          
0206   0201 CD 36 02    			CALL	GetSpriteAddr
0207   0204 D5          			PUSH	D
0208   0205 CD 91 02    			CALL	DrawSprite_Jerri_orig
0209   0208 D1          			POP		D
0210   0209 14          			INR		D
0211   020A 14          			INR		D
0212   020B 14          			INR		D
0213   020C             
0214   020C 3A F5 9F    			LDA		SPRITE_COUNTER_ADDR + 1
0215   020F CD 36 02    			CALL	GetSpriteAddr
0216   0212 D5          			PUSH	D
0217   0213 CD 91 02    			CALL	DrawSprite_Jerri_orig
0218   0216 D1          			POP		D
0219   0217 14          			INR		D
0220   0218 14          			INR		D
0221   0219 14          			INR		D
0222   021A             
0223   021A 3A F4 9F    			LDA		SPRITE_COUNTER_ADDR
0224   021D 0F          			RRC4
0224   021E 0F          
0224   021F 0F          
0224   0220 0F          
0225   0221 CD 36 02    			CALL	GetSpriteAddr
0226   0224 D5          			PUSH	D
0227   0225 CD 91 02    			CALL	DrawSprite_Jerri_orig
0228   0228 D1          			POP		D
0229   0229 14          			INR		D
0230   022A 14          			INR		D
0231   022B 14          			INR		D
0232   022C             
0233   022C 3A F4 9F    			LDA		SPRITE_COUNTER_ADDR
0234   022F CD 36 02    			CALL	GetSpriteAddr
0235   0232 CD 91 02    			CALL	DrawSprite_Jerri_orig
0236   0235             
0237   0235 C9          			RET
0238   0236             
0239   0236             ;----------------------------------------------------------------
0240   0236             ; Get an address by a sprite index
0241   0236             ; in: A		sprite index
0242   0236             ; out: BC	sprite address
0243   0236             ; use: HL
0244   0236             
0245   0236             GetSpriteAddr:
0246   0236             			; BC = (A % 16) * 2 + spriteTable
0247   0236 E6 0F       			ANI		0FH				; (8)
0248   0238 87          			ADD		A				; (4)
0249   0239 4F          			MOV		C, A			; (8)
0250   023A 06 00       			MVI		B, 0			; (8)
0251   023C 21 4D 0F    			LXI		H, spriteTable	; (12)
0252   023F 09          			DAD		B				; (12)
0253   0240 4E          			MOV		C, M			; (8)
0254   0241 23          			INX		H				; (8)
0255   0242 46          			MOV		B, M			; (8)
0256   0243 C9          			RET						; (12)
0257   0244             									; (88) total, 14 bytes
0258   0244             
0259   0244             ;----------------------------------------------------------------
0260   0244             ; The interruption sub with a stack protection.
0261   0244             ; It supports stack manipulations in the main program.
0262   0244             ;
0263   0244             ; When stack manupulations take place BC has to keep stack data that
0264   0244             ; is corrupted when an interruption happens and PUSH
0265   0244             			.MODULE Int2
0266   0244             Interruption2:
0267   0244             			; restore the Stack
0268   0244 E3          			XTHL
0269   0245 22 76 02    			SHLD	_return + 1
0270   0248 E1          			POP		H
0271   0249 22 6F 02    			SHLD	_restoreHL + 1
0272   024C F5          			PUSH    PSW
0273   024D 21 02 00    			LXI		H, 2
0274   0250 39          			DAD		SP
0275   0251 22 72 02    			SHLD	_restoreSP + 1
0276   0254 F1          			POP     PSW
0277   0255 C5          			PUSH	B
0278   0256             			
0279   0256 31 80 9F    			LXI		SP, STACK_TEMP_ADDR
0280   0259 F5          			PUSH	PSW
0281   025A C5          			PUSH	B
0282   025B D5          			PUSH	D
0283   025C             
0284   025C             			; common interruption logic
0285   025C 2A 10 9F    			LHLD	TIMER_COUNTER_ADDR
0286   025F 2B          			DCX		H
0287   0260 22 10 9F    			SHLD	TIMER_COUNTER_ADDR
0288   0263 7C          			MOV		A, H
0289   0264 B5          			ORA		L
0290   0265 C2 6B 02    			JNZ		_doNotStopTimer
0291   0268             
0292   0268 32 18 9F    			STA	TIMER_STOP_FLAG_ADDR	; запись 00 в фдаг остановки вывода спрайтов
0293   026B             
0294   026B             _doNotStopTimer:
0295   026B D1          			POP		D
0296   026C C1          			POP		B
0297   026D F1          			POP		PSW
0298   026E 21 00 00    _restoreHL:	LXI		H, TEMP_ADDR
0299   0271 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR
0300   0274 FB          			EI
0301   0275 C3 00 00    _return:	JMP		TEMP_ADDR
0302   0278             
0303   0278             
0304   0278             ;----------------------------------------------------------------
0305   0278             ; The common interruption sub
0306   0278             ;
0307   0278             			.MODULE Interruption1
0308   0278             Interruption1:
0309   0278 F5          			PUSH	PSW
0310   0279 C5          			PUSH	B
0311   027A D5          			PUSH	D
0312   027B E5          			PUSH	H
0313   027C             
0314   027C             			; common interruption logic
0315   027C 2A 10 9F    			LHLD	TIMER_COUNTER_ADDR
0316   027F 2B          			DCX		H
0317   0280 22 10 9F    			SHLD	TIMER_COUNTER_ADDR
0318   0283 7C          			MOV		A, H
0319   0284 B5          			ORA		L
0320   0285 C2 8B 02    			JNZ	_doNotStopTimer
0321   0288             			; set the flag to 0
0322   0288 32 18 9F    			STA	TIMER_STOP_FLAG_ADDR
0323   028B             
0324   028B             _doNotStopTimer:
0325   028B E1          			POP		H
0326   028C D1          			POP		D
0327   028D C1          			POP		B
0328   028E F1          			POP		PSW
0329   028F FB          			EI
0330   0290 C9          			RET
0331   0291             
0332   0291             ;========================================================
0333   0291             ;вывод спрайта в системе битпланов Вектор 06
0334   0291             ;ширина спрайта -24
0335   0291             ;на входе
0336   0291             ;bc адрес спрайта
0337   0291             ;de aдрес на экране 
0338   0291             ;E-Y D-X 
0339   0291             			.MODULE DS_Jerri_orig
0340   0291             DrawSprite_Jerri_orig:
0341   0291             			; store SP
0342   0291 21 00 00    			LXI		H, 0
0343   0294 39          			DAD		SP
0344   0295 22 E3 02    			SHLD	_restoreSP+1
0345   0298             			
0346   0298 3E 0C       			MVI		A, 12
0347   029A 60          			MOV		H, B
0348   029B 69          			MOV		L, C
0349   029C 4E          			MOV		C, M
0350   029D 23          			INX		H
0351   029E 46          			MOV		B, M
0352   029F 23          			INX		H
0353   02A0 F9          			SPHL
0354   02A1             		;задаем Y в L
0355   02A1 6B          			MOV		L, E
0356   02A2             		;задаем высоту спрайта в E
0357   02A2 5F          			MOV		E, A
0358   02A3             		;задаем X в A
0359   02A3 7A          			MOV		A, D
0360   02A4             		;переход между битпланами
0361   02A4 16 20       			MVI		D, 20H
0362   02A6             _loop:
0363   02A6 67          			MOV		H, A
0364   02A7             		;рисуем на первом плане
0365   02A7 71          			MOV		M, C
0366   02A8 24          			INR		H
0367   02A9 70          			MOV		M, B
0368   02AA 24          			INR		H
0369   02AB C1          			POP		B
0370   02AC 71          			MOV		M, C
0371   02AD             		;переход на второй битплан
0372   02AD 82          			ADD		D
0373   02AE             
0374   02AE 67          			MOV		H, A
0375   02AF             		;рисуем на втором плане
0376   02AF 70          			MOV		M, B
0377   02B0 24          			INR		H
0378   02B1 C1          			POP		B
0379   02B2 71          			MOV		M, C
0380   02B3 24          			INR		H
0381   02B4 70          			MOV		M, B
0382   02B5 C1          			POP		B
0383   02B6             		;переход на третий битплан
0384   02B6 82          			ADD		D
0385   02B7             
0386   02B7 67          			MOV		H, A
0387   02B8             		;рисуем на третьем плане
0388   02B8 71          			MOV		M, C
0389   02B9 24          			INR		H
0390   02BA 70          			MOV		M, B
0391   02BB 24          			INR		H
0392   02BC C1          			POP		B
0393   02BD 71          			MOV		M, C
0394   02BE             		;возвращаемся на первый план	
0395   02BE D6 40       			SUI		$40
0396   02C0 67          			MOV		h,a
0397   02C1             		;переходим на следующую строку
0398   02C1 2C          			INR	l	
0399   02C2             
0400   02C2             		;повторяем цикл рисования
0401   02C2 70          			MOV		M, B
0402   02C3 24          			INR		H
0403   02C4 C1          			POP		B
0404   02C5 71          			MOV		M, C
0405   02C6 24          			INR		H
0406   02C7 70          			MOV		M, B
0407   02C8 C1          			POP		B
0408   02C9             		;переход на второй битплан
0409   02C9 82          			ADD	d
0410   02CA             
0411   02CA 67          			MOV	h,a
0412   02CB             		;рисуем на втором плане
0413   02CB 71          			MOV		M, C
0414   02CC 24          			INR		H
0415   02CD 70          			MOV		M, B
0416   02CE 24          			INR		H
0417   02CF C1          			POP		B
0418   02D0 71          			MOV		M, C
0419   02D1             		;переход на третий битплан
0420   02D1 82          			ADD	d
0421   02D2             
0422   02D2 67          			MOV	h,a
0423   02D3             		;рисуем на третьем плане
0424   02D3 70          			MOV		M, B
0425   02D4 24          			INR		H
0426   02D5 C1          			POP		B
0427   02D6 71          			MOV		M, C
0428   02D7 24          			INR		H
0429   02D8 70          			MOV		M, B
0430   02D9             		;выбираем следующую пару байтов для цикла рисования
0431   02D9 C1          			POP		B
0432   02DA             
0433   02DA             		;возвращаемся на первый план	
0434   02DA D6 40       			SUI	$40
0435   02DC 67          			MOV	h,a
0436   02DD             		;переходим на следующую строку
0437   02DD 2C          			INR	l	
0438   02DE             		;проверяем на завершение цикла 
0439   02DE 1D          			DCR	e
0440   02DF C2 A6 02    			JNZ	_loop	
0441   02E2             _restoreSP:
0442   02E2 31 00 00    			LXI		SP, TEMP_ADDR
0443   02E5 C9          			RET
0444   02E6             ;
0445   02E6             ;========================================
0446   02E6             ; выводим по 4 строки спрайта
0447   02E6             ;на входе
0448   02E6             ;bc адрес спрайта
0449   02E6             ;de aдрес на экране 
0450   02E6             ;E-Y D-X 
0451   02E6             ;=================================================================
0452   02E6             DrawSprite_Serg_orig:
0453   02E6 21 00 00    	LXI	h,0
0454   02E9 39          	DAD	sp	; в hl - указатель стека
0455   02EA 22 66 03    	SHLD	sp_rd+1	; сохраним указатель стека для восстановления
0456   02ED 60          	MOV	h,b
0457   02EE 69          	MOV	l,c
0458   02EF F9          	SPHL	; hl -> sp  - указатель стека на начало указанного спрайта
0459   02F0 EB          	XCHG		; обмен hl<->de
0460   02F1 22 69 03    	SHLD	spr_ekran	; адрес спрайта на экране
0461   02F4             ;
0462   02F4             ; вывод спрайта
0463   02F4 1E 06       	MVI	e,6	; количество повторов вывода 4 строк спрайта
0464   02F6 2A 69 03    	LHLD	spr_ekran	; получение адреса спрайта на экране
0465   02F9 16 20       	MVI	d,$20		 ; смещение на след. экранную плоскость
0466   02FB 7C          spr_c6:	MOV	a,h	; сохранить адрес колонки на первой экр. плоскости
0467   02FC             ;
0468   02FC C1          	POP		B	; прочитать два байта спрайта
0469   02FD 71          	MOV		M, C	; вывод байта на экран
0470   02FE 2C          	INR	l	 ; строка вверх на экране
0471   02FF 70          	MOV		M, B	; вывод байта на экран
0472   0300 24          	INR		H	 ; следующая колонка
0473   0301 C1          	POP		B	; прочитать два байта спрайта
0474   0302 71          	MOV		M, C	; вывод байта на экран
0475   0303 2D          	DCR	l	 ; строка вниз на экране
0476   0304 70          	MOV		M, B	; вывод байта на экран
0477   0305 24          	INR		H	 ; следующая колонка
0478   0306 C1          	POP		B	; прочитать два байта спрайта
0479   0307 71          	MOV		M, C	; вывод байта на экран
0480   0308 2C          	INR	l	 ; строка вверх на экране
0481   0309 70          	MOV		M, B	; вывод байта на экран
0482   030A             ;
0483   030A 82          	ADD	d	; след. экранная плоскость
0484   030B 67          	MOV	h,a
0485   030C             ;
0486   030C C1          	POP		B	; прочитать два байта спрайта
0487   030D 71          	MOV		M, C	; вывод байта на экран
0488   030E 2D          	DCR	l	 ; строка вниз на экране
0489   030F 70          	MOV		M, B	; вывод байта на экран
0490   0310 24          	INR		H	 ; следующая колонка
0491   0311 C1          	POP		B	; прочитать два байта спрайта
0492   0312 71          	MOV		M, C	; вывод байта на экран
0493   0313 2C          	INR	l	 ; строка вверх на экране
0494   0314 70          	MOV		M, B	; вывод байта на экран
0495   0315 24          	INR		H	 ; следующая колонка
0496   0316 C1          	POP		B	; прочитать два байта спрайта
0497   0317 71          	MOV		M, C	; вывод байта на экран
0498   0318 2D          	DCR	l	 ; строка вниз на экране
0499   0319 70          	MOV		M, B	; вывод байта на экран
0500   031A             ;
0501   031A 82          	ADD	d	; след. экранная плоскость
0502   031B 67          	MOV	h,a
0503   031C             ;
0504   031C C1          	POP		B	; прочитать два байта спрайта
0505   031D 71          	MOV		M, C	; вывод байта на экран
0506   031E 2C          	INR	l	 ; строка вверх на экране
0507   031F 70          	MOV		M, B	; вывод байта на экран
0508   0320 24          	INR		H	 ; следующая колонка
0509   0321 C1          	POP		B	; прочитать два байта спрайта
0510   0322 71          	MOV		M, C	; вывод байта на экран
0511   0323 2D          	DCR	l	 ; строка вниз на экране
0512   0324 70          	MOV		M, B	; вывод байта на экран
0513   0325 24          	INR		H	 ; следующая колонка
0514   0326 C1          	POP		B	; прочитать два байта спрайта
0515   0327 71          	MOV		M, C	; вывод байта на экран
0516   0328 2C          	INR	l	 ; строка вверх на экране
0517   0329 70          	MOV		M, B	; вывод байта на экран
0518   032A             ;
0519   032A 2C          	INR	l	 ; строка вверх на экране - правая колонка, 3-я строка
0520   032B D6 40       	SUI	$40
0521   032D 67          	MOV	h,a	; первая экранная плоскость
0522   032E             ;
0523   032E C1          	POP		B	; прочитать два байта спрайта
0524   032F 71          	MOV		M, C	; вывод байта на экран
0525   0330 2C          	INR	l	 ; строка вверх на экране
0526   0331 70          	MOV		M, B	; вывод байта на экран
0527   0332 24          	INR		H	 ; следующая колонка
0528   0333 C1          	POP		B	; прочитать два байта спрайта
0529   0334 71          	MOV		M, C	; вывод байта на экран
0530   0335 2D          	DCR	l	 ; строка вниз на экране
0531   0336 70          	MOV		M, B	; вывод байта на экран
0532   0337 24          	INR		H	 ; следующая колонка
0533   0338 C1          	POP		B	; прочитать два байта спрайта
0534   0339 71          	MOV		M, C	; вывод байта на экран
0535   033A 2C          	INR	l	 ; строка вверх на экране
0536   033B 70          	MOV		M, B	; вывод байта на экран
0537   033C             ;
0538   033C 82          	ADD	d	; след. экранная плоскость
0539   033D 67          	MOV	h,a
0540   033E             ;
0541   033E C1          	POP		B	; прочитать два байта спрайта
0542   033F 71          	MOV		M, C	; вывод байта на экран
0543   0340 2D          	DCR	l	 ; строка вниз на экране
0544   0341 70          	MOV		M, B	; вывод байта на экран
0545   0342 24          	INR		H	 ; следующая колонка
0546   0343 C1          	POP		B	; прочитать два байта спрайта
0547   0344 71          	MOV		M, C	; вывод байта на экран
0548   0345 2C          	INR	l	 ; строка вверх на экране
0549   0346 70          	MOV		M, B	; вывод байта на экран
0550   0347 24          	INR		H	 ; следующая колонка
0551   0348 C1          	POP		B	; прочитать два байта спрайта
0552   0349 71          	MOV		M, C	; вывод байта на экран
0553   034A 2D          	DCR	l	 ; строка вниз на экране
0554   034B 70          	MOV		M, B	; вывод байта на экран
0555   034C             ;
0556   034C 82          	ADD	d	; след. экранная плоскость
0557   034D 67          	MOV	h,a
0558   034E             ;
0559   034E C1          	POP		B	; прочитать два байта спрайта
0560   034F 71          	MOV		M, C	; вывод байта на экран
0561   0350 2C          	INR	l	 ; строка вверх на экране
0562   0351 70          	MOV		M, B	; вывод байта на экран
0563   0352 24          	INR		H	 ; следующая колонка
0564   0353 C1          	POP		B	; прочитать два байта спрайта
0565   0354 71          	MOV		M, C	; вывод байта на экран
0566   0355 2D          	DCR	l	 ; строка вниз на экране
0567   0356 70          	MOV		M, B	; вывод байта на экран
0568   0357 24          	INR		H	 ; следующая колонка
0569   0358 C1          	POP		B	; прочитать два байта спрайта
0570   0359 71          	MOV		M, C	; вывод байта на экран
0571   035A 2C          	INR	l	 ; строка вверх на экране
0572   035B 70          	MOV		M, B	; вывод байта на экран
0573   035C             ;
0574   035C 2C          	INR	l	 ; строка вверх на экране - правая колонка, 3-я строка
0575   035D D6 40       	SUI	$40
0576   035F 67          	MOV	h,a	; первая экранная плоскость
0577   0360             ;
0578   0360 1D          	DCR	e
0579   0361 C2 FB 02    	JNZ	spr_c6
0580   0364             ;
0581   0364 C1          	POP		B	; пустое чтение
0582   0365             ;
0583   0365 31 00 00    sp_rd:	LXI	sp,0	; восстановление стека после вывода спрайта
0584   0368             ;
0585   0368 C9          	RET	; вЫход из подпрограммы вывода спрайта на экран
0586   0369             ;
0587   0369             spr_ekran:
0588   0369 80 88       	.DB	$80,$88		; адрес на экране для вывода спрайта
0589   036B             
0590   036B             ;----------------------------------------------------------------
0591   036B             ; draw a sprite (24x24 pixels)
0592   036B             ; author: Serg
0593   036B             ; description: выводим по колонке, слева на право
0594   036B             
0595   036B             ; in:
0596   036B             ; BC	sprite data
0597   036B             ; DE	screen address (x,y)
0598   036B             			.MODULE DrawSprite_Serg_unrolled
0599   036B             DrawSprite_Serg_unrolled:
0600   036B 21 00 00    			LXI		H, 0
0601   036E 39          			DAD		SP			; в hl - указатель стека
0602   036F 22 4E 04    			SHLD	spr2rd+1	; сохраним указатель стека для восстановления
0603   0372 60          			MOV	h,b
0604   0373 69          			MOV	l,c
0605   0374 F9          			SPHL	; hl -> sp  - указатель стека на начало указанного спрайта
0606   0375 EB          			XCHG		; обмен hl<->de
0607   0376             
0608   0376 22 69 03    			SHLD	spr_ekran	; адрес спрайта на экране
0609   0379 3E 03       			MVI	a,3	; количество повторов вывода колонок
0610   037B 32 44 04    			STA	spr2k+1	; сохраним в алгоритм
0611   037E 7D          			MOV	a,l	 ; строка для вывода спрайта Y
0612   037F 32 42 04    			STA	spr2l+1	 ; сохраним Y
0613   0382 7C          			MOV	a,h
0614   0383 C6 20       			ADI	$20
0615   0385 57          			MOV	d,a	; вторая плоскость
0616   0386 C6 20       			ADI	$20
0617   0388 5F          			MOV	e,a	; третья плоскость
0618   0389             		;	MOV	a,h	; первая плоскость
0619   0389             ;
0620   0389             ; вывод спрайта
0621   0389             spr2c6:
0622   0389 7C          	MOV	a,h	; первая плоскость
0623   038A             ; строки 1 и 2
0624   038A C1          	POP		B	; прочитать два байта спрайта
0625   038B 71          	MOV		M, C	; вывод байта на экран
0626   038C 62          	MOV	h,d	 ; вторая плоскость
0627   038D 70          	MOV		M, B	; вывод байта на экран
0628   038E 63          	MOV	h,e	 ; третья плоскость
0629   038F C1          	POP		B	; прочитать два байта спрайта
0630   0390 71          	MOV		M, C	; вывод байта на экран
0631   0391 2C          	INR	l	 ; строка вверх на экране
0632   0392 70          	MOV		M, B	; вывод байта на экран
0633   0393 62          	MOV	h,d	 ; вторая плоскость
0634   0394 C1          	POP		B	; прочитать два байта спрайта
0635   0395 71          	MOV		M, C	; вывод байта на экран
0636   0396 67          	MOV	h,a	; первая плоскость
0637   0397 70          	MOV		M, B	; вывод байта на экран
0638   0398             ; строки 3 и 4
0639   0398 2C          	INR	l	 ; строка вверх на экране
0640   0399 C1          	POP		B	; прочитать два байта спрайта
0641   039A 71          	MOV		M, C	; вывод байта на экран
0642   039B 62          	MOV	h,d	 ; вторая плоскость
0643   039C 70          	MOV		M, B	; вывод байта на экран
0644   039D 63          	MOV	h,e	 ; третья плоскость
0645   039E C1          	POP		B	; прочитать два байта спрайта
0646   039F 71          	MOV		M, C	; вывод байта на экран
0647   03A0 2C          	INR	l	 ; строка вверх на экране
0648   03A1 70          	MOV		M, B	; вывод байта на экран
0649   03A2 62          	MOV	h,d	 ; вторая плоскость
0650   03A3 C1          	POP		B	; прочитать два байта спрайта
0651   03A4 71          	MOV		M, C	; вывод байта на экран
0652   03A5 67          	MOV	h,a	; первая плоскость
0653   03A6 70          	MOV		M, B	; вывод байта на экран
0654   03A7             ; строки 5 и 6
0655   03A7 2C          	INR	l	 ; строка вверх на экране
0656   03A8 C1          	POP		B	; прочитать два байта спрайта
0657   03A9 71          	MOV		M, C	; вывод байта на экран
0658   03AA 62          	MOV	h,d	 ; вторая плоскость
0659   03AB 70          	MOV		M, B	; вывод байта на экран
0660   03AC 63          	MOV	h,e	 ; третья плоскость
0661   03AD C1          	POP		B	; прочитать два байта спрайта
0662   03AE 71          	MOV		M, C	; вывод байта на экран
0663   03AF 2C          	INR	l	 ; строка вверх на экране
0664   03B0 70          	MOV		M, B	; вывод байта на экран
0665   03B1 62          	MOV	h,d	 ; вторая плоскость
0666   03B2 C1          	POP		B	; прочитать два байта спрайта
0667   03B3 71          	MOV		M, C	; вывод байта на экран
0668   03B4 67          	MOV	h,a	; первая плоскость
0669   03B5 70          	MOV		M, B	; вывод байта на экран
0670   03B6             ; строки 7 и 8
0671   03B6 2C          	INR	l	 ; строка вверх на экране
0672   03B7 C1          	POP		B	; прочитать два байта спрайта
0673   03B8 71          	MOV		M, C	; вывод байта на экран
0674   03B9 62          	MOV	h,d	 ; вторая плоскость
0675   03BA 70          	MOV		M, B	; вывод байта на экран
0676   03BB 63          	MOV	h,e	 ; третья плоскость
0677   03BC C1          	POP		B	; прочитать два байта спрайта
0678   03BD 71          	MOV		M, C	; вывод байта на экран
0679   03BE 2C          	INR	l	 ; строка вверх на экране
0680   03BF 70          	MOV		M, B	; вывод байта на экран
0681   03C0 62          	MOV	h,d	 ; вторая плоскость
0682   03C1 C1          	POP		B	; прочитать два байта спрайта
0683   03C2 71          	MOV		M, C	; вывод байта на экран
0684   03C3 67          	MOV	h,a	; первая плоскость
0685   03C4 70          	MOV		M, B	; вывод байта на экран
0686   03C5             ; строки 9 и 10
0687   03C5 2C          	INR	l	 ; строка вверх на экране
0688   03C6 C1          	POP		B	; прочитать два байта спрайта
0689   03C7 71          	MOV		M, C	; вывод байта на экран
0690   03C8 62          	MOV	h,d	 ; вторая плоскость
0691   03C9 70          	MOV		M, B	; вывод байта на экран
0692   03CA 63          	MOV	h,e	 ; третья плоскость
0693   03CB C1          	POP		B	; прочитать два байта спрайта
0694   03CC 71          	MOV		M, C	; вывод байта на экран
0695   03CD 2C          	INR	l	 ; строка вверх на экране
0696   03CE 70          	MOV		M, B	; вывод байта на экран
0697   03CF 62          	MOV	h,d	 ; вторая плоскость
0698   03D0 C1          	POP		B	; прочитать два байта спрайта
0699   03D1 71          	MOV		M, C	; вывод байта на экран
0700   03D2 67          	MOV	h,a	; первая плоскость
0701   03D3 70          	MOV		M, B	; вывод байта на экран
0702   03D4             ; строки 11 и 12
0703   03D4 2C          	INR	l	 ; строка вверх на экране
0704   03D5 C1          	POP		B	; прочитать два байта спрайта
0705   03D6 71          	MOV		M, C	; вывод байта на экран
0706   03D7 62          	MOV	h,d	 ; вторая плоскость
0707   03D8 70          	MOV		M, B	; вывод байта на экран
0708   03D9 63          	MOV	h,e	 ; третья плоскость
0709   03DA C1          	POP		B	; прочитать два байта спрайта
0710   03DB 71          	MOV		M, C	; вывод байта на экран
0711   03DC 2C          	INR	l	 ; строка вверх на экране
0712   03DD 70          	MOV		M, B	; вывод байта на экран
0713   03DE 62          	MOV	h,d	 ; вторая плоскость
0714   03DF C1          	POP		B	; прочитать два байта спрайта
0715   03E0 71          	MOV		M, C	; вывод байта на экран
0716   03E1 67          	MOV	h,a	; первая плоскость
0717   03E2 70          	MOV		M, B	; вывод байта на экран
0718   03E3             ; строки 13 и 14
0719   03E3 2C          	INR	l	 ; строка вверх на экране
0720   03E4 C1          	POP		B	; прочитать два байта спрайта
0721   03E5 71          	MOV		M, C	; вывод байта на экран
0722   03E6 62          	MOV	h,d	 ; вторая плоскость
0723   03E7 70          	MOV		M, B	; вывод байта на экран
0724   03E8 63          	MOV	h,e	 ; третья плоскость
0725   03E9 C1          	POP		B	; прочитать два байта спрайта
0726   03EA 71          	MOV		M, C	; вывод байта на экран
0727   03EB 2C          	INR	l	 ; строка вверх на экране
0728   03EC 70          	MOV		M, B	; вывод байта на экран
0729   03ED 62          	MOV	h,d	 ; вторая плоскость
0730   03EE C1          	POP		B	; прочитать два байта спрайта
0731   03EF 71          	MOV		M, C	; вывод байта на экран
0732   03F0 67          	MOV	h,a	; первая плоскость
0733   03F1 70          	MOV		M, B	; вывод байта на экран
0734   03F2             ; строки 15 и 16
0735   03F2 2C          	INR	l	 ; строка вверх на экране
0736   03F3 C1          	POP		B	; прочитать два байта спрайта
0737   03F4 71          	MOV		M, C	; вывод байта на экран
0738   03F5 62          	MOV	h,d	 ; вторая плоскость
0739   03F6 70          	MOV		M, B	; вывод байта на экран
0740   03F7 63          	MOV	h,e	 ; третья плоскость
0741   03F8 C1          	POP		B	; прочитать два байта спрайта
0742   03F9 71          	MOV		M, C	; вывод байта на экран
0743   03FA 2C          	INR	l	 ; строка вверх на экране
0744   03FB 70          	MOV		M, B	; вывод байта на экран
0745   03FC 62          	MOV	h,d	 ; вторая плоскость
0746   03FD C1          	POP		B	; прочитать два байта спрайта
0747   03FE 71          	MOV		M, C	; вывод байта на экран
0748   03FF 67          	MOV	h,a	; первая плоскость
0749   0400 70          	MOV		M, B	; вывод байта на экран
0750   0401             ; строки 17 и 18
0751   0401 2C          	INR	l	 ; строка вверх на экране
0752   0402 C1          	POP		B	; прочитать два байта спрайта
0753   0403 71          	MOV		M, C	; вывод байта на экран
0754   0404 62          	MOV	h,d	 ; вторая плоскость
0755   0405 70          	MOV		M, B	; вывод байта на экран
0756   0406 63          	MOV	h,e	 ; третья плоскость
0757   0407 C1          	POP		B	; прочитать два байта спрайта
0758   0408 71          	MOV		M, C	; вывод байта на экран
0759   0409 2C          	INR	l	 ; строка вверх на экране
0760   040A 70          	MOV		M, B	; вывод байта на экран
0761   040B 62          	MOV	h,d	 ; вторая плоскость
0762   040C C1          	POP		B	; прочитать два байта спрайта
0763   040D 71          	MOV		M, C	; вывод байта на экран
0764   040E 67          	MOV	h,a	; первая плоскость
0765   040F 70          	MOV		M, B	; вывод байта на экран
0766   0410             ; строки 19 и 20
0767   0410 2C          	INR	l	 ; строка вверх на экране
0768   0411 C1          	POP		B	; прочитать два байта спрайта
0769   0412 71          	MOV		M, C	; вывод байта на экран
0770   0413 62          	MOV	h,d	 ; вторая плоскость
0771   0414 70          	MOV		M, B	; вывод байта на экран
0772   0415 63          	MOV	h,e	 ; третья плоскость
0773   0416 C1          	POP		B	; прочитать два байта спрайта
0774   0417 71          	MOV		M, C	; вывод байта на экран
0775   0418 2C          	INR	l	 ; строка вверх на экране
0776   0419 70          	MOV		M, B	; вывод байта на экран
0777   041A 62          	MOV	h,d	 ; вторая плоскость
0778   041B C1          	POP		B	; прочитать два байта спрайта
0779   041C 71          	MOV		M, C	; вывод байта на экран
0780   041D 67          	MOV	h,a	; первая плоскость
0781   041E 70          	MOV		M, B	; вывод байта на экран
0782   041F             ; строки 21 и 22
0783   041F 2C          	INR	l	 ; строка вверх на экране
0784   0420 C1          	POP		B	; прочитать два байта спрайта
0785   0421 71          	MOV		M, C	; вывод байта на экран
0786   0422 62          	MOV	h,d	 ; вторая плоскость
0787   0423 70          	MOV		M, B	; вывод байта на экран
0788   0424 63          	MOV	h,e	 ; третья плоскость
0789   0425 C1          	POP		B	; прочитать два байта спрайта
0790   0426 71          	MOV		M, C	; вывод байта на экран
0791   0427 2C          	INR	l	 ; строка вверх на экране
0792   0428 70          	MOV		M, B	; вывод байта на экран
0793   0429 62          	MOV	h,d	 ; вторая плоскость
0794   042A C1          	POP		B	; прочитать два байта спрайта
0795   042B 71          	MOV		M, C	; вывод байта на экран
0796   042C 67          	MOV	h,a	; первая плоскость
0797   042D 70          	MOV		M, B	; вывод байта на экран
0798   042E             ; строки 23 и 24
0799   042E 2C          	INR	l	 ; строка вверх на экране
0800   042F C1          	POP		B	; прочитать два байта спрайта
0801   0430 71          	MOV		M, C	; вывод байта на экран
0802   0431 62          	MOV	h,d	 ; вторая плоскость
0803   0432 70          	MOV		M, B	; вывод байта на экран
0804   0433 63          	MOV	h,e	 ; третья плоскость
0805   0434 C1          	POP		B	; прочитать два байта спрайта
0806   0435 71          	MOV		M, C	; вывод байта на экран
0807   0436 2C          	INR	l	 ; строка вверх на экране
0808   0437 70          	MOV		M, B	; вывод байта на экран
0809   0438 62          	MOV	h,d	 ; вторая плоскость
0810   0439 C1          	POP		B	; прочитать два байта спрайта
0811   043A 71          	MOV		M, C	; вывод байта на экран
0812   043B 67          	MOV	h,a	; первая плоскость
0813   043C 70          	MOV		M, B	; вывод байта на экран
0814   043D             ;
0815   043D 14          	INR	d
0816   043E 1C          	INR	e
0817   043F 3C          	INR	a
0818   0440 67          	MOV	h,a
0819   0441 2E 00       spr2l:	MVI	l,0
0820   0443             ;
0821   0443 3E 03       spr2k:	MVI	a,3
0822   0445 3D          	DCR	a
0823   0446 32 44 04    	STA	spr2k+1
0824   0449 C2 89 03    	JNZ	spr2c6
0825   044C             ;
0826   044C C1          	POP		B	; пустое чтение
0827   044D             ;
0828   044D 31 00 00    spr2rd:	LXI	sp,0	; восстановление стека после вывода спрайта
0829   0450 C9          			RET	; вЫход из подпрограммы вывода спрайта на экран
0830   0451             
0831   0451             
0832   0451             ;==========================================================
0833   0451             ;Вывод квадратика 24x24 точки в сразу в три плоскости для статичных объектов
0834   0451             ;стар вход HL - куда на экран выводить DE - адрес графики
0835   0451             ;нов вход de - куда на экран выводить bc - адрес графики
0836   0451             DrawSprite_metamorpho1:
0837   0451 62          	MOV H,D
0838   0452 6B          	MOV l,e
0839   0453 50          	MOV d,b
0840   0454 59          	MOV e,c
0841   0455             
0842   0455 7C          	MOV A,h ; сохраняем начало столбик X плоскость (1) куда выводим графику
0843   0456 32 F9 05    	STA pozic_xP1
0844   0459 7D          	MOV A,l
0845   045A 32 F8 05    	STA pozic_y; сохраняем начало строки Y куда выводим графику
0846   045D 3E 03       	MVI a,3
0847   045F 32 F7 05    	STA PLAST
0848   0462             
0849   0462 01 00 20    	LXI B,2000h
0850   0465             ;====================== строка 1
0851   0465             fumbingo:
0852   0465 1A          	LDAX D ; загружаем акумулятор А содержимым графики
0853   0466 77          	MOV M,A ; выводим в экран по адресу "HL" байт графики
0854   0467 13          	INX D ; DE=DE+1 увеличиваем адрес откуда брать графику
0855   0468 09          	DAD B ; адрес плоскости 2
0856   0469 1A          	LDAX D
0857   046A 77          	MOV M,A
0858   046B 13          	INX D
0859   046C 09          	DAD B ; адрес плоскости 3
0860   046D 1A          	LDAX D
0861   046E 77          	MOV M,A
0862   046F 13          	INX D
0863   0470             
0864   0470 2D          	DCR L ; ==================== строка 2
0865   0471 3A F9 05    	LDA pozic_xP1
0866   0474 67          	MOV H,A ; адрес плоскости 1
0867   0475 1A          	LDAX D
0868   0476 77          	MOV M,A
0869   0477 13          	INX D
0870   0478 09          	DAD B ; адрес плоскости 2
0871   0479 1A          	LDAX D
0872   047A 77          	MOV M,A
0873   047B 13          	INX D
0874   047C 09          	DAD B ; адрес плоскости 3
0875   047D 1A          	LDAX D
0876   047E 77          	MOV M,A
0877   047F 13          	INX D
0878   0480             
0879   0480 2D          	DCR L ; ==================== строка 3
0880   0481 3A F9 05    	LDA pozic_xP1
0881   0484 67          	MOV H,A ; адрес плоскости 1
0882   0485 1A          	LDAX D
0883   0486 77          	MOV M,A
0884   0487 13          	INX D
0885   0488 09          	DAD B ; адрес плоскости 2
0886   0489 1A          	LDAX D
0887   048A 77          	MOV M,A
0888   048B 13          	INX D
0889   048C 09          	DAD B ; адрес плоскости 3
0890   048D 1A          	LDAX D
0891   048E 77          	MOV M,A 	
0892   048F 13          	INX D
0893   0490             
0894   0490 2D          	DCR L ; ==================== строка 4
0895   0491 3A F9 05    	LDA pozic_xP1
0896   0494 67          	MOV H,A ; адрес плоскости 1
0897   0495 1A          	LDAX D
0898   0496 77          	MOV M,A
0899   0497 13          	INX D
0900   0498 09          	DAD B ; адрес плоскости 2
0901   0499 1A          	LDAX D
0902   049A 77          	MOV M,A
0903   049B 13          	INX D
0904   049C 09          	DAD B ; адрес плоскости 3
0905   049D 1A          	LDAX D
0906   049E 77          	MOV M,A
0907   049F 13          	INX D
0908   04A0             
0909   04A0 2D          	DCR L ; ==================== строка 5
0910   04A1 3A F9 05    	LDA pozic_xP1
0911   04A4 67          	MOV H,A ; адрес плоскости 1
0912   04A5 1A          	LDAX D
0913   04A6 77          	MOV M,A
0914   04A7 13          	INX D
0915   04A8 09          	DAD B ; адрес плоскости 2
0916   04A9 1A          	LDAX D
0917   04AA 77          	MOV M,A
0918   04AB 13          	INX D
0919   04AC 09          	DAD B ; адрес плоскости 3
0920   04AD 1A          	LDAX D
0921   04AE 77          	MOV M,A
0922   04AF 13          	INX D
0923   04B0             
0924   04B0 2D          	DCR L ; ==================== строка 6
0925   04B1 3A F9 05    	LDA pozic_xP1
0926   04B4 67          	MOV H,A ; адрес плоскости 1
0927   04B5 1A          	LDAX D
0928   04B6 77          	MOV M,A
0929   04B7 13          	INX D
0930   04B8 09          	DAD B ; адрес плоскости 2
0931   04B9 1A          	LDAX D
0932   04BA 77          	MOV M,A
0933   04BB 13          	INX D
0934   04BC 09          	DAD B ; адрес плоскости 3
0935   04BD 1A          	LDAX D
0936   04BE 77          	MOV M,A
0937   04BF 13          	INX D
0938   04C0             
0939   04C0 2D          	DCR L ; ==================== строка 7
0940   04C1 3A F9 05    	LDA pozic_xP1
0941   04C4 67          	MOV H,A ; адрес плоскости 1
0942   04C5 1A          	LDAX D
0943   04C6 77          	MOV M,A
0944   04C7 13          	INX D
0945   04C8 09          	DAD B ; адрес плоскости 2
0946   04C9 1A          	LDAX D
0947   04CA 77          	MOV M,A
0948   04CB 13          	INX D
0949   04CC 09          	DAD B ; адрес плоскости 3
0950   04CD 1A          	LDAX D
0951   04CE 77          	MOV M,A
0952   04CF 13          	INX D
0953   04D0             
0954   04D0 2D          	DCR L ; ==================== строка 8
0955   04D1 3A F9 05    	LDA pozic_xP1
0956   04D4 67          	MOV H,A ; адрес плоскости 1
0957   04D5 1A          	LDAX D
0958   04D6 77          	MOV M,A
0959   04D7 13          	INX D
0960   04D8 09          	DAD B ; адрес плоскости 2
0961   04D9 1A          	LDAX D
0962   04DA 77          	MOV M,A
0963   04DB 13          	INX D
0964   04DC 09          	DAD B ; адрес плоскости 3
0965   04DD 1A          	LDAX D
0966   04DE 77          	MOV M,A
0967   04DF 13          	INX D
0968   04E0             
0969   04E0 2D          	DCR L ; ==================== строка 9
0970   04E1 3A F9 05    	LDA pozic_xP1
0971   04E4 67          	MOV H,A ; адрес плоскости 1
0972   04E5 1A          	LDAX D
0973   04E6 77          	MOV M,A
0974   04E7 13          	INX D
0975   04E8 09          	DAD B ; адрес плоскости 2
0976   04E9 1A          	LDAX D
0977   04EA 77          	MOV M,A
0978   04EB 13          	INX D
0979   04EC 09          	DAD B ; адрес плоскости 3
0980   04ED 1A          	LDAX D
0981   04EE 77          	MOV M,A
0982   04EF 13          	INX D
0983   04F0             
0984   04F0 2D          	DCR L ; ==================== строка 10
0985   04F1 3A F9 05    	LDA pozic_xP1
0986   04F4 67          	MOV H,A ; адрес плоскости 1
0987   04F5 1A          	LDAX D
0988   04F6 77          	MOV M,A
0989   04F7 13          	INX D
0990   04F8 09          	DAD B ; адрес плоскости 2
0991   04F9 1A          	LDAX D
0992   04FA 77          	MOV M,A
0993   04FB 13          	INX D
0994   04FC 09          	DAD B ; адрес плоскости 3
0995   04FD 1A          	LDAX D
0996   04FE 77          	MOV M,A
0997   04FF 13          	INX D
0998   0500             
0999   0500 2D          	DCR L ; ==================== строка 11
1000   0501 3A F9 05    	LDA pozic_xP1
1001   0504 67          	MOV H,A ; адрес плоскости 1
1002   0505 1A          	LDAX D
1003   0506 77          	MOV M,A
1004   0507 13          	INX D
1005   0508 09          	DAD B ; адрес плоскости 2
1006   0509 1A          	LDAX D
1007   050A 77          	MOV M,A
1008   050B 13          	INX D
1009   050C 09          	DAD B ; адрес плоскости 3
1010   050D 1A          	LDAX D
1011   050E 77          	MOV M,A
1012   050F 13          	INX D
1013   0510             
1014   0510 2D          	DCR L ; ==================== строка 12
1015   0511 3A F9 05    	LDA pozic_xP1
1016   0514 67          	MOV H,A ; адрес плоскости 1
1017   0515 1A          	LDAX D
1018   0516 77          	MOV M,A
1019   0517 13          	INX D
1020   0518 09          	DAD B ; адрес плоскости 2
1021   0519 1A          	LDAX D  	
1022   051A 77          	MOV M,A
1023   051B 13          	INX D
1024   051C 09          	DAD B ; адрес плоскости 3
1025   051D 1A          	LDAX D
1026   051E 77          	MOV M,A
1027   051F 13          	INX D
1028   0520             
1029   0520 2D          	DCR L ; ==================== строка 13
1030   0521 3A F9 05    	LDA pozic_xP1
1031   0524 67          	MOV H,A ; адрес плоскости 1
1032   0525 1A          	LDAX D
1033   0526 77          	MOV M,A
1034   0527 13          	INX D
1035   0528 09          	DAD B ; адрес плоскости 2
1036   0529 1A          	LDAX D
1037   052A 77          	MOV M,A
1038   052B 13          	INX D
1039   052C 09          	DAD B ; адрес плоскости 3
1040   052D 1A          	LDAX D
1041   052E 77          	MOV M,A
1042   052F 13          	INX D
1043   0530             
1044   0530 2D          	DCR L ; ==================== строка 14
1045   0531 3A F9 05    	LDA pozic_xP1
1046   0534 67          	MOV H,A ; адрес плоскости 1
1047   0535 1A          	LDAX D
1048   0536 77          	MOV M,A
1049   0537 13          	INX D
1050   0538 09          	DAD B ; адрес плоскости 2
1051   0539 1A          	LDAX D
1052   053A 77          	MOV M,A
1053   053B 13          	INX D
1054   053C 09          	DAD B ; адрес плоскости 3
1055   053D 1A          	LDAX D
1056   053E 77          	MOV M,A
1057   053F 13          	INX D
1058   0540             
1059   0540 2D          	DCR L ; ==================== строка 15
1060   0541 3A F9 05    	LDA pozic_xP1
1061   0544 67          	MOV H,A ; адрес плоскости 1
1062   0545 1A          	LDAX D
1063   0546 77          	MOV M,A
1064   0547 13          	INX D
1065   0548 09          	DAD B ; адрес плоскости 2
1066   0549 1A          	LDAX D
1067   054A 77          	MOV M,A
1068   054B 13          	INX D
1069   054C 09          	DAD B ; адрес плоскости 3
1070   054D 1A          	LDAX D
1071   054E 77          	MOV M,A
1072   054F 13          	INX D
1073   0550             
1074   0550 2D          	DCR L ; ==================== строка 16
1075   0551 3A F9 05    	LDA pozic_xP1
1076   0554 67          	MOV H,A ; адрес плоскости 1
1077   0555 1A          	LDAX D
1078   0556 77          	MOV M,A
1079   0557 13          	INX D
1080   0558 09          	DAD B ; адрес плоскости 2
1081   0559 1A          	LDAX D
1082   055A 77          	MOV M,A
1083   055B 13          	INX D
1084   055C 09          	DAD B ; адрес плоскости 3
1085   055D 1A          	LDAX D
1086   055E 77          	MOV M,A
1087   055F 13          	INX D
1088   0560             
1089   0560 2D          	DCR L ; ==================== строка 17
1090   0561 3A F9 05    	LDA pozic_xP1
1091   0564 67          	MOV H,A ; адрес плоскости 1
1092   0565 1A          	LDAX D
1093   0566 77          	MOV M,A
1094   0567 13          	INX D
1095   0568 09          	DAD B ; адрес плоскости 2
1096   0569 1A          	LDAX D
1097   056A 77          	MOV M,A
1098   056B 13          	INX D
1099   056C 09          	DAD B ; адрес плоскости 3
1100   056D 1A          	LDAX D
1101   056E 77          	MOV M,A
1102   056F 13          	INX D
1103   0570             
1104   0570 2D          	DCR L ; ==================== строка 18
1105   0571 3A F9 05    	LDA pozic_xP1
1106   0574 67          	MOV H,A ; адрес плоскости 1
1107   0575 1A          	LDAX D
1108   0576 77          	MOV M,A
1109   0577 13          	INX D
1110   0578 09          	DAD B ; адрес плоскости 2
1111   0579 1A          	LDAX D
1112   057A 77          	MOV M,A
1113   057B 13          	INX D
1114   057C 09          	DAD B ; адрес плоскости 3
1115   057D 1A          	LDAX D
1116   057E 77          	MOV M,A
1117   057F 13          	INX D
1118   0580             
1119   0580 2D          	DCR L ; ==================== строка 19
1120   0581 3A F9 05    	LDA pozic_xP1
1121   0584 67          	MOV H,A ; адрес плоскости 1
1122   0585 1A          	LDAX D
1123   0586 77          	MOV M,A
1124   0587 13          	INX D
1125   0588 09          	DAD B ; адрес плоскости 2
1126   0589 1A          	LDAX D
1127   058A 77          	MOV M,A
1128   058B 13          	INX D
1129   058C 09          	DAD B ; адрес плоскости 3
1130   058D 1A          	LDAX D
1131   058E 77          	MOV M,A
1132   058F 13          	INX D
1133   0590             
1134   0590 2D          	DCR L ; ==================== строка 20
1135   0591 3A F9 05    	LDA pozic_xP1
1136   0594 67          	MOV H,A ; адрес плоскости 1
1137   0595 1A          	LDAX D
1138   0596 77          	MOV M,A
1139   0597 13          	INX D
1140   0598 09          	DAD B ; адрес плоскости 2
1141   0599 1A          	LDAX D
1142   059A 77          	MOV M,A
1143   059B 13          	INX D
1144   059C 09          	DAD B ; адрес плоскости 3
1145   059D 1A          	LDAX D
1146   059E 77          	MOV M,A
1147   059F 13          	INX D
1148   05A0             
1149   05A0 2D          	DCR L ; ==================== строка 21
1150   05A1 3A F9 05    	LDA pozic_xP1
1151   05A4 67          	MOV H,A ; адрес плоскости 1
1152   05A5 1A          	LDAX D
1153   05A6 77          	MOV M,A
1154   05A7 13          	INX D
1155   05A8 09          	DAD B ; адрес плоскости 2
1156   05A9 1A          	LDAX D
1157   05AA 77          	MOV M,A
1158   05AB 13          	INX D
1159   05AC 09          	DAD B ; адрес плоскости 3
1160   05AD 1A          	LDAX D
1161   05AE 77          	MOV M,A
1162   05AF 13          	INX D
1163   05B0             
1164   05B0 2D          	DCR L ; ==================== строка 22
1165   05B1 3A F9 05    	LDA pozic_xP1
1166   05B4 67          	MOV H,A ; адрес плоскости 1
1167   05B5 1A          	LDAX D
1168   05B6 77          	MOV M,A
1169   05B7 13          	INX D
1170   05B8 09          	DAD B ; адрес плоскости 2
1171   05B9 1A          	LDAX D
1172   05BA 77          	MOV M,A
1173   05BB 13          	INX D
1174   05BC 09          	DAD B ; адрес плоскости 3
1175   05BD 1A          	LDAX D
1176   05BE 77          	MOV M,A
1177   05BF 13          	INX D
1178   05C0             
1179   05C0 2D          	DCR L ; ==================== строка 23
1180   05C1 3A F9 05    	LDA pozic_xP1
1181   05C4 67          	MOV H,A ; адрес плоскости 1
1182   05C5 1A          	LDAX D
1183   05C6 77          	MOV M,A
1184   05C7 13          	INX D
1185   05C8 09          	DAD B ; адрес плоскости 2
1186   05C9 1A          	LDAX D
1187   05CA 77          	MOV M,A
1188   05CB 13          	INX D
1189   05CC 09          	DAD B ; адрес плоскости 3
1190   05CD 1A          	LDAX D
1191   05CE 77          	MOV M,A
1192   05CF 13          	INX D
1193   05D0             
1194   05D0 2D          	DCR L ; ==================== строка 24
1195   05D1 3A F9 05    	LDA pozic_xP1
1196   05D4 67          	MOV H,A ; адрес плоскости 1
1197   05D5 1A          	LDAX D
1198   05D6 77          	MOV M,A
1199   05D7 13          	INX D
1200   05D8 09          	DAD B ; адрес плоскости 2
1201   05D9 1A          	LDAX D
1202   05DA 77          	MOV M,A
1203   05DB 13          	INX D
1204   05DC 09          	DAD B ; адрес плоскости 3
1205   05DD 1A          	LDAX D
1206   05DE 77          	MOV M,A
1207   05DF 13          	INX D
1208   05E0             
1209   05E0 3A F7 05    	LDA PLAST ; счётчик столбиков (всего 3)
1210   05E3 3D          	DCR a
1211   05E4 CA F6 05    	jz rimikoq ; если все три столбика нарисованы выходим из подпрограммы
1212   05E7             	
1213   05E7 32 F7 05    	STA PLAST
1214   05EA             	; следующий столбец X
1215   05EA 21 F9 05    	LXI H,pozic_xP1
1216   05ED 34          	INR M
1217   05EE 66          	MOV H,M
1218   05EF 3A F8 05    	LDA pozic_y
1219   05F2 6F          	MOV L,A ; восстанавливаем Y
1220   05F3 C3 65 04    	JMP fumbingo
1221   05F6             	
1222   05F6             rimikoq:
1223   05F6             ;=============
1224   05F6             ;
1225   05F6 C9          	RET ;иначе - выйти из п/п вывода квадратиков
1226   05F7             ;
1227   05F7 00          PLAST:	.DB	0
1228   05F8             pozic_y:
1229   05F8 00          	.DB	0
1230   05F9             pozic_xP1
1231   05F9 00          	.DB	0
1232   05FA             
1233   05FA             
1234   05FA             ;----------------------------------------------------------------
1235   05FA             ; draw a sprite (24x24 pixels)
1236   05FA             ; author: jerri
1237   05FA             ; method:
1238   05FA             ; in:
1239   05FA             ; BC	sprite data
1240   05FA             ; DE	screen address (x,y)
1241   05FA             
1242   05FA             DrawSprite_Jerri_unrolled:
1243   05FA 21 00 00    			LXI		H, 0
1244   05FD 39          			DAD		SP
1245   05FE 22 44 08    			SHLD	sprite_sp0_2 + 1
1246   0601 60          			MOV		H, B
1247   0602 69          			MOV		L, C
1248   0603 4E          			MOV		C, M
1249   0604 23          			INX		H
1250   0605 46          			MOV		B, M
1251   0606 23          			INX		H
1252   0607 F9          			SPHL
1253   0608             	
1254   0608             			;задаем Y в L
1255   0608 6B          			MOV		L, E	;			(8)
1256   0609             			;задаем X в A
1257   0609 7A          			MOV		A, D	;битплан1	(8)
1258   060A C6 20       			ADI		$20		;			(8)
1259   060C 5F          			MOV		E, A	;битплан2	(8)
1260   060D C6 20       			ADI		$20		;битплан3	(8)
1261   060F             							;			(40) total
1262   060F             
1263   060F             
1264   060F 62          	MOV	h,d
1265   0610             ;рисуем на первом плане
1266   0610 71          	MOV		M, C
1267   0611 24          	INR		H
1268   0612 70          	MOV		M, B
1269   0613 24          	INR		H
1270   0614 C1          	POP		B
1271   0615 71          	MOV		M, C
1272   0616             ;переход на второй битплан
1273   0616 63          	MOV	h,e
1274   0617             ;рисуем на втором плане
1275   0617 70          	MOV		M, B
1276   0618 24          	INR		H
1277   0619 C1          	POP		B
1278   061A 71          	MOV		M, C
1279   061B 24          	INR		H
1280   061C 70          	MOV		M, B
1281   061D C1          	POP		B
1282   061E             ;переход на третий битплан
1283   061E 67          	MOV	h,a
1284   061F             ;рисуем на третьем плане
1285   061F 71          	MOV		M, C
1286   0620 24          	INR		H
1287   0621 70          	MOV		M, B
1288   0622 24          	INR		H
1289   0623 C1          	POP		B
1290   0624 71          	MOV		M, C
1291   0625             ;переходим на следующую строку
1292   0625 2C          	INR	l	
1293   0626             ;возвращаемся на первый план	
1294   0626 62          	MOV	h,d
1295   0627             ;повторяем цикл рисования
1296   0627 70          	MOV		M, B
1297   0628 24          	INR		H
1298   0629 C1          	POP		B
1299   062A 71          	MOV		M, C
1300   062B 24          	INR		H
1301   062C 70          	MOV		M, B
1302   062D C1          	POP		B
1303   062E             ;переход на второй битплан
1304   062E 63          	MOV	h,e
1305   062F             ;рисуем на втором плане
1306   062F 71          	MOV		M, C
1307   0630 24          	INR		H
1308   0631 70          	MOV		M, B
1309   0632 24          	INR		H
1310   0633 C1          	POP		B
1311   0634 71          	MOV		M, C
1312   0635             ;переход на третий битплан
1313   0635 67          	MOV	h,a
1314   0636             ;рисуем на третьем плане
1315   0636 70          	MOV		M, B
1316   0637 24          	INR		H
1317   0638 C1          	POP		B
1318   0639 71          	MOV		M, C
1319   063A 24          	INR		H
1320   063B 70          	MOV		M, B
1321   063C             ;выбираем следующую пару байтов для цикла рисования
1322   063C 2C          	INR	l	
1323   063D C1          	POP		B
1324   063E             ;	
1325   063E 62          	MOV	h,d
1326   063F             ;рисуем на первом плане
1327   063F 71          	MOV		M, C
1328   0640 24          	INR		H
1329   0641 70          	MOV		M, B
1330   0642 24          	INR		H
1331   0643 C1          	POP		B
1332   0644 71          	MOV		M, C
1333   0645             ;переход на второй битплан
1334   0645 63          	MOV	h,e
1335   0646             ;рисуем на втором плане
1336   0646 70          	MOV		M, B
1337   0647 24          	INR		H
1338   0648 C1          	POP		B
1339   0649 71          	MOV		M, C
1340   064A 24          	INR		H
1341   064B 70          	MOV		M, B
1342   064C C1          	POP		B
1343   064D             ;переход на третий битплан
1344   064D 67          	MOV	h,a
1345   064E             ;рисуем на третьем плане
1346   064E 71          	MOV		M, C
1347   064F 24          	INR		H
1348   0650 70          	MOV		M, B
1349   0651 24          	INR		H
1350   0652 C1          	POP		B
1351   0653 71          	MOV		M, C
1352   0654             ;переходим на следующую строку
1353   0654 2C          	INR	l	
1354   0655             ;возвращаемся на первый план	
1355   0655 62          	MOV	h,d
1356   0656             ;повторяем цикл рисования
1357   0656 70          	MOV		M, B
1358   0657 24          	INR		H
1359   0658 C1          	POP		B
1360   0659 71          	MOV		M, C
1361   065A 24          	INR		H
1362   065B 70          	MOV		M, B
1363   065C C1          	POP		B
1364   065D             ;переход на второй битплан
1365   065D 63          	MOV	h,e
1366   065E             ;рисуем на втором плане
1367   065E 71          	MOV		M, C
1368   065F 24          	INR		H
1369   0660 70          	MOV		M, B
1370   0661 24          	INR		H
1371   0662 C1          	POP		B
1372   0663 71          	MOV		M, C
1373   0664             ;переход на третий битплан
1374   0664 67          	MOV	h,a
1375   0665             ;рисуем на третьем плане
1376   0665 70          	MOV		M, B
1377   0666 24          	INR		H
1378   0667 C1          	POP		B
1379   0668 71          	MOV		M, C
1380   0669 24          	INR		H
1381   066A 70          	MOV		M, B
1382   066B             ;выбираем следующую пару байтов для цикла рисования
1383   066B 2C          	INR	l	
1384   066C C1          	POP		B
1385   066D             ;	
1386   066D 62          	MOV	h,d
1387   066E             ;рисуем на первом плане
1388   066E 71          	MOV		M, C
1389   066F 24          	INR		H
1390   0670 70          	MOV		M, B
1391   0671 24          	INR		H
1392   0672 C1          	POP		B
1393   0673 71          	MOV		M, C
1394   0674             ;переход на второй битплан
1395   0674 63          	MOV	h,e
1396   0675             ;рисуем на втором плане
1397   0675 70          	MOV		M, B
1398   0676 24          	INR		H
1399   0677 C1          	POP		B
1400   0678 71          	MOV		M, C
1401   0679 24          	INR		H
1402   067A 70          	MOV		M, B
1403   067B C1          	POP		B
1404   067C             ;переход на третий битплан
1405   067C 67          	MOV	h,a
1406   067D             ;рисуем на третьем плане
1407   067D 71          	MOV		M, C
1408   067E 24          	INR		H
1409   067F 70          	MOV		M, B
1410   0680 24          	INR		H
1411   0681 C1          	POP		B
1412   0682 71          	MOV		M, C
1413   0683             ;переходим на следующую строку
1414   0683 2C          	INR	l	
1415   0684             ;возвращаемся на первый план	
1416   0684 62          	MOV	h,d
1417   0685             ;повторяем цикл рисования
1418   0685 70          	MOV		M, B
1419   0686 24          	INR		H
1420   0687 C1          	POP		B
1421   0688 71          	MOV		M, C
1422   0689 24          	INR		H
1423   068A 70          	MOV		M, B
1424   068B C1          	POP		B
1425   068C             ;переход на второй битплан
1426   068C 63          	MOV	h,e
1427   068D             ;рисуем на втором плане
1428   068D 71          	MOV		M, C
1429   068E 24          	INR		H
1430   068F 70          	MOV		M, B
1431   0690 24          	INR		H
1432   0691 C1          	POP		B
1433   0692 71          	MOV		M, C
1434   0693             ;переход на третий битплан
1435   0693 67          	MOV	h,a
1436   0694             ;рисуем на третьем плане
1437   0694 70          	MOV		M, B
1438   0695 24          	INR		H
1439   0696 C1          	POP		B
1440   0697 71          	MOV		M, C
1441   0698 24          	INR		H
1442   0699 70          	MOV		M, B
1443   069A             ;выбираем следующую пару байтов для цикла рисования
1444   069A 2C          	INR	l	
1445   069B C1          	POP		B
1446   069C             ;	
1447   069C 62          	MOV	h,d
1448   069D             ;рисуем на первом плане
1449   069D 71          	MOV		M, C
1450   069E 24          	INR		H
1451   069F 70          	MOV		M, B
1452   06A0 24          	INR		H
1453   06A1 C1          	POP		B
1454   06A2 71          	MOV		M, C
1455   06A3             ;переход на второй битплан
1456   06A3 63          	MOV	h,e
1457   06A4             ;рисуем на втором плане
1458   06A4 70          	MOV		M, B
1459   06A5 24          	INR		H
1460   06A6 C1          	POP		B
1461   06A7 71          	MOV		M, C
1462   06A8 24          	INR		H
1463   06A9 70          	MOV		M, B
1464   06AA C1          	POP		B
1465   06AB             ;переход на третий битплан
1466   06AB 67          	MOV	h,a
1467   06AC             ;рисуем на третьем плане
1468   06AC 71          	MOV		M, C
1469   06AD 24          	INR		H
1470   06AE 70          	MOV		M, B
1471   06AF 24          	INR		H
1472   06B0 C1          	POP		B
1473   06B1 71          	MOV		M, C
1474   06B2             ;переходим на следующую строку
1475   06B2 2C          	INR	l	
1476   06B3             ;возвращаемся на первый план	
1477   06B3 62          	MOV	h,d
1478   06B4             ;повторяем цикл рисования
1479   06B4 70          	MOV		M, B
1480   06B5 24          	INR		H
1481   06B6 C1          	POP		B
1482   06B7 71          	MOV		M, C
1483   06B8 24          	INR		H
1484   06B9 70          	MOV		M, B
1485   06BA C1          	POP		B
1486   06BB             ;переход на второй битплан
1487   06BB 63          	MOV	h,e
1488   06BC             ;рисуем на втором плане
1489   06BC 71          	MOV		M, C
1490   06BD 24          	INR		H
1491   06BE 70          	MOV		M, B
1492   06BF 24          	INR		H
1493   06C0 C1          	POP		B
1494   06C1 71          	MOV		M, C
1495   06C2             ;переход на третий битплан
1496   06C2 67          	MOV	h,a
1497   06C3             ;рисуем на третьем плане
1498   06C3 70          	MOV		M, B
1499   06C4 24          	INR		H
1500   06C5 C1          	POP		B
1501   06C6 71          	MOV		M, C
1502   06C7 24          	INR		H
1503   06C8 70          	MOV		M, B
1504   06C9             ;выбираем следующую пару байтов для цикла рисования
1505   06C9 2C          	INR	l	
1506   06CA C1          	POP		B
1507   06CB             ;	
1508   06CB 62          	MOV	h,d
1509   06CC             ;рисуем на первом плане
1510   06CC 71          	MOV		M, C
1511   06CD 24          	INR		H
1512   06CE 70          	MOV		M, B
1513   06CF 24          	INR		H
1514   06D0 C1          	POP		B
1515   06D1 71          	MOV		M, C
1516   06D2             ;переход на второй битплан
1517   06D2 63          	MOV	h,e
1518   06D3             ;рисуем на втором плане
1519   06D3 70          	MOV		M, B
1520   06D4 24          	INR		H
1521   06D5 C1          	POP		B
1522   06D6 71          	MOV		M, C
1523   06D7 24          	INR		H
1524   06D8 70          	MOV		M, B
1525   06D9 C1          	POP		B
1526   06DA             ;переход на третий битплан
1527   06DA 67          	MOV	h,a
1528   06DB             ;рисуем на третьем плане
1529   06DB 71          	MOV		M, C
1530   06DC 24          	INR		H
1531   06DD 70          	MOV		M, B
1532   06DE 24          	INR		H
1533   06DF C1          	POP		B
1534   06E0 71          	MOV		M, C
1535   06E1             ;переходим на следующую строку
1536   06E1 2C          	INR	l	
1537   06E2             ;возвращаемся на первый план	
1538   06E2 62          	MOV	h,d
1539   06E3             ;повторяем цикл рисования
1540   06E3 70          	MOV		M, B
1541   06E4 24          	INR		H
1542   06E5 C1          	POP		B
1543   06E6 71          	MOV		M, C
1544   06E7 24          	INR		H
1545   06E8 70          	MOV		M, B
1546   06E9 C1          	POP		B
1547   06EA             ;переход на второй битплан
1548   06EA 63          	MOV	h,e
1549   06EB             ;рисуем на втором плане
1550   06EB 71          	MOV		M, C
1551   06EC 24          	INR		H
1552   06ED 70          	MOV		M, B
1553   06EE 24          	INR		H
1554   06EF C1          	POP		B
1555   06F0 71          	MOV		M, C
1556   06F1             ;переход на третий битплан
1557   06F1 67          	MOV	h,a
1558   06F2             ;рисуем на третьем плане
1559   06F2 70          	MOV		M, B
1560   06F3 24          	INR		H
1561   06F4 C1          	POP		B
1562   06F5 71          	MOV		M, C
1563   06F6 24          	INR		H
1564   06F7 70          	MOV		M, B
1565   06F8             ;выбираем следующую пару байтов для цикла рисования
1566   06F8 2C          	INR	l	
1567   06F9 C1          	POP		B
1568   06FA             ;	
1569   06FA 62          	MOV	h,d
1570   06FB             ;рисуем на первом плане
1571   06FB 71          	MOV		M, C
1572   06FC 24          	INR		H
1573   06FD 70          	MOV		M, B
1574   06FE 24          	INR		H
1575   06FF C1          	POP		B
1576   0700 71          	MOV		M, C
1577   0701             ;переход на второй битплан
1578   0701 63          	MOV	h,e
1579   0702             ;рисуем на втором плане
1580   0702 70          	MOV		M, B
1581   0703 24          	INR		H
1582   0704 C1          	POP		B
1583   0705 71          	MOV		M, C
1584   0706 24          	INR		H
1585   0707 70          	MOV		M, B
1586   0708 C1          	POP		B
1587   0709             ;переход на третий битплан
1588   0709 67          	MOV	h,a
1589   070A             ;рисуем на третьем плане
1590   070A 71          	MOV		M, C
1591   070B 24          	INR		H
1592   070C 70          	MOV		M, B
1593   070D 24          	INR		H
1594   070E C1          	POP		B
1595   070F 71          	MOV		M, C
1596   0710             ;переходим на следующую строку
1597   0710 2C          	INR	l	
1598   0711             ;возвращаемся на первый план	
1599   0711 62          	MOV	h,d
1600   0712             ;повторяем цикл рисования
1601   0712 70          	MOV		M, B
1602   0713 24          	INR		H
1603   0714 C1          	POP		B
1604   0715 71          	MOV		M, C
1605   0716 24          	INR		H
1606   0717 70          	MOV		M, B
1607   0718 C1          	POP		B
1608   0719             ;переход на второй битплан
1609   0719 63          	MOV	h,e
1610   071A             ;рисуем на втором плане
1611   071A 71          	MOV		M, C
1612   071B 24          	INR		H
1613   071C 70          	MOV		M, B
1614   071D 24          	INR		H
1615   071E C1          	POP		B
1616   071F 71          	MOV		M, C
1617   0720             ;переход на третий битплан
1618   0720 67          	MOV	h,a
1619   0721             ;рисуем на третьем плане
1620   0721 70          	MOV		M, B
1621   0722 24          	INR		H
1622   0723 C1          	POP		B
1623   0724 71          	MOV		M, C
1624   0725 24          	INR		H
1625   0726 70          	MOV		M, B
1626   0727             ;выбираем следующую пару байтов для цикла рисования
1627   0727 2C          	INR	l	
1628   0728 C1          	POP		B
1629   0729             ;	
1630   0729 62          	MOV	h,d
1631   072A             ;рисуем на первом плане
1632   072A 71          	MOV		M, C
1633   072B 24          	INR		H
1634   072C 70          	MOV		M, B
1635   072D 24          	INR		H
1636   072E C1          	POP		B
1637   072F 71          	MOV		M, C
1638   0730             ;переход на второй битплан
1639   0730 63          	MOV	h,e
1640   0731             ;рисуем на втором плане
1641   0731 70          	MOV		M, B
1642   0732 24          	INR		H
1643   0733 C1          	POP		B
1644   0734 71          	MOV		M, C
1645   0735 24          	INR		H
1646   0736 70          	MOV		M, B
1647   0737 C1          	POP		B
1648   0738             ;переход на третий битплан
1649   0738 67          	MOV	h,a
1650   0739             ;рисуем на третьем плане
1651   0739 71          	MOV		M, C
1652   073A 24          	INR		H
1653   073B 70          	MOV		M, B
1654   073C 24          	INR		H
1655   073D C1          	POP		B
1656   073E 71          	MOV		M, C
1657   073F             ;переходим на следующую строку
1658   073F 2C          	INR	l	
1659   0740             ;возвращаемся на первый план	
1660   0740 62          	MOV	h,d
1661   0741             ;повторяем цикл рисования
1662   0741 70          	MOV		M, B
1663   0742 24          	INR		H
1664   0743 C1          	POP		B
1665   0744 71          	MOV		M, C
1666   0745 24          	INR		H
1667   0746 70          	MOV		M, B
1668   0747 C1          	POP		B
1669   0748             ;переход на второй битплан
1670   0748 63          	MOV	h,e
1671   0749             ;рисуем на втором плане
1672   0749 71          	MOV		M, C
1673   074A 24          	INR		H
1674   074B 70          	MOV		M, B
1675   074C 24          	INR		H
1676   074D C1          	POP		B
1677   074E 71          	MOV		M, C
1678   074F             ;переход на третий битплан
1679   074F 67          	MOV	h,a
1680   0750             ;рисуем на третьем плане
1681   0750 70          	MOV		M, B
1682   0751 24          	INR		H
1683   0752 C1          	POP		B
1684   0753 71          	MOV		M, C
1685   0754 24          	INR		H
1686   0755 70          	MOV		M, B
1687   0756             ;выбираем следующую пару байтов для цикла рисования
1688   0756 2C          	INR	l	
1689   0757 C1          	POP		B
1690   0758             ;	
1691   0758 62          	MOV	h,d
1692   0759             ;рисуем на первом плане
1693   0759 71          	MOV		M, C
1694   075A 24          	INR		H
1695   075B 70          	MOV		M, B
1696   075C 24          	INR		H
1697   075D C1          	POP		B
1698   075E 71          	MOV		M, C
1699   075F             ;переход на второй битплан
1700   075F 63          	MOV	h,e
1701   0760             ;рисуем на втором плане
1702   0760 70          	MOV		M, B
1703   0761 24          	INR		H
1704   0762 C1          	POP		B
1705   0763 71          	MOV		M, C
1706   0764 24          	INR		H
1707   0765 70          	MOV		M, B
1708   0766 C1          	POP		B
1709   0767             ;переход на третий битплан
1710   0767 67          	MOV	h,a
1711   0768             ;рисуем на третьем плане
1712   0768 71          	MOV		M, C
1713   0769 24          	INR		H
1714   076A 70          	MOV		M, B
1715   076B 24          	INR		H
1716   076C C1          	POP		B
1717   076D 71          	MOV		M, C
1718   076E             ;переходим на следующую строку
1719   076E 2C          	INR	l	
1720   076F             ;возвращаемся на первый план	
1721   076F 62          	MOV	h,d
1722   0770             ;повторяем цикл рисования
1723   0770 70          	MOV		M, B
1724   0771 24          	INR		H
1725   0772 C1          	POP		B
1726   0773 71          	MOV		M, C
1727   0774 24          	INR		H
1728   0775 70          	MOV		M, B
1729   0776 C1          	POP		B
1730   0777             ;переход на второй битплан
1731   0777 63          	MOV	h,e
1732   0778             ;рисуем на втором плане
1733   0778 71          	MOV		M, C
1734   0779 24          	INR		H
1735   077A 70          	MOV		M, B
1736   077B 24          	INR		H
1737   077C C1          	POP		B
1738   077D 71          	MOV		M, C
1739   077E             ;переход на третий битплан
1740   077E 67          	MOV	h,a
1741   077F             ;рисуем на третьем плане
1742   077F 70          	MOV		M, B
1743   0780 24          	INR		H
1744   0781 C1          	POP		B
1745   0782 71          	MOV		M, C
1746   0783 24          	INR		H
1747   0784 70          	MOV		M, B
1748   0785             ;выбираем следующую пару байтов для цикла рисования
1749   0785 2C          	INR	l	
1750   0786 C1          	POP		B
1751   0787             ;	
1752   0787 62          	MOV	h,d
1753   0788             ;рисуем на первом плане
1754   0788 71          	MOV		M, C
1755   0789 24          	INR		H
1756   078A 70          	MOV		M, B
1757   078B 24          	INR		H
1758   078C C1          	POP		B
1759   078D 71          	MOV		M, C
1760   078E             ;переход на второй битплан
1761   078E 63          	MOV	h,e
1762   078F             ;рисуем на втором плане
1763   078F 70          	MOV		M, B
1764   0790 24          	INR		H
1765   0791 C1          	POP		B
1766   0792 71          	MOV		M, C
1767   0793 24          	INR		H
1768   0794 70          	MOV		M, B
1769   0795 C1          	POP		B
1770   0796             ;переход на третий битплан
1771   0796 67          	MOV	h,a
1772   0797             ;рисуем на третьем плане
1773   0797 71          	MOV		M, C
1774   0798 24          	INR		H
1775   0799 70          	MOV		M, B
1776   079A 24          	INR		H
1777   079B C1          	POP		B
1778   079C 71          	MOV		M, C
1779   079D             ;переходим на следующую строку
1780   079D 2C          	INR	l	
1781   079E             ;возвращаемся на первый план	
1782   079E 62          	MOV	h,d
1783   079F             ;повторяем цикл рисования
1784   079F 70          	MOV		M, B
1785   07A0 24          	INR		H
1786   07A1 C1          	POP		B
1787   07A2 71          	MOV		M, C
1788   07A3 24          	INR		H
1789   07A4 70          	MOV		M, B
1790   07A5 C1          	POP		B
1791   07A6             ;переход на второй битплан
1792   07A6 63          	MOV	h,e
1793   07A7             ;рисуем на втором плане
1794   07A7 71          	MOV		M, C
1795   07A8 24          	INR		H
1796   07A9 70          	MOV		M, B
1797   07AA 24          	INR		H
1798   07AB C1          	POP		B
1799   07AC 71          	MOV		M, C
1800   07AD             ;переход на третий битплан
1801   07AD 67          	MOV	h,a
1802   07AE             ;рисуем на третьем плане
1803   07AE 70          	MOV		M, B
1804   07AF 24          	INR		H
1805   07B0 C1          	POP		B
1806   07B1 71          	MOV		M, C
1807   07B2 24          	INR		H
1808   07B3 70          	MOV		M, B
1809   07B4             ;выбираем следующую пару байтов для цикла рисования
1810   07B4 2C          	INR	l	
1811   07B5 C1          	POP		B
1812   07B6             ;	
1813   07B6 62          	MOV	h,d
1814   07B7             ;рисуем на первом плане
1815   07B7 71          	MOV		M, C
1816   07B8 24          	INR		H
1817   07B9 70          	MOV		M, B
1818   07BA 24          	INR		H
1819   07BB C1          	POP		B
1820   07BC 71          	MOV		M, C
1821   07BD             ;переход на второй битплан
1822   07BD 63          	MOV	h,e
1823   07BE             ;рисуем на втором плане
1824   07BE 70          	MOV		M, B
1825   07BF 24          	INR		H
1826   07C0 C1          	POP		B
1827   07C1 71          	MOV		M, C
1828   07C2 24          	INR		H
1829   07C3 70          	MOV		M, B
1830   07C4 C1          	POP		B
1831   07C5             ;переход на третий битплан
1832   07C5 67          	MOV	h,a
1833   07C6             ;рисуем на третьем плане
1834   07C6 71          	MOV		M, C
1835   07C7 24          	INR		H
1836   07C8 70          	MOV		M, B
1837   07C9 24          	INR		H
1838   07CA C1          	POP		B
1839   07CB 71          	MOV		M, C
1840   07CC             ;переходим на следующую строку
1841   07CC 2C          	INR	l	
1842   07CD             ;возвращаемся на первый план	
1843   07CD 62          	MOV	h,d
1844   07CE             ;повторяем цикл рисования
1845   07CE 70          	MOV		M, B
1846   07CF 24          	INR		H
1847   07D0 C1          	POP		B
1848   07D1 71          	MOV		M, C
1849   07D2 24          	INR		H
1850   07D3 70          	MOV		M, B
1851   07D4 C1          	POP		B
1852   07D5             ;переход на второй битплан
1853   07D5 63          	MOV	h,e
1854   07D6             ;рисуем на втором плане
1855   07D6 71          	MOV		M, C
1856   07D7 24          	INR		H
1857   07D8 70          	MOV		M, B
1858   07D9 24          	INR		H
1859   07DA C1          	POP		B
1860   07DB 71          	MOV		M, C
1861   07DC             ;переход на третий битплан
1862   07DC 67          	MOV	h,a
1863   07DD             ;рисуем на третьем плане
1864   07DD 70          	MOV		M, B
1865   07DE 24          	INR		H
1866   07DF C1          	POP		B
1867   07E0 71          	MOV		M, C
1868   07E1 24          	INR		H
1869   07E2 70          	MOV		M, B
1870   07E3             ;выбираем следующую пару байтов для цикла рисования
1871   07E3 2C          	INR	l	
1872   07E4 C1          	POP		B
1873   07E5             ;	
1874   07E5 62          	MOV	h,d
1875   07E6             ;рисуем на первом плане
1876   07E6 71          	MOV		M, C
1877   07E7 24          	INR		H
1878   07E8 70          	MOV		M, B
1879   07E9 24          	INR		H
1880   07EA C1          	POP		B
1881   07EB 71          	MOV		M, C
1882   07EC             ;переход на второй битплан
1883   07EC 63          	MOV	h,e
1884   07ED             ;рисуем на втором плане
1885   07ED 70          	MOV		M, B
1886   07EE 24          	INR		H
1887   07EF C1          	POP		B
1888   07F0 71          	MOV		M, C
1889   07F1 24          	INR		H
1890   07F2 70          	MOV		M, B
1891   07F3 C1          	POP		B
1892   07F4             ;переход на третий битплан
1893   07F4 67          	MOV	h,a
1894   07F5             ;рисуем на третьем плане
1895   07F5 71          	MOV		M, C
1896   07F6 24          	INR		H
1897   07F7 70          	MOV		M, B
1898   07F8 24          	INR		H
1899   07F9 C1          	POP		B
1900   07FA 71          	MOV		M, C
1901   07FB             ;переходим на следующую строку
1902   07FB 2C          	INR	l	
1903   07FC             ;возвращаемся на первый план	
1904   07FC 62          	MOV	h,d
1905   07FD             ;повторяем цикл рисования
1906   07FD 70          	MOV		M, B
1907   07FE 24          	INR		H
1908   07FF C1          	POP		B
1909   0800 71          	MOV		M, C
1910   0801 24          	INR		H
1911   0802 70          	MOV		M, B
1912   0803 C1          	POP		B
1913   0804             ;переход на второй битплан
1914   0804 63          	MOV	h,e
1915   0805             ;рисуем на втором плане
1916   0805 71          	MOV		M, C
1917   0806 24          	INR		H
1918   0807 70          	MOV		M, B
1919   0808 24          	INR		H
1920   0809 C1          	POP		B
1921   080A 71          	MOV		M, C
1922   080B             ;переход на третий битплан
1923   080B 67          	MOV	h,a
1924   080C             ;рисуем на третьем плане
1925   080C 70          	MOV		M, B
1926   080D 24          	INR		H
1927   080E C1          	POP		B
1928   080F 71          	MOV		M, C
1929   0810 24          	INR		H
1930   0811 70          	MOV		M, B
1931   0812             ;выбираем следующую пару байтов для цикла рисования
1932   0812 2C          	INR	l	
1933   0813 C1          	POP		B
1934   0814             ;	
1935   0814 62          	MOV	h,d
1936   0815             ;рисуем на первом плане
1937   0815 71          	MOV		M, C
1938   0816 24          	INR		H
1939   0817 70          	MOV		M, B
1940   0818 24          	INR		H
1941   0819 C1          	POP		B
1942   081A 71          	MOV		M, C
1943   081B             ;переход на второй битплан
1944   081B 63          	MOV	h,e
1945   081C             ;рисуем на втором плане
1946   081C 70          	MOV		M, B
1947   081D 24          	INR		H
1948   081E C1          	POP		B
1949   081F 71          	MOV		M, C
1950   0820 24          	INR		H
1951   0821 70          	MOV		M, B
1952   0822 C1          	POP		B
1953   0823             ;переход на третий битплан
1954   0823 67          	MOV	h,a
1955   0824             ;рисуем на третьем плане
1956   0824 71          	MOV		M, C
1957   0825 24          	INR		H
1958   0826 70          	MOV		M, B
1959   0827 24          	INR		H
1960   0828 C1          	POP		B
1961   0829 71          	MOV		M, C
1962   082A             ;переходим на следующую строку
1963   082A 2C          	INR	l	
1964   082B             ;возвращаемся на первый план	
1965   082B 62          	MOV	h,d
1966   082C             ;повторяем цикл рисования
1967   082C 70          	MOV		M, B
1968   082D 24          	INR		H
1969   082E C1          	POP		B
1970   082F 71          	MOV		M, C
1971   0830 24          	INR		H
1972   0831 70          	MOV		M, B
1973   0832 C1          	POP		B
1974   0833             ;переход на второй битплан
1975   0833 63          	MOV	h,e
1976   0834             ;рисуем на втором плане
1977   0834 71          	MOV		M, C
1978   0835 24          	INR		H
1979   0836 70          	MOV		M, B
1980   0837 24          	INR		H
1981   0838 C1          	POP		B
1982   0839 71          	MOV		M, C
1983   083A             ;переход на третий битплан
1984   083A 67          	MOV	h,a
1985   083B             ;рисуем на третьем плане
1986   083B 70          	MOV		M, B
1987   083C 24          	INR		H
1988   083D C1          	POP		B
1989   083E 71          	MOV		M, C
1990   083F 24          	INR		H
1991   0840 70          	MOV		M, B
1992   0841             ;выбираем следующую пару байтов для цикла рисования
1993   0841 2C          	INR	l	
1994   0842 C1          	POP		B
1995   0843             ;	
1996   0843             sprite_sp0_2:
1997   0843 31 31 31    	LXI	sp,$3131
1998   0846 C9          	RET
1999   0847             
2000   0847             ;----------------------------------------------------------------
2001   0847             ; draw a sprite (24x24 pixels)
2002   0847             ; author ivagor
2003   0847             ; method: zig-zag, unrolled
2004   0847             
2005   0847             ; in:
2006   0847             ; BC	sprite data
2007   0847             ; DE	screen address (x,y)
2008   0847             		.MODULE DS_ivagor
2009   0847             DrawSprite_ivagor:
2010   0847             		; store SP
2011   0847 21 00 00    		LXI		H,0				; (12)
2012   084A 39          		DAD		SP				; (12)
2013   084B 22 7B 0A    		SHLD	_restoreSP+1	; (20)
2014   084E             		; HL = BC
2015   084E 60          		MOV		H, B			; (8)
2016   084F 69          		MOV		L, C			; (8)
2017   0850             		; BC = (HL), HL +=2
2018   0850 4E          		MOV		C, M			; (8)
2019   0851 23          		INX		H				; (8)
2020   0852 46          		MOV		B, M			; (8)
2021   0853 23          		INX		H				; (8)
2022   0854             		; SP = HL
2023   0854 F9          		SPHL					; (8)
2024   0855             		
2025   0855             		; HL = DE
2026   0855 EB          		XCHG					; (4)
2027   0856             		; D = screen X
2028   0856 54          		MOV		D, H			; (8)
2029   0857             		; E = second screen X
2030   0857 3E 20       		MVI		A, 20h			; (8)
2031   0859 82          		ADD		D
2032   085A 5F          		MOV		E, A
2033   085B             		; A = third screen X
2034   085B 3E 20       		MVI		A, 20h			; (8)
2035   085D 83          		ADD		E				; (4)
2036   085E             		; X += 2
2037   085E 24          		INR		H				; (8)
2038   085F 24          		INR		H				; (8)
2039   0860             
2040   0860             ; HL = screen address (X + 2, Y)
2041   0860             ; SP = data + 2
2042   0860             
2043   0860             #DEFINE 	DRAW_BACKWARD_LINE_IVAGOR	\
2044   0860             #DEFCONT \	POP B\ MOV M,C\ DCR H\ MOV M,B\ DCR H\ POP B\ MOV M,C
2045   0860             #DEFCONT \	MOV H,E\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2046   0860             #DEFCONT \	MOV h,a\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2047   0860             #DEFCONT \	DCR L
2048   0860             
2049   0860             #DEFINE 	DRAW_FORWARD_LINE_IVAGOR	\
2050   0860             #DEFCONT \	MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2051   0860             #DEFCONT \	MOV H,E\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2052   0860             #DEFCONT \	MOV H,D\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2053   0860             #DEFCONT \	DCR L
2054   0860             
2055   0860             			; first line
2056   0860 71          			MOV M,C\ DCR H\ MOV M,B\ DCR H\ POP B\ MOV M,C
2056   0861 25          
2056   0862 70          
2056   0863 25          
2056   0864 C1          
2056   0865 71          
2057   0866 63          			MOV H,E\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2057   0867 70          
2057   0868 24          
2057   0869 C1          
2057   086A 71          
2057   086B 24          
2057   086C 70          
2058   086D 67          			MOV h,a\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2058   086E C1          
2058   086F 71          
2058   0870 24          
2058   0871 70          
2058   0872 24          
2058   0873 C1          
2058   0874 71          
2059   0875 2D          			DCR L
2060   0876             
2061   0876             			DRAW_FORWARD_LINE_IVAGOR
2061   0876             
2061   0876 70          
2061   0877 25          
2061   0878 C1          
2061   0879 71          
2061   087A 25          
2061   087B 70          
2061   087C 63          
2061   087D C1          
2061   087E 71          
2061   087F 24          
2061   0880 70          
2061   0881 24          
2061   0882 C1          
2061   0883 71          
2061   0884 62          
2061   0885 70          
2061   0886 24          
2061   0887 C1          
2061   0888 71          
2061   0889 24          
2061   088A 70          
2061   088B 2D          
2062   088C             			DRAW_BACKWARD_LINE_IVAGOR
2062   088C             
2062   088C C1          
2062   088D 71          
2062   088E 25          
2062   088F 70          
2062   0890 25          
2062   0891 C1          
2062   0892 71          
2062   0893 63          
2062   0894 70          
2062   0895 24          
2062   0896 C1          
2062   0897 71          
2062   0898 24          
2062   0899 70          
2062   089A 67          
2062   089B C1          
2062   089C 71          
2062   089D 24          
2062   089E 70          
2062   089F 24          
2062   08A0 C1          
2062   08A1 71          
2062   08A2 2D          
2063   08A3             			DRAW_FORWARD_LINE_IVAGOR
2063   08A3             
2063   08A3 70          
2063   08A4 25          
2063   08A5 C1          
2063   08A6 71          
2063   08A7 25          
2063   08A8 70          
2063   08A9 63          
2063   08AA C1          
2063   08AB 71          
2063   08AC 24          
2063   08AD 70          
2063   08AE 24          
2063   08AF C1          
2063   08B0 71          
2063   08B1 62          
2063   08B2 70          
2063   08B3 24          
2063   08B4 C1          
2063   08B5 71          
2063   08B6 24          
2063   08B7 70          
2063   08B8 2D          
2064   08B9             			DRAW_BACKWARD_LINE_IVAGOR
2064   08B9             
2064   08B9 C1          
2064   08BA 71          
2064   08BB 25          
2064   08BC 70          
2064   08BD 25          
2064   08BE C1          
2064   08BF 71          
2064   08C0 63          
2064   08C1 70          
2064   08C2 24          
2064   08C3 C1          
2064   08C4 71          
2064   08C5 24          
2064   08C6 70          
2064   08C7 67          
2064   08C8 C1          
2064   08C9 71          
2064   08CA 24          
2064   08CB 70          
2064   08CC 24          
2064   08CD C1          
2064   08CE 71          
2064   08CF 2D          
2065   08D0             			DRAW_FORWARD_LINE_IVAGOR
2065   08D0             
2065   08D0 70          
2065   08D1 25          
2065   08D2 C1          
2065   08D3 71          
2065   08D4 25          
2065   08D5 70          
2065   08D6 63          
2065   08D7 C1          
2065   08D8 71          
2065   08D9 24          
2065   08DA 70          
2065   08DB 24          
2065   08DC C1          
2065   08DD 71          
2065   08DE 62          
2065   08DF 70          
2065   08E0 24          
2065   08E1 C1          
2065   08E2 71          
2065   08E3 24          
2065   08E4 70          
2065   08E5 2D          
2066   08E6             			DRAW_BACKWARD_LINE_IVAGOR
2066   08E6             
2066   08E6 C1          
2066   08E7 71          
2066   08E8 25          
2066   08E9 70          
2066   08EA 25          
2066   08EB C1          
2066   08EC 71          
2066   08ED 63          
2066   08EE 70          
2066   08EF 24          
2066   08F0 C1          
2066   08F1 71          
2066   08F2 24          
2066   08F3 70          
2066   08F4 67          
2066   08F5 C1          
2066   08F6 71          
2066   08F7 24          
2066   08F8 70          
2066   08F9 24          
2066   08FA C1          
2066   08FB 71          
2066   08FC 2D          
2067   08FD             			DRAW_FORWARD_LINE_IVAGOR	
2067   08FD             
2067   08FD 70          
2067   08FE 25          
2067   08FF C1          
2067   0900 71          
2067   0901 25          
2067   0902 70          
2067   0903 63          
2067   0904 C1          
2067   0905 71          
2067   0906 24          
2067   0907 70          
2067   0908 24          
2067   0909 C1          
2067   090A 71          
2067   090B 62          
2067   090C 70          
2067   090D 24          
2067   090E C1          
2067   090F 71          
2067   0910 24          
2067   0911 70          
2067   0912 2D          
2068   0913             			DRAW_BACKWARD_LINE_IVAGOR
2068   0913             
2068   0913 C1          
2068   0914 71          
2068   0915 25          
2068   0916 70          
2068   0917 25          
2068   0918 C1          
2068   0919 71          
2068   091A 63          
2068   091B 70          
2068   091C 24          
2068   091D C1          
2068   091E 71          
2068   091F 24          
2068   0920 70          
2068   0921 67          
2068   0922 C1          
2068   0923 71          
2068   0924 24          
2068   0925 70          
2068   0926 24          
2068   0927 C1          
2068   0928 71          
2068   0929 2D          
2069   092A             			DRAW_FORWARD_LINE_IVAGOR
2069   092A             
2069   092A 70          
2069   092B 25          
2069   092C C1          
2069   092D 71          
2069   092E 25          
2069   092F 70          
2069   0930 63          
2069   0931 C1          
2069   0932 71          
2069   0933 24          
2069   0934 70          
2069   0935 24          
2069   0936 C1          
2069   0937 71          
2069   0938 62          
2069   0939 70          
2069   093A 24          
2069   093B C1          
2069   093C 71          
2069   093D 24          
2069   093E 70          
2069   093F 2D          
2070   0940             			DRAW_BACKWARD_LINE_IVAGOR
2070   0940             
2070   0940 C1          
2070   0941 71          
2070   0942 25          
2070   0943 70          
2070   0944 25          
2070   0945 C1          
2070   0946 71          
2070   0947 63          
2070   0948 70          
2070   0949 24          
2070   094A C1          
2070   094B 71          
2070   094C 24          
2070   094D 70          
2070   094E 67          
2070   094F C1          
2070   0950 71          
2070   0951 24          
2070   0952 70          
2070   0953 24          
2070   0954 C1          
2070   0955 71          
2070   0956 2D          
2071   0957             			DRAW_FORWARD_LINE_IVAGOR
2071   0957             
2071   0957 70          
2071   0958 25          
2071   0959 C1          
2071   095A 71          
2071   095B 25          
2071   095C 70          
2071   095D 63          
2071   095E C1          
2071   095F 71          
2071   0960 24          
2071   0961 70          
2071   0962 24          
2071   0963 C1          
2071   0964 71          
2071   0965 62          
2071   0966 70          
2071   0967 24          
2071   0968 C1          
2071   0969 71          
2071   096A 24          
2071   096B 70          
2071   096C 2D          
2072   096D             			DRAW_BACKWARD_LINE_IVAGOR
2072   096D             
2072   096D C1          
2072   096E 71          
2072   096F 25          
2072   0970 70          
2072   0971 25          
2072   0972 C1          
2072   0973 71          
2072   0974 63          
2072   0975 70          
2072   0976 24          
2072   0977 C1          
2072   0978 71          
2072   0979 24          
2072   097A 70          
2072   097B 67          
2072   097C C1          
2072   097D 71          
2072   097E 24          
2072   097F 70          
2072   0980 24          
2072   0981 C1          
2072   0982 71          
2072   0983 2D          
2073   0984             			DRAW_FORWARD_LINE_IVAGOR	
2073   0984             
2073   0984 70          
2073   0985 25          
2073   0986 C1          
2073   0987 71          
2073   0988 25          
2073   0989 70          
2073   098A 63          
2073   098B C1          
2073   098C 71          
2073   098D 24          
2073   098E 70          
2073   098F 24          
2073   0990 C1          
2073   0991 71          
2073   0992 62          
2073   0993 70          
2073   0994 24          
2073   0995 C1          
2073   0996 71          
2073   0997 24          
2073   0998 70          
2073   0999 2D          
2074   099A             			DRAW_BACKWARD_LINE_IVAGOR
2074   099A             
2074   099A C1          
2074   099B 71          
2074   099C 25          
2074   099D 70          
2074   099E 25          
2074   099F C1          
2074   09A0 71          
2074   09A1 63          
2074   09A2 70          
2074   09A3 24          
2074   09A4 C1          
2074   09A5 71          
2074   09A6 24          
2074   09A7 70          
2074   09A8 67          
2074   09A9 C1          
2074   09AA 71          
2074   09AB 24          
2074   09AC 70          
2074   09AD 24          
2074   09AE C1          
2074   09AF 71          
2074   09B0 2D          
2075   09B1             			DRAW_FORWARD_LINE_IVAGOR
2075   09B1             
2075   09B1 70          
2075   09B2 25          
2075   09B3 C1          
2075   09B4 71          
2075   09B5 25          
2075   09B6 70          
2075   09B7 63          
2075   09B8 C1          
2075   09B9 71          
2075   09BA 24          
2075   09BB 70          
2075   09BC 24          
2075   09BD C1          
2075   09BE 71          
2075   09BF 62          
2075   09C0 70          
2075   09C1 24          
2075   09C2 C1          
2075   09C3 71          
2075   09C4 24          
2075   09C5 70          
2075   09C6 2D          
2076   09C7             			DRAW_BACKWARD_LINE_IVAGOR
2076   09C7             
2076   09C7 C1          
2076   09C8 71          
2076   09C9 25          
2076   09CA 70          
2076   09CB 25          
2076   09CC C1          
2076   09CD 71          
2076   09CE 63          
2076   09CF 70          
2076   09D0 24          
2076   09D1 C1          
2076   09D2 71          
2076   09D3 24          
2076   09D4 70          
2076   09D5 67          
2076   09D6 C1          
2076   09D7 71          
2076   09D8 24          
2076   09D9 70          
2076   09DA 24          
2076   09DB C1          
2076   09DC 71          
2076   09DD 2D          
2077   09DE             			DRAW_FORWARD_LINE_IVAGOR
2077   09DE             
2077   09DE 70          
2077   09DF 25          
2077   09E0 C1          
2077   09E1 71          
2077   09E2 25          
2077   09E3 70          
2077   09E4 63          
2077   09E5 C1          
2077   09E6 71          
2077   09E7 24          
2077   09E8 70          
2077   09E9 24          
2077   09EA C1          
2077   09EB 71          
2077   09EC 62          
2077   09ED 70          
2077   09EE 24          
2077   09EF C1          
2077   09F0 71          
2077   09F1 24          
2077   09F2 70          
2077   09F3 2D          
2078   09F4             			DRAW_BACKWARD_LINE_IVAGOR
2078   09F4             
2078   09F4 C1          
2078   09F5 71          
2078   09F6 25          
2078   09F7 70          
2078   09F8 25          
2078   09F9 C1          
2078   09FA 71          
2078   09FB 63          
2078   09FC 70          
2078   09FD 24          
2078   09FE C1          
2078   09FF 71          
2078   0A00 24          
2078   0A01 70          
2078   0A02 67          
2078   0A03 C1          
2078   0A04 71          
2078   0A05 24          
2078   0A06 70          
2078   0A07 24          
2078   0A08 C1          
2078   0A09 71          
2078   0A0A 2D          
2079   0A0B             			DRAW_FORWARD_LINE_IVAGOR
2079   0A0B             
2079   0A0B 70          
2079   0A0C 25          
2079   0A0D C1          
2079   0A0E 71          
2079   0A0F 25          
2079   0A10 70          
2079   0A11 63          
2079   0A12 C1          
2079   0A13 71          
2079   0A14 24          
2079   0A15 70          
2079   0A16 24          
2079   0A17 C1          
2079   0A18 71          
2079   0A19 62          
2079   0A1A 70          
2079   0A1B 24          
2079   0A1C C1          
2079   0A1D 71          
2079   0A1E 24          
2079   0A1F 70          
2079   0A20 2D          
2080   0A21             			DRAW_BACKWARD_LINE_IVAGOR
2080   0A21             
2080   0A21 C1          
2080   0A22 71          
2080   0A23 25          
2080   0A24 70          
2080   0A25 25          
2080   0A26 C1          
2080   0A27 71          
2080   0A28 63          
2080   0A29 70          
2080   0A2A 24          
2080   0A2B C1          
2080   0A2C 71          
2080   0A2D 24          
2080   0A2E 70          
2080   0A2F 67          
2080   0A30 C1          
2080   0A31 71          
2080   0A32 24          
2080   0A33 70          
2080   0A34 24          
2080   0A35 C1          
2080   0A36 71          
2080   0A37 2D          
2081   0A38             			DRAW_FORWARD_LINE_IVAGOR
2081   0A38             
2081   0A38 70          
2081   0A39 25          
2081   0A3A C1          
2081   0A3B 71          
2081   0A3C 25          
2081   0A3D 70          
2081   0A3E 63          
2081   0A3F C1          
2081   0A40 71          
2081   0A41 24          
2081   0A42 70          
2081   0A43 24          
2081   0A44 C1          
2081   0A45 71          
2081   0A46 62          
2081   0A47 70          
2081   0A48 24          
2081   0A49 C1          
2081   0A4A 71          
2081   0A4B 24          
2081   0A4C 70          
2081   0A4D 2D          
2082   0A4E             			DRAW_BACKWARD_LINE_IVAGOR
2082   0A4E             
2082   0A4E C1          
2082   0A4F 71          
2082   0A50 25          
2082   0A51 70          
2082   0A52 25          
2082   0A53 C1          
2082   0A54 71          
2082   0A55 63          
2082   0A56 70          
2082   0A57 24          
2082   0A58 C1          
2082   0A59 71          
2082   0A5A 24          
2082   0A5B 70          
2082   0A5C 67          
2082   0A5D C1          
2082   0A5E 71          
2082   0A5F 24          
2082   0A60 70          
2082   0A61 24          
2082   0A62 C1          
2082   0A63 71          
2082   0A64 2D          
2083   0A65             			; 24th line
2084   0A65 70          			MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2084   0A66 25          
2084   0A67 C1          
2084   0A68 71          
2084   0A69 25          
2084   0A6A 70          
2085   0A6B 63          			MOV H,E\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2085   0A6C C1          
2085   0A6D 71          
2085   0A6E 24          
2085   0A6F 70          
2085   0A70 24          
2085   0A71 C1          
2085   0A72 71          
2086   0A73 62          			MOV H,D\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2086   0A74 70          
2086   0A75 24          
2086   0A76 C1          
2086   0A77 71          
2086   0A78 24          
2086   0A79 70          
2087   0A7A             
2088   0A7A 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR	; restore SP (12)
2089   0A7D C9          			RET
2090   0A7E             
2091   0A7E             ;----------------------------------------------------------------
2092   0A7E             ; draw a sprite (24x24 pixels)
2093   0A7E             ; author: parallelno
2094   0A7E             ; method: zig-zag
2095   0A7E             ; in:
2096   0A7E             ; BC	sprite data
2097   0A7E             ; DE	screen address (x,y)
2098   0A7E             
2099   0A7E             			.MODULE DS_parallelno
2100   0A7E             DrawSprite_parallelno:
2101   0A7E             			; store SP
2102   0A7E 21 00 00    			LXI		H, 0			; (12)
2103   0A81 39          			DAD		SP				; (12)
2104   0A82 22 AE 0C    			SHLD	_restoreSP + 1	; (20)
2105   0A85             			; SP = BC
2106   0A85 60          			MOV		H, B			; (8)
2107   0A86 69          			MOV		L, C			; (8)
2108   0A87 F9          			SPHL					; (8)
2109   0A88             			; D, E, A are initial X for 
2110   0A88             			; the 1st, the 2nd, the 3rd screen buffs
2111   0A88 EB          			XCHG					; (4)
2112   0A89 54          			MOV		D, H			; (8)
2113   0A8A 3E 20       			MVI		A, 20H			; (8)
2114   0A8C 82          			ADD 	D				; (4)
2115   0A8D 5F          			MOV 	E, A			; (8)
2116   0A8E C6 20       			ADI 	20H				; (8)
2117   0A90 14          			INR 	D				; (8)
2118   0A91 14          			INR 	D				; (8)
2119   0A92             									; (124) total
2120   0A92             
2121   0A92             ; screen format
2122   0A92             ; DRAW_FORWARD_LINE_PARALLELNO1
2123   0A92             ; 1st screen buff : 1 -> 2 -> 3
2124   0A92             ; 2nd screen buff : 4 -> 5 -> 6
2125   0A92             ; 3rd screen buff : 7 -> 8 -> 9
2126   0A92             ; y--
2127   0A92             ; DRAW_BACKWARD_LINE_PARALLELNO1
2128   0A92             ; 3nd screen buff : 12 <- 11 <- 10
2129   0A92             ; 2nd screen buff : 13 -> 14 -> 15
2130   0A92             ; 1st screen buff : 18 <- 17 <- 16
2131   0A92             ; y--
2132   0A92             ; repeat
2133   0A92             
2134   0A92             ; HL - 1st screen buff XY
2135   0A92             ; SP - sprite data
2136   0A92             ; D - 1st screen buff X + 2
2137   0A92             ; E - 2nd screen buff X
2138   0A92             ; A - 3rd screen buff X		
2139   0A92             
2140   0A92             #DEFINE 	DRAW_FORWARD_LINE_PARALLELNO1	\
2141   0A92             #DEFCONT \	POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2142   0A92             #DEFCONT \	MOV H,E\ MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2143   0A92             #DEFCONT \	MOV H,A\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2144   0A92             
2145   0A92             #DEFINE 	DRAW_BACKWARD_LINE_PARALLELNO1	\
2146   0A92             #DEFCONT \	MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2147   0A92             #DEFCONT \	MOV H,E\ POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2148   0A92             #DEFCONT \	MOV H,D\ MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2149   0A92             
2150   0A92             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2150   0A92             
2150   0A92 C1          
2150   0A93 71          
2150   0A94 24          
2150   0A95 70          
2150   0A96 24          
2150   0A97 C1          
2150   0A98 71          
2150   0A99 63          
2150   0A9A 70          
2150   0A9B 24          
2150   0A9C C1          
2150   0A9D 71          
2150   0A9E 24          
2150   0A9F 70          
2150   0AA0 67          
2150   0AA1 C1          
2150   0AA2 71          
2150   0AA3 24          
2150   0AA4 70          
2150   0AA5 24          
2150   0AA6 C1          
2150   0AA7 71          
2150   0AA8 2D          
2151   0AA9             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2151   0AA9             
2151   0AA9 70          
2151   0AAA 25          
2151   0AAB C1          
2151   0AAC 71          
2151   0AAD 25          
2151   0AAE 70          
2151   0AAF 63          
2151   0AB0 C1          
2151   0AB1 71          
2151   0AB2 24          
2151   0AB3 70          
2151   0AB4 24          
2151   0AB5 C1          
2151   0AB6 71          
2151   0AB7 62          
2151   0AB8 70          
2151   0AB9 25          
2151   0ABA C1          
2151   0ABB 71          
2151   0ABC 25          
2151   0ABD 70          
2151   0ABE 2D          
2152   0ABF             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2152   0ABF             
2152   0ABF C1          
2152   0AC0 71          
2152   0AC1 24          
2152   0AC2 70          
2152   0AC3 24          
2152   0AC4 C1          
2152   0AC5 71          
2152   0AC6 63          
2152   0AC7 70          
2152   0AC8 24          
2152   0AC9 C1          
2152   0ACA 71          
2152   0ACB 24          
2152   0ACC 70          
2152   0ACD 67          
2152   0ACE C1          
2152   0ACF 71          
2152   0AD0 24          
2152   0AD1 70          
2152   0AD2 24          
2152   0AD3 C1          
2152   0AD4 71          
2152   0AD5 2D          
2153   0AD6             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2153   0AD6             
2153   0AD6 70          
2153   0AD7 25          
2153   0AD8 C1          
2153   0AD9 71          
2153   0ADA 25          
2153   0ADB 70          
2153   0ADC 63          
2153   0ADD C1          
2153   0ADE 71          
2153   0ADF 24          
2153   0AE0 70          
2153   0AE1 24          
2153   0AE2 C1          
2153   0AE3 71          
2153   0AE4 62          
2153   0AE5 70          
2153   0AE6 25          
2153   0AE7 C1          
2153   0AE8 71          
2153   0AE9 25          
2153   0AEA 70          
2153   0AEB 2D          
2154   0AEC             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2154   0AEC             
2154   0AEC C1          
2154   0AED 71          
2154   0AEE 24          
2154   0AEF 70          
2154   0AF0 24          
2154   0AF1 C1          
2154   0AF2 71          
2154   0AF3 63          
2154   0AF4 70          
2154   0AF5 24          
2154   0AF6 C1          
2154   0AF7 71          
2154   0AF8 24          
2154   0AF9 70          
2154   0AFA 67          
2154   0AFB C1          
2154   0AFC 71          
2154   0AFD 24          
2154   0AFE 70          
2154   0AFF 24          
2154   0B00 C1          
2154   0B01 71          
2154   0B02 2D          
2155   0B03             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2155   0B03             
2155   0B03 70          
2155   0B04 25          
2155   0B05 C1          
2155   0B06 71          
2155   0B07 25          
2155   0B08 70          
2155   0B09 63          
2155   0B0A C1          
2155   0B0B 71          
2155   0B0C 24          
2155   0B0D 70          
2155   0B0E 24          
2155   0B0F C1          
2155   0B10 71          
2155   0B11 62          
2155   0B12 70          
2155   0B13 25          
2155   0B14 C1          
2155   0B15 71          
2155   0B16 25          
2155   0B17 70          
2155   0B18 2D          
2156   0B19             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2156   0B19             
2156   0B19 C1          
2156   0B1A 71          
2156   0B1B 24          
2156   0B1C 70          
2156   0B1D 24          
2156   0B1E C1          
2156   0B1F 71          
2156   0B20 63          
2156   0B21 70          
2156   0B22 24          
2156   0B23 C1          
2156   0B24 71          
2156   0B25 24          
2156   0B26 70          
2156   0B27 67          
2156   0B28 C1          
2156   0B29 71          
2156   0B2A 24          
2156   0B2B 70          
2156   0B2C 24          
2156   0B2D C1          
2156   0B2E 71          
2156   0B2F 2D          
2157   0B30             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2157   0B30             
2157   0B30 70          
2157   0B31 25          
2157   0B32 C1          
2157   0B33 71          
2157   0B34 25          
2157   0B35 70          
2157   0B36 63          
2157   0B37 C1          
2157   0B38 71          
2157   0B39 24          
2157   0B3A 70          
2157   0B3B 24          
2157   0B3C C1          
2157   0B3D 71          
2157   0B3E 62          
2157   0B3F 70          
2157   0B40 25          
2157   0B41 C1          
2157   0B42 71          
2157   0B43 25          
2157   0B44 70          
2157   0B45 2D          
2158   0B46             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2158   0B46             
2158   0B46 C1          
2158   0B47 71          
2158   0B48 24          
2158   0B49 70          
2158   0B4A 24          
2158   0B4B C1          
2158   0B4C 71          
2158   0B4D 63          
2158   0B4E 70          
2158   0B4F 24          
2158   0B50 C1          
2158   0B51 71          
2158   0B52 24          
2158   0B53 70          
2158   0B54 67          
2158   0B55 C1          
2158   0B56 71          
2158   0B57 24          
2158   0B58 70          
2158   0B59 24          
2158   0B5A C1          
2158   0B5B 71          
2158   0B5C 2D          
2159   0B5D             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2159   0B5D             
2159   0B5D 70          
2159   0B5E 25          
2159   0B5F C1          
2159   0B60 71          
2159   0B61 25          
2159   0B62 70          
2159   0B63 63          
2159   0B64 C1          
2159   0B65 71          
2159   0B66 24          
2159   0B67 70          
2159   0B68 24          
2159   0B69 C1          
2159   0B6A 71          
2159   0B6B 62          
2159   0B6C 70          
2159   0B6D 25          
2159   0B6E C1          
2159   0B6F 71          
2159   0B70 25          
2159   0B71 70          
2159   0B72 2D          
2160   0B73             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2160   0B73             
2160   0B73 C1          
2160   0B74 71          
2160   0B75 24          
2160   0B76 70          
2160   0B77 24          
2160   0B78 C1          
2160   0B79 71          
2160   0B7A 63          
2160   0B7B 70          
2160   0B7C 24          
2160   0B7D C1          
2160   0B7E 71          
2160   0B7F 24          
2160   0B80 70          
2160   0B81 67          
2160   0B82 C1          
2160   0B83 71          
2160   0B84 24          
2160   0B85 70          
2160   0B86 24          
2160   0B87 C1          
2160   0B88 71          
2160   0B89 2D          
2161   0B8A             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2161   0B8A             
2161   0B8A 70          
2161   0B8B 25          
2161   0B8C C1          
2161   0B8D 71          
2161   0B8E 25          
2161   0B8F 70          
2161   0B90 63          
2161   0B91 C1          
2161   0B92 71          
2161   0B93 24          
2161   0B94 70          
2161   0B95 24          
2161   0B96 C1          
2161   0B97 71          
2161   0B98 62          
2161   0B99 70          
2161   0B9A 25          
2161   0B9B C1          
2161   0B9C 71          
2161   0B9D 25          
2161   0B9E 70          
2161   0B9F 2D          
2162   0BA0             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2162   0BA0             
2162   0BA0 C1          
2162   0BA1 71          
2162   0BA2 24          
2162   0BA3 70          
2162   0BA4 24          
2162   0BA5 C1          
2162   0BA6 71          
2162   0BA7 63          
2162   0BA8 70          
2162   0BA9 24          
2162   0BAA C1          
2162   0BAB 71          
2162   0BAC 24          
2162   0BAD 70          
2162   0BAE 67          
2162   0BAF C1          
2162   0BB0 71          
2162   0BB1 24          
2162   0BB2 70          
2162   0BB3 24          
2162   0BB4 C1          
2162   0BB5 71          
2162   0BB6 2D          
2163   0BB7             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2163   0BB7             
2163   0BB7 70          
2163   0BB8 25          
2163   0BB9 C1          
2163   0BBA 71          
2163   0BBB 25          
2163   0BBC 70          
2163   0BBD 63          
2163   0BBE C1          
2163   0BBF 71          
2163   0BC0 24          
2163   0BC1 70          
2163   0BC2 24          
2163   0BC3 C1          
2163   0BC4 71          
2163   0BC5 62          
2163   0BC6 70          
2163   0BC7 25          
2163   0BC8 C1          
2163   0BC9 71          
2163   0BCA 25          
2163   0BCB 70          
2163   0BCC 2D          
2164   0BCD             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2164   0BCD             
2164   0BCD C1          
2164   0BCE 71          
2164   0BCF 24          
2164   0BD0 70          
2164   0BD1 24          
2164   0BD2 C1          
2164   0BD3 71          
2164   0BD4 63          
2164   0BD5 70          
2164   0BD6 24          
2164   0BD7 C1          
2164   0BD8 71          
2164   0BD9 24          
2164   0BDA 70          
2164   0BDB 67          
2164   0BDC C1          
2164   0BDD 71          
2164   0BDE 24          
2164   0BDF 70          
2164   0BE0 24          
2164   0BE1 C1          
2164   0BE2 71          
2164   0BE3 2D          
2165   0BE4             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2165   0BE4             
2165   0BE4 70          
2165   0BE5 25          
2165   0BE6 C1          
2165   0BE7 71          
2165   0BE8 25          
2165   0BE9 70          
2165   0BEA 63          
2165   0BEB C1          
2165   0BEC 71          
2165   0BED 24          
2165   0BEE 70          
2165   0BEF 24          
2165   0BF0 C1          
2165   0BF1 71          
2165   0BF2 62          
2165   0BF3 70          
2165   0BF4 25          
2165   0BF5 C1          
2165   0BF6 71          
2165   0BF7 25          
2165   0BF8 70          
2165   0BF9 2D          
2166   0BFA             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2166   0BFA             
2166   0BFA C1          
2166   0BFB 71          
2166   0BFC 24          
2166   0BFD 70          
2166   0BFE 24          
2166   0BFF C1          
2166   0C00 71          
2166   0C01 63          
2166   0C02 70          
2166   0C03 24          
2166   0C04 C1          
2166   0C05 71          
2166   0C06 24          
2166   0C07 70          
2166   0C08 67          
2166   0C09 C1          
2166   0C0A 71          
2166   0C0B 24          
2166   0C0C 70          
2166   0C0D 24          
2166   0C0E C1          
2166   0C0F 71          
2166   0C10 2D          
2167   0C11             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2167   0C11             
2167   0C11 70          
2167   0C12 25          
2167   0C13 C1          
2167   0C14 71          
2167   0C15 25          
2167   0C16 70          
2167   0C17 63          
2167   0C18 C1          
2167   0C19 71          
2167   0C1A 24          
2167   0C1B 70          
2167   0C1C 24          
2167   0C1D C1          
2167   0C1E 71          
2167   0C1F 62          
2167   0C20 70          
2167   0C21 25          
2167   0C22 C1          
2167   0C23 71          
2167   0C24 25          
2167   0C25 70          
2167   0C26 2D          
2168   0C27             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2168   0C27             
2168   0C27 C1          
2168   0C28 71          
2168   0C29 24          
2168   0C2A 70          
2168   0C2B 24          
2168   0C2C C1          
2168   0C2D 71          
2168   0C2E 63          
2168   0C2F 70          
2168   0C30 24          
2168   0C31 C1          
2168   0C32 71          
2168   0C33 24          
2168   0C34 70          
2168   0C35 67          
2168   0C36 C1          
2168   0C37 71          
2168   0C38 24          
2168   0C39 70          
2168   0C3A 24          
2168   0C3B C1          
2168   0C3C 71          
2168   0C3D 2D          
2169   0C3E             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2169   0C3E             
2169   0C3E 70          
2169   0C3F 25          
2169   0C40 C1          
2169   0C41 71          
2169   0C42 25          
2169   0C43 70          
2169   0C44 63          
2169   0C45 C1          
2169   0C46 71          
2169   0C47 24          
2169   0C48 70          
2169   0C49 24          
2169   0C4A C1          
2169   0C4B 71          
2169   0C4C 62          
2169   0C4D 70          
2169   0C4E 25          
2169   0C4F C1          
2169   0C50 71          
2169   0C51 25          
2169   0C52 70          
2169   0C53 2D          
2170   0C54             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2170   0C54             
2170   0C54 C1          
2170   0C55 71          
2170   0C56 24          
2170   0C57 70          
2170   0C58 24          
2170   0C59 C1          
2170   0C5A 71          
2170   0C5B 63          
2170   0C5C 70          
2170   0C5D 24          
2170   0C5E C1          
2170   0C5F 71          
2170   0C60 24          
2170   0C61 70          
2170   0C62 67          
2170   0C63 C1          
2170   0C64 71          
2170   0C65 24          
2170   0C66 70          
2170   0C67 24          
2170   0C68 C1          
2170   0C69 71          
2170   0C6A 2D          
2171   0C6B             			DRAW_BACKWARD_LINE_PARALLELNO1	\ DCR L
2171   0C6B             
2171   0C6B 70          
2171   0C6C 25          
2171   0C6D C1          
2171   0C6E 71          
2171   0C6F 25          
2171   0C70 70          
2171   0C71 63          
2171   0C72 C1          
2171   0C73 71          
2171   0C74 24          
2171   0C75 70          
2171   0C76 24          
2171   0C77 C1          
2171   0C78 71          
2171   0C79 62          
2171   0C7A 70          
2171   0C7B 25          
2171   0C7C C1          
2171   0C7D 71          
2171   0C7E 25          
2171   0C7F 70          
2171   0C80 2D          
2172   0C81             			DRAW_FORWARD_LINE_PARALLELNO1	\ DCR L
2172   0C81             
2172   0C81 C1          
2172   0C82 71          
2172   0C83 24          
2172   0C84 70          
2172   0C85 24          
2172   0C86 C1          
2172   0C87 71          
2172   0C88 63          
2172   0C89 70          
2172   0C8A 24          
2172   0C8B C1          
2172   0C8C 71          
2172   0C8D 24          
2172   0C8E 70          
2172   0C8F 67          
2172   0C90 C1          
2172   0C91 71          
2172   0C92 24          
2172   0C93 70          
2172   0C94 24          
2172   0C95 C1          
2172   0C96 71          
2172   0C97 2D          
2173   0C98             			DRAW_BACKWARD_LINE_PARALLELNO1
2173   0C98             
2173   0C98 70          
2173   0C99 25          
2173   0C9A C1          
2173   0C9B 71          
2173   0C9C 25          
2173   0C9D 70          
2173   0C9E 63          
2173   0C9F C1          
2173   0CA0 71          
2173   0CA1 24          
2173   0CA2 70          
2173   0CA3 24          
2173   0CA4 C1          
2173   0CA5 71          
2173   0CA6 62          
2173   0CA7 70          
2173   0CA8 25          
2173   0CA9 C1          
2173   0CAA 71          
2173   0CAB 25          
2173   0CAC 70          
2174   0CAD             
2175   0CAD 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR	; restore SP (12)
2176   0CB0 C9          			RET
2177   0CB1             
2178   0CB1             ;----------------------------------------------------------------
2179   0CB1             ; draw a sprite (24x24 pixels)
2180   0CB1             ; author: parallelno
2181   0CB1             ; method: zig-zag
2182   0CB1             ; in:
2183   0CB1             ; BC	sprite data
2184   0CB1             ; DE	screen address (x,y)
2185   0CB1             
2186   0CB1             			.MODULE DS_parallelno2
2187   0CB1             DrawSprite_parallelno2:
2188   0CB1             			; store SP
2189   0CB1 21 00 00    			LXI		H, 0			; (12)
2190   0CB4 39          			DAD		SP				; (12)
2191   0CB5 22 E1 0E    			SHLD	_restoreSP + 1	; (20)
2192   0CB8             			; SP = BC
2193   0CB8 60          			MOV		H, B			; (8)
2194   0CB9 69          			MOV		L, C			; (8)
2195   0CBA F9          			SPHL					; (8)
2196   0CBB             			; D, E, A are initial X for 
2197   0CBB             			; the 1st, the 2nd, the 3rd screen buffs
2198   0CBB EB          			XCHG					; (4)
2199   0CBC             			;MOV		H, D			; (8)
2200   0CBC 3E 02       			MVI		A, 2			; (8)
2201   0CBE 84          			ADD 	H				; (4)
2202   0CBF 57          			MOV 	D, A			; (8)
2203   0CC0 C6 20       			ADI     20H             ; (8)
2204   0CC2 5F          			MOV     E, A            ; (8)
2205   0CC3 C6 20       			ADI 	20H				; (8)
2206   0CC5             			;INR 	D				;    (8)
2207   0CC5             			;INR 	D				;    (8)
2208   0CC5             									; (108) total
2209   0CC5             
2210   0CC5             ; screen format
2211   0CC5             ; DRAW_FORWARD_LINE_PARALLELNO1
2212   0CC5             ; 1st screen buff : 1 -> 2 -> 3
2213   0CC5             ; 2nd screen buff : 4 <- 5 <- (6)
2214   0CC5             ; 3rd screen buff : 7 <- 8 <- (9)
2215   0CC5             ; y--
2216   0CC5             ; DRAW_BACKWARD_LINE_PARALLELNO1
2217   0CC5             ; 3nd screen buff : 12 -> 11 -> 10
2218   0CC5             ; 2nd screen buff : 13 <- 14 <- (15)
2219   0CC5             ; 1st screen buff : 18 <- 17 <- (16)
2220   0CC5             ; y--
2221   0CC5             ; repeat
2222   0CC5             
2223   0CC5             ; HL - 1st screen buff XY
2224   0CC5             ; SP - sprite data
2225   0CC5             ; D - 1st screen buff X + 2
2226   0CC5             ; E - 2nd screen buff X + 2
2227   0CC5             ; A - 3rd screen buff X + 2
2228   0CC5             
2229   0CC5             #DEFINE 	DRAW_FORWARD_LINE_PARALLELNO2	\
2230   0CC5             #DEFCONT \	POP B\ MOV M,C\ INR H\ MOV M,B\ INR H\ POP B\ MOV M,C
2231   0CC5             #DEFCONT \	MOV H,E\ MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2232   0CC5             #DEFCONT \	MOV H,A\ POP B\ MOV M,C\ DCR H\ MOV M,B\ DCR H\ POP B\ MOV M,C
2233   0CC5             
2234   0CC5             #DEFINE 	DRAW_BACKWARD_LINE_PARALLELNO2	\
2235   0CC5             #DEFCONT \	MOV M,B\ INR H\ POP B\ MOV M,C\ INR H\ MOV M,B
2236   0CC5             #DEFCONT \	MOV H,E\ POP B\ MOV M,C\ DCR H\ MOV M,B\ DCR H\ POP B\ MOV M,C
2237   0CC5             #DEFCONT \	MOV H,D\ MOV M,B\ DCR H\ POP B\ MOV M,C\ DCR H\ MOV M,B
2238   0CC5             
2239   0CC5             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2239   0CC5             
2239   0CC5 C1          
2239   0CC6 71          
2239   0CC7 24          
2239   0CC8 70          
2239   0CC9 24          
2239   0CCA C1          
2239   0CCB 71          
2239   0CCC 63          
2239   0CCD 70          
2239   0CCE 25          
2239   0CCF C1          
2239   0CD0 71          
2239   0CD1 25          
2239   0CD2 70          
2239   0CD3 67          
2239   0CD4 C1          
2239   0CD5 71          
2239   0CD6 25          
2239   0CD7 70          
2239   0CD8 25          
2239   0CD9 C1          
2239   0CDA 71          
2239   0CDB 2D          
2240   0CDC             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2240   0CDC             
2240   0CDC 70          
2240   0CDD 24          
2240   0CDE C1          
2240   0CDF 71          
2240   0CE0 24          
2240   0CE1 70          
2240   0CE2 63          
2240   0CE3 C1          
2240   0CE4 71          
2240   0CE5 25          
2240   0CE6 70          
2240   0CE7 25          
2240   0CE8 C1          
2240   0CE9 71          
2240   0CEA 62          
2240   0CEB 70          
2240   0CEC 25          
2240   0CED C1          
2240   0CEE 71          
2240   0CEF 25          
2240   0CF0 70          
2240   0CF1 2D          
2241   0CF2             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2241   0CF2             
2241   0CF2 C1          
2241   0CF3 71          
2241   0CF4 24          
2241   0CF5 70          
2241   0CF6 24          
2241   0CF7 C1          
2241   0CF8 71          
2241   0CF9 63          
2241   0CFA 70          
2241   0CFB 25          
2241   0CFC C1          
2241   0CFD 71          
2241   0CFE 25          
2241   0CFF 70          
2241   0D00 67          
2241   0D01 C1          
2241   0D02 71          
2241   0D03 25          
2241   0D04 70          
2241   0D05 25          
2241   0D06 C1          
2241   0D07 71          
2241   0D08 2D          
2242   0D09             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2242   0D09             
2242   0D09 70          
2242   0D0A 24          
2242   0D0B C1          
2242   0D0C 71          
2242   0D0D 24          
2242   0D0E 70          
2242   0D0F 63          
2242   0D10 C1          
2242   0D11 71          
2242   0D12 25          
2242   0D13 70          
2242   0D14 25          
2242   0D15 C1          
2242   0D16 71          
2242   0D17 62          
2242   0D18 70          
2242   0D19 25          
2242   0D1A C1          
2242   0D1B 71          
2242   0D1C 25          
2242   0D1D 70          
2242   0D1E 2D          
2243   0D1F             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2243   0D1F             
2243   0D1F C1          
2243   0D20 71          
2243   0D21 24          
2243   0D22 70          
2243   0D23 24          
2243   0D24 C1          
2243   0D25 71          
2243   0D26 63          
2243   0D27 70          
2243   0D28 25          
2243   0D29 C1          
2243   0D2A 71          
2243   0D2B 25          
2243   0D2C 70          
2243   0D2D 67          
2243   0D2E C1          
2243   0D2F 71          
2243   0D30 25          
2243   0D31 70          
2243   0D32 25          
2243   0D33 C1          
2243   0D34 71          
2243   0D35 2D          
2244   0D36             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2244   0D36             
2244   0D36 70          
2244   0D37 24          
2244   0D38 C1          
2244   0D39 71          
2244   0D3A 24          
2244   0D3B 70          
2244   0D3C 63          
2244   0D3D C1          
2244   0D3E 71          
2244   0D3F 25          
2244   0D40 70          
2244   0D41 25          
2244   0D42 C1          
2244   0D43 71          
2244   0D44 62          
2244   0D45 70          
2244   0D46 25          
2244   0D47 C1          
2244   0D48 71          
2244   0D49 25          
2244   0D4A 70          
2244   0D4B 2D          
2245   0D4C             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2245   0D4C             
2245   0D4C C1          
2245   0D4D 71          
2245   0D4E 24          
2245   0D4F 70          
2245   0D50 24          
2245   0D51 C1          
2245   0D52 71          
2245   0D53 63          
2245   0D54 70          
2245   0D55 25          
2245   0D56 C1          
2245   0D57 71          
2245   0D58 25          
2245   0D59 70          
2245   0D5A 67          
2245   0D5B C1          
2245   0D5C 71          
2245   0D5D 25          
2245   0D5E 70          
2245   0D5F 25          
2245   0D60 C1          
2245   0D61 71          
2245   0D62 2D          
2246   0D63             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2246   0D63             
2246   0D63 70          
2246   0D64 24          
2246   0D65 C1          
2246   0D66 71          
2246   0D67 24          
2246   0D68 70          
2246   0D69 63          
2246   0D6A C1          
2246   0D6B 71          
2246   0D6C 25          
2246   0D6D 70          
2246   0D6E 25          
2246   0D6F C1          
2246   0D70 71          
2246   0D71 62          
2246   0D72 70          
2246   0D73 25          
2246   0D74 C1          
2246   0D75 71          
2246   0D76 25          
2246   0D77 70          
2246   0D78 2D          
2247   0D79             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2247   0D79             
2247   0D79 C1          
2247   0D7A 71          
2247   0D7B 24          
2247   0D7C 70          
2247   0D7D 24          
2247   0D7E C1          
2247   0D7F 71          
2247   0D80 63          
2247   0D81 70          
2247   0D82 25          
2247   0D83 C1          
2247   0D84 71          
2247   0D85 25          
2247   0D86 70          
2247   0D87 67          
2247   0D88 C1          
2247   0D89 71          
2247   0D8A 25          
2247   0D8B 70          
2247   0D8C 25          
2247   0D8D C1          
2247   0D8E 71          
2247   0D8F 2D          
2248   0D90             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2248   0D90             
2248   0D90 70          
2248   0D91 24          
2248   0D92 C1          
2248   0D93 71          
2248   0D94 24          
2248   0D95 70          
2248   0D96 63          
2248   0D97 C1          
2248   0D98 71          
2248   0D99 25          
2248   0D9A 70          
2248   0D9B 25          
2248   0D9C C1          
2248   0D9D 71          
2248   0D9E 62          
2248   0D9F 70          
2248   0DA0 25          
2248   0DA1 C1          
2248   0DA2 71          
2248   0DA3 25          
2248   0DA4 70          
2248   0DA5 2D          
2249   0DA6             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2249   0DA6             
2249   0DA6 C1          
2249   0DA7 71          
2249   0DA8 24          
2249   0DA9 70          
2249   0DAA 24          
2249   0DAB C1          
2249   0DAC 71          
2249   0DAD 63          
2249   0DAE 70          
2249   0DAF 25          
2249   0DB0 C1          
2249   0DB1 71          
2249   0DB2 25          
2249   0DB3 70          
2249   0DB4 67          
2249   0DB5 C1          
2249   0DB6 71          
2249   0DB7 25          
2249   0DB8 70          
2249   0DB9 25          
2249   0DBA C1          
2249   0DBB 71          
2249   0DBC 2D          
2250   0DBD             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2250   0DBD             
2250   0DBD 70          
2250   0DBE 24          
2250   0DBF C1          
2250   0DC0 71          
2250   0DC1 24          
2250   0DC2 70          
2250   0DC3 63          
2250   0DC4 C1          
2250   0DC5 71          
2250   0DC6 25          
2250   0DC7 70          
2250   0DC8 25          
2250   0DC9 C1          
2250   0DCA 71          
2250   0DCB 62          
2250   0DCC 70          
2250   0DCD 25          
2250   0DCE C1          
2250   0DCF 71          
2250   0DD0 25          
2250   0DD1 70          
2250   0DD2 2D          
2251   0DD3             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2251   0DD3             
2251   0DD3 C1          
2251   0DD4 71          
2251   0DD5 24          
2251   0DD6 70          
2251   0DD7 24          
2251   0DD8 C1          
2251   0DD9 71          
2251   0DDA 63          
2251   0DDB 70          
2251   0DDC 25          
2251   0DDD C1          
2251   0DDE 71          
2251   0DDF 25          
2251   0DE0 70          
2251   0DE1 67          
2251   0DE2 C1          
2251   0DE3 71          
2251   0DE4 25          
2251   0DE5 70          
2251   0DE6 25          
2251   0DE7 C1          
2251   0DE8 71          
2251   0DE9 2D          
2252   0DEA             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2252   0DEA             
2252   0DEA 70          
2252   0DEB 24          
2252   0DEC C1          
2252   0DED 71          
2252   0DEE 24          
2252   0DEF 70          
2252   0DF0 63          
2252   0DF1 C1          
2252   0DF2 71          
2252   0DF3 25          
2252   0DF4 70          
2252   0DF5 25          
2252   0DF6 C1          
2252   0DF7 71          
2252   0DF8 62          
2252   0DF9 70          
2252   0DFA 25          
2252   0DFB C1          
2252   0DFC 71          
2252   0DFD 25          
2252   0DFE 70          
2252   0DFF 2D          
2253   0E00             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2253   0E00             
2253   0E00 C1          
2253   0E01 71          
2253   0E02 24          
2253   0E03 70          
2253   0E04 24          
2253   0E05 C1          
2253   0E06 71          
2253   0E07 63          
2253   0E08 70          
2253   0E09 25          
2253   0E0A C1          
2253   0E0B 71          
2253   0E0C 25          
2253   0E0D 70          
2253   0E0E 67          
2253   0E0F C1          
2253   0E10 71          
2253   0E11 25          
2253   0E12 70          
2253   0E13 25          
2253   0E14 C1          
2253   0E15 71          
2253   0E16 2D          
2254   0E17             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2254   0E17             
2254   0E17 70          
2254   0E18 24          
2254   0E19 C1          
2254   0E1A 71          
2254   0E1B 24          
2254   0E1C 70          
2254   0E1D 63          
2254   0E1E C1          
2254   0E1F 71          
2254   0E20 25          
2254   0E21 70          
2254   0E22 25          
2254   0E23 C1          
2254   0E24 71          
2254   0E25 62          
2254   0E26 70          
2254   0E27 25          
2254   0E28 C1          
2254   0E29 71          
2254   0E2A 25          
2254   0E2B 70          
2254   0E2C 2D          
2255   0E2D             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2255   0E2D             
2255   0E2D C1          
2255   0E2E 71          
2255   0E2F 24          
2255   0E30 70          
2255   0E31 24          
2255   0E32 C1          
2255   0E33 71          
2255   0E34 63          
2255   0E35 70          
2255   0E36 25          
2255   0E37 C1          
2255   0E38 71          
2255   0E39 25          
2255   0E3A 70          
2255   0E3B 67          
2255   0E3C C1          
2255   0E3D 71          
2255   0E3E 25          
2255   0E3F 70          
2255   0E40 25          
2255   0E41 C1          
2255   0E42 71          
2255   0E43 2D          
2256   0E44             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2256   0E44             
2256   0E44 70          
2256   0E45 24          
2256   0E46 C1          
2256   0E47 71          
2256   0E48 24          
2256   0E49 70          
2256   0E4A 63          
2256   0E4B C1          
2256   0E4C 71          
2256   0E4D 25          
2256   0E4E 70          
2256   0E4F 25          
2256   0E50 C1          
2256   0E51 71          
2256   0E52 62          
2256   0E53 70          
2256   0E54 25          
2256   0E55 C1          
2256   0E56 71          
2256   0E57 25          
2256   0E58 70          
2256   0E59 2D          
2257   0E5A             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2257   0E5A             
2257   0E5A C1          
2257   0E5B 71          
2257   0E5C 24          
2257   0E5D 70          
2257   0E5E 24          
2257   0E5F C1          
2257   0E60 71          
2257   0E61 63          
2257   0E62 70          
2257   0E63 25          
2257   0E64 C1          
2257   0E65 71          
2257   0E66 25          
2257   0E67 70          
2257   0E68 67          
2257   0E69 C1          
2257   0E6A 71          
2257   0E6B 25          
2257   0E6C 70          
2257   0E6D 25          
2257   0E6E C1          
2257   0E6F 71          
2257   0E70 2D          
2258   0E71             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2258   0E71             
2258   0E71 70          
2258   0E72 24          
2258   0E73 C1          
2258   0E74 71          
2258   0E75 24          
2258   0E76 70          
2258   0E77 63          
2258   0E78 C1          
2258   0E79 71          
2258   0E7A 25          
2258   0E7B 70          
2258   0E7C 25          
2258   0E7D C1          
2258   0E7E 71          
2258   0E7F 62          
2258   0E80 70          
2258   0E81 25          
2258   0E82 C1          
2258   0E83 71          
2258   0E84 25          
2258   0E85 70          
2258   0E86 2D          
2259   0E87             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2259   0E87             
2259   0E87 C1          
2259   0E88 71          
2259   0E89 24          
2259   0E8A 70          
2259   0E8B 24          
2259   0E8C C1          
2259   0E8D 71          
2259   0E8E 63          
2259   0E8F 70          
2259   0E90 25          
2259   0E91 C1          
2259   0E92 71          
2259   0E93 25          
2259   0E94 70          
2259   0E95 67          
2259   0E96 C1          
2259   0E97 71          
2259   0E98 25          
2259   0E99 70          
2259   0E9A 25          
2259   0E9B C1          
2259   0E9C 71          
2259   0E9D 2D          
2260   0E9E             			DRAW_BACKWARD_LINE_PARALLELNO2	\ DCR L
2260   0E9E             
2260   0E9E 70          
2260   0E9F 24          
2260   0EA0 C1          
2260   0EA1 71          
2260   0EA2 24          
2260   0EA3 70          
2260   0EA4 63          
2260   0EA5 C1          
2260   0EA6 71          
2260   0EA7 25          
2260   0EA8 70          
2260   0EA9 25          
2260   0EAA C1          
2260   0EAB 71          
2260   0EAC 62          
2260   0EAD 70          
2260   0EAE 25          
2260   0EAF C1          
2260   0EB0 71          
2260   0EB1 25          
2260   0EB2 70          
2260   0EB3 2D          
2261   0EB4             			DRAW_FORWARD_LINE_PARALLELNO2	\ DCR L
2261   0EB4             
2261   0EB4 C1          
2261   0EB5 71          
2261   0EB6 24          
2261   0EB7 70          
2261   0EB8 24          
2261   0EB9 C1          
2261   0EBA 71          
2261   0EBB 63          
2261   0EBC 70          
2261   0EBD 25          
2261   0EBE C1          
2261   0EBF 71          
2261   0EC0 25          
2261   0EC1 70          
2261   0EC2 67          
2261   0EC3 C1          
2261   0EC4 71          
2261   0EC5 25          
2261   0EC6 70          
2261   0EC7 25          
2261   0EC8 C1          
2261   0EC9 71          
2261   0ECA 2D          
2262   0ECB             			DRAW_BACKWARD_LINE_PARALLELNO2
2262   0ECB             
2262   0ECB 70          
2262   0ECC 24          
2262   0ECD C1          
2262   0ECE 71          
2262   0ECF 24          
2262   0ED0 70          
2262   0ED1 63          
2262   0ED2 C1          
2262   0ED3 71          
2262   0ED4 25          
2262   0ED5 70          
2262   0ED6 25          
2262   0ED7 C1          
2262   0ED8 71          
2262   0ED9 62          
2262   0EDA 70          
2262   0EDB 25          
2262   0EDC C1          
2262   0EDD 71          
2262   0EDE 25          
2262   0EDF 70          
2263   0EE0             
2264   0EE0 31 00 00    _restoreSP:	LXI		SP, TEMP_ADDR	; restore SP (12)
2265   0EE3 C9          			RET
2266   0EE4             
2267   0EE4             ;----------------------------------------------------------------
2268   0EE4             ; Memory Reset
2269   0EE4             ; in:
2270   0EE4             ; BC	buffer last byte + 1
2271   0EE4             ; DE	counter (buffer length / 32)
2272   0EE4             ; use: HL
2273   0EE4             
2274   0EE4             MemReset:	.MODULE MemsetM
2275   0EE4 21 00 00    			LXI		H, 0			; (12)
2276   0EE7 39          			DAD		SP				; (12)
2277   0EE8 22 0A 0F    			SHLD	_restoreSP+1	; (20)
2278   0EEB             
2279   0EEB 60          			MOV		H, B			; (8)
2280   0EEC 69          			MOV		L, C			; (8)
2281   0EED F9          			SPHL					; (8)
2282   0EEE 01 00 00    			LXI		B, 0000H		; (12)
2283   0EF1             
2284   0EF1 C5          _loop:		PUSH	B				; (16)
2285   0EF2 C5          			PUSH	B
2286   0EF3 C5          			PUSH	B
2287   0EF4 C5          			PUSH	B
2288   0EF5             
2289   0EF5 C5          			PUSH	B				; (16)
2290   0EF6 C5          			PUSH	B
2291   0EF7 C5          			PUSH	B
2292   0EF8 C5          			PUSH	B
2293   0EF9             
2294   0EF9 C5          			PUSH	B				; (16)
2295   0EFA C5          			PUSH	B
2296   0EFB C5          			PUSH	B
2297   0EFC C5          			PUSH	B
2298   0EFD             
2299   0EFD C5          			PUSH	B				; (16)
2300   0EFE C5          			PUSH	B
2301   0EFF C5          			PUSH	B
2302   0F00 C5          			PUSH	B
2303   0F01             
2304   0F01 1D          			DCR		E				; (8)
2305   0F02 C2 F1 0E    			JNZ		_loop			; (12)
2306   0F05 15          			DCR		D				; (8)
2307   0F06 C2 F1 0E    			JNZ		_loop			; (12)
2308   0F09             _restoreSP:	
2309   0F09 31 00 00    			LXI		SP, TEMP_ADDR	; restore SP (12)
2310   0F0C C9          			RET
2311   0F0D             
2312   0F0D             ;----------------------------------------------------------------
2313   0F0D             ; Set Palette
2314   0F0D             ; in: none
2315   0F0D             ; use: A, HL, BC
2316   0F0D             
2317   0F0D             #DEFINE INIT_COLOR_IDX 			0FH
2318   0F0D             
2319   0F0D             SetPalette:	.MODULE SetPaletteM
2320   0F0D F5          			PUSH	PSW			; (16)
2321   0F0E C5          			PUSH	B
2322   0F0F E5          			PUSH	H
2323   0F10             					
2324   0F10 21 4C 0F    			LXI		H, colorTable + INIT_COLOR_IDX
2325   0F13 06 0F       			MVI		B, INIT_COLOR_IDX
2326   0F15             
2327   0F15 78          _loop:		MOV		A, B		; (8)
2328   0F16 D3 02       			OUT		2			; (12)
2329   0F18 7E          			MOV		A,M			; (8)
2330   0F19 D3 0C       			OUT		0CH			; (12)
2331   0F1B 04          			INR		B			; (8) delay
2332   0F1C D3 0C       			OUT		0CH			; (12)
2333   0F1E 2B          			DCX		H			; (8)
2334   0F1F D3 0C       			OUT		0CH			; (12)
2335   0F21 05          			DCR		B			; (8) delay
2336   0F22 05          			DCR		B			; (8)
2337   0F23 D3 0C       			OUT		0CH			; (12)
2338   0F25             								; (108) total
2339   0F25 F2 15 0F    			JP		_loop
2340   0F28             
2341   0F28 3E 88       			MVI		A, PORT0_OUT_OUT
2342   0F2A D3 00       			OUT		0
2343   0F2C 3A 3C 0F    			LDA  	borderColorIdx ; (16)			
2344   0F2F D3 02       			OUT		2
2345   0F31 3A 3A 0F    			LDA		vScroll
2346   0F34 D3 03       			OUT		3
2347   0F36             
2348   0F36 E1          			POP		H			; (12)
2349   0F37 C1          			POP		B
2350   0F38 F1          			POP		PSW
2351   0F39 C9          			RET
2352   0F3A             
2353   0F3A FF          vScroll:	.DB 0FFH
2354   0F3B 00          			.DB 0
2355   0F3C             borderColorIdx:
2356   0F3C 00          			.DB 0
2357   0F3D 5B 03 62 14 colorTable:	.DB	01011011b, $03, 01100010b, $14, 
2358   0F41 AD 55 FE 80 			.DB 10101101b, $55, 11111110b, $80,
2359   0F45 F8 F0 12 2D 			.DB 11111000b, $F0, 00010010b, $2D,
2360   0F49 2D 2D 2D 07 			.DB $2D, $2D, $2D, $07
2361   0F4D             
2362   0F4D 6F 0F 49 10 spriteTable:.dw	spriteData00, spriteData01, spriteData02, spriteData03
2362   0F51 23 11 FD 11 
2363   0F55 D7 12 B1 13 			.dw	spriteData04, spriteData05, spriteData06, spriteData07
2363   0F59 8B 14 65 15 
2364   0F5D 3F 16 19 17 			.dw	spriteData08, spriteData09, spriteData10, spriteData11
2364   0F61 F3 17 CD 18 
2365   0F65 A7 19 81 1A 			.dw	spriteData12, spriteData13, spriteData14, spriteData15
2365   0F69 5B 1B 35 1C 
2366   0F6D             
2367   0F6D             spriteDataSafetyBytes:
2368   0F6D 00 00       			.DB	0,0
2369   0F6F             spriteData00:
2370   0F6F 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2370   0F73 00 00 7F FF 
2370   0F77 FE 
2371   0F78 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2371   0F7C 00 00 FF FF 
2371   0F80 FF 
2372   0F81 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2372   0F85 00 00 FF FF 
2372   0F89 FF 
2373   0F8A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2373   0F8E 00 00 FF FF 
2373   0F92 FF 
2374   0F93 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2374   0F97 00 00 FF FF 
2374   0F9B FF 
2375   0F9C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2375   0FA0 00 00 FF FF 
2375   0FA4 FF 
2376   0FA5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2376   0FA9 00 00 FF FF 
2376   0FAD FF 
2377   0FAE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2377   0FB2 00 00 FF FF 
2377   0FB6 FF 
2378   0FB7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2378   0FBB 00 00 FF FF 
2378   0FBF FF 
2379   0FC0 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2379   0FC4 7E 00 FF FF 
2379   0FC8 FF 
2380   0FC9 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2380   0FCD 81 00 FF FF 
2380   0FD1 FF 
2381   0FD2 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2381   0FD6 81 00 FF FF 
2381   0FDA FF 
2382   0FDB 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2382   0FDF 81 00 FF FF 
2382   0FE3 FF 
2383   0FE4 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2383   0FE8 81 00 FF FF 
2383   0FEC FF 
2384   0FED 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2384   0FF1 81 00 FF FF 
2384   0FF5 FF 
2385   0FF6 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2385   0FFA 7E 00 FF FF 
2385   0FFE FF 
2386   0FFF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2386   1003 00 00 FF FF 
2386   1007 FF 
2387   1008 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2387   100C 00 00 FF FF 
2387   1010 FF 
2388   1011 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2388   1015 00 00 FF FF 
2388   1019 FF 
2389   101A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2389   101E 00 00 FF FF 
2389   1022 FF 
2390   1023 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2390   1027 00 00 FF FF 
2390   102B FF 
2391   102C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2391   1030 00 00 FF FF 
2391   1034 FF 
2392   1035 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2392   1039 00 00 FF FF 
2392   103D FF 
2393   103E 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2393   1042 00 00 7F FF 
2393   1046 FE 
2394   1047 00 00       			.DB	0,0
2395   1049             
2396   1049             spriteData01:
2397   1049 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2397   104D 00 00 7F FF 
2397   1051 FE 
2398   1052 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2398   1056 00 00 FF FF 
2398   105A FF 
2399   105B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2399   105F 00 00 FF FF 
2399   1063 FF 
2400   1064 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2400   1068 00 00 FF FF 
2400   106C FF 
2401   106D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2401   1071 00 00 FF FF 
2401   1075 FF 
2402   1076 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2402   107A 00 00 FF FF 
2402   107E FF 
2403   107F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2403   1083 00 00 FF FF 
2403   1087 FF 
2404   1088 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2404   108C 00 00 FF FF 
2404   1090 FF 
2405   1091 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2405   1095 00 00 FF FF 
2405   1099 FF 
2406   109A 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2406   109E FF 00 FF FF 
2406   10A2 FF 
2407   10A3 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2407   10A7 18 00 FF FF 
2407   10AB FF 
2408   10AC 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2408   10B0 18 00 FF FF 
2408   10B4 FF 
2409   10B5 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2409   10B9 18 00 FF FF 
2409   10BD FF 
2410   10BE 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2410   10C2 18 00 FF FF 
2410   10C6 FF 
2411   10C7 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2411   10CB 18 00 FF FF 
2411   10CF FF 
2412   10D0 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2412   10D4 18 00 FF FF 
2412   10D8 FF 
2413   10D9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2413   10DD 00 00 FF FF 
2413   10E1 FF 
2414   10E2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2414   10E6 00 00 FF FF 
2414   10EA FF 
2415   10EB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2415   10EF 00 00 FF FF 
2415   10F3 FF 
2416   10F4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2416   10F8 00 00 FF FF 
2416   10FC FF 
2417   10FD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2417   1101 00 00 FF FF 
2417   1105 FF 
2418   1106 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2418   110A 00 00 FF FF 
2418   110E FF 
2419   110F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2419   1113 00 00 FF FF 
2419   1117 FF 
2420   1118 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2420   111C 00 00 7F FF 
2420   1120 FE 
2421   1121 00 00       			.DB	0,0
2422   1123             
2423   1123             spriteData02:
2424   1123 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2424   1127 00 00 7F FF 
2424   112B FE 
2425   112C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2425   1130 00 00 FF FF 
2425   1134 FF 
2426   1135 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2426   1139 00 00 FF FF 
2426   113D FF 
2427   113E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2427   1142 00 00 FF FF 
2427   1146 FF 
2428   1147 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2428   114B 00 00 FF FF 
2428   114F FF 
2429   1150 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2429   1154 00 00 FF FF 
2429   1158 FF 
2430   1159 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2430   115D 00 00 FF FF 
2430   1161 FF 
2431   1162 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2431   1166 00 00 FF FF 
2431   116A FF 
2432   116B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2432   116F 00 00 FF FF 
2432   1173 FF 
2433   1174 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2433   1178 FF 00 FF FF 
2433   117C FF 
2434   117D 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2434   1181 80 00 FF FF 
2434   1185 FF 
2435   1186 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2435   118A 80 00 FF FF 
2435   118E FF 
2436   118F 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2436   1193 FF 00 FF FF 
2436   1197 FF 
2437   1198 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2437   119C 01 00 FF FF 
2437   11A0 FF 
2438   11A1 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2438   11A5 01 00 FF FF 
2438   11A9 FF 
2439   11AA 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2439   11AE FF 00 FF FF 
2439   11B2 FF 
2440   11B3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2440   11B7 00 00 FF FF 
2440   11BB FF 
2441   11BC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2441   11C0 00 00 FF FF 
2441   11C4 FF 
2442   11C5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2442   11C9 00 00 FF FF 
2442   11CD FF 
2443   11CE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2443   11D2 00 00 FF FF 
2443   11D6 FF 
2444   11D7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2444   11DB 00 00 FF FF 
2444   11DF FF 
2445   11E0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2445   11E4 00 00 FF FF 
2445   11E8 FF 
2446   11E9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2446   11ED 00 00 FF FF 
2446   11F1 FF 
2447   11F2 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2447   11F6 00 00 7F FF 
2447   11FA FE 
2448   11FB 00 00       			.DB	0,0
2449   11FD             
2450   11FD             spriteData03:
2451   11FD 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2451   1201 00 00 7F FF 
2451   1205 FE 
2452   1206 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2452   120A 00 00 FF FF 
2452   120E FF 
2453   120F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2453   1213 00 00 FF FF 
2453   1217 FF 
2454   1218 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2454   121C 00 00 FF FF 
2454   1220 FF 
2455   1221 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2455   1225 00 00 FF FF 
2455   1229 FF 
2456   122A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2456   122E 00 00 FF FF 
2456   1232 FF 
2457   1233 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2457   1237 00 00 FF FF 
2457   123B FF 
2458   123C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2458   1240 00 00 FF FF 
2458   1244 FF 
2459   1245 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2459   1249 00 00 FF FF 
2459   124D FF 
2460   124E 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2460   1252 7E 00 FF FF 
2460   1256 FF 
2461   1257 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2461   125B 81 00 FF FF 
2461   125F FF 
2462   1260 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2462   1264 01 00 FF FF 
2462   1268 FF 
2463   1269 80 00 01 00 			.DB	$80,$00,$01,$00,$3e,$00,$ff,$ff,$ff
2463   126D 3E 00 FF FF 
2463   1271 FF 
2464   1272 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2464   1276 01 00 FF FF 
2464   127A FF 
2465   127B 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2465   127F 81 00 FF FF 
2465   1283 FF 
2466   1284 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2466   1288 7E 00 FF FF 
2466   128C FF 
2467   128D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2467   1291 00 00 FF FF 
2467   1295 FF 
2468   1296 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2468   129A 00 00 FF FF 
2468   129E FF 
2469   129F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2469   12A3 00 00 FF FF 
2469   12A7 FF 
2470   12A8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2470   12AC 00 00 FF FF 
2470   12B0 FF 
2471   12B1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2471   12B5 00 00 FF FF 
2471   12B9 FF 
2472   12BA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2472   12BE 00 00 FF FF 
2472   12C2 FF 
2473   12C3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2473   12C7 00 00 FF FF 
2473   12CB FF 
2474   12CC 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2474   12D0 00 00 7F FF 
2474   12D4 FE 
2475   12D5 00 00       			.DB	0,0
2476   12D7             
2477   12D7             spriteData04:	
2478   12D7 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2478   12DB 00 00 7F FF 
2478   12DF FE 
2479   12E0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2479   12E4 00 00 FF FF 
2479   12E8 FF 
2480   12E9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2480   12ED 00 00 FF FF 
2480   12F1 FF 
2481   12F2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2481   12F6 00 00 FF FF 
2481   12FA FF 
2482   12FB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2482   12FF 00 00 FF FF 
2482   1303 FF 
2483   1304 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2483   1308 00 00 FF FF 
2483   130C FF 
2484   130D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2484   1311 00 00 FF FF 
2484   1315 FF 
2485   1316 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2485   131A 00 00 FF FF 
2485   131E FF 
2486   131F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2486   1323 00 00 FF FF 
2486   1327 FF 
2487   1328 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2487   132C 01 00 FF FF 
2487   1330 FF 
2488   1331 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2488   1335 01 00 FF FF 
2488   1339 FF 
2489   133A 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2489   133E 01 00 FF FF 
2489   1342 FF 
2490   1343 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2490   1347 FF 00 FF FF 
2490   134B FF 
2491   134C 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2491   1350 81 00 FF FF 
2491   1354 FF 
2492   1355 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2492   1359 81 00 FF FF 
2492   135D FF 
2493   135E 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2493   1362 81 00 FF FF 
2493   1366 FF 
2494   1367 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2494   136B 00 00 FF FF 
2494   136F FF 
2495   1370 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2495   1374 00 00 FF FF 
2495   1378 FF 
2496   1379 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2496   137D 00 00 FF FF 
2496   1381 FF 
2497   1382 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2497   1386 00 00 FF FF 
2497   138A FF 
2498   138B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2498   138F 00 00 FF FF 
2498   1393 FF 
2499   1394 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2499   1398 00 00 FF FF 
2499   139C FF 
2500   139D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2500   13A1 00 00 FF FF 
2500   13A5 FF 
2501   13A6 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2501   13AA 00 00 7F FF 
2501   13AE FE 
2502   13AF 00 00       			.DB	0,0
2503   13B1             
2504   13B1             spriteData05:
2505   13B1 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2505   13B5 00 00 7F FF 
2505   13B9 FE 
2506   13BA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2506   13BE 00 00 FF FF 
2506   13C2 FF 
2507   13C3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2507   13C7 00 00 FF FF 
2507   13CB FF 
2508   13CC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2508   13D0 00 00 FF FF 
2508   13D4 FF 
2509   13D5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2509   13D9 00 00 FF FF 
2509   13DD FF 
2510   13DE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2510   13E2 00 00 FF FF 
2510   13E6 FF 
2511   13E7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2511   13EB 00 00 FF FF 
2511   13EF FF 
2512   13F0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2512   13F4 00 00 FF FF 
2512   13F8 FF 
2513   13F9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2513   13FD 00 00 FF FF 
2513   1401 FF 
2514   1402 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2514   1406 7E 00 FF FF 
2514   140A FF 
2515   140B 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2515   140F 81 00 FF FF 
2515   1413 FF 
2516   1414 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2516   1418 01 00 FF FF 
2516   141C FF 
2517   141D 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2517   1421 FE 00 FF FF 
2517   1425 FF 
2518   1426 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2518   142A 80 00 FF FF 
2518   142E FF 
2519   142F 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2519   1433 80 00 FF FF 
2519   1437 FF 
2520   1438 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2520   143C FF 00 FF FF 
2520   1440 FF 
2521   1441 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2521   1445 00 00 FF FF 
2521   1449 FF 
2522   144A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2522   144E 00 00 FF FF 
2522   1452 FF 
2523   1453 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2523   1457 00 00 FF FF 
2523   145B FF 
2524   145C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2524   1460 00 00 FF FF 
2524   1464 FF 
2525   1465 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2525   1469 00 00 FF FF 
2525   146D FF 
2526   146E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2526   1472 00 00 FF FF 
2526   1476 FF 
2527   1477 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2527   147B 00 00 FF FF 
2527   147F FF 
2528   1480 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2528   1484 00 00 7F FF 
2528   1488 FE 
2529   1489 00 00       			.DB	0,0
2530   148B             
2531   148B             spriteData06:
2532   148B 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2532   148F 00 00 7F FF 
2532   1493 FE 
2533   1494 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2533   1498 00 00 FF FF 
2533   149C FF 
2534   149D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2534   14A1 00 00 FF FF 
2534   14A5 FF 
2535   14A6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2535   14AA 00 00 FF FF 
2535   14AE FF 
2536   14AF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2536   14B3 00 00 FF FF 
2536   14B7 FF 
2537   14B8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2537   14BC 00 00 FF FF 
2537   14C0 FF 
2538   14C1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2538   14C5 00 00 FF FF 
2538   14C9 FF 
2539   14CA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2539   14CE 00 00 FF FF 
2539   14D2 FF 
2540   14D3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2540   14D7 00 00 FF FF 
2540   14DB FF 
2541   14DC 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2541   14E0 7E 00 FF FF 
2541   14E4 FF 
2542   14E5 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2542   14E9 81 00 FF FF 
2542   14ED FF 
2543   14EE 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2543   14F2 81 00 FF FF 
2543   14F6 FF 
2544   14F7 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2544   14FB FE 00 FF FF 
2544   14FF FF 
2545   1500 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2545   1504 80 00 FF FF 
2545   1508 FF 
2546   1509 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2546   150D 81 00 FF FF 
2546   1511 FF 
2547   1512 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2547   1516 7E 00 FF FF 
2547   151A FF 
2548   151B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2548   151F 00 00 FF FF 
2548   1523 FF 
2549   1524 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2549   1528 00 00 FF FF 
2549   152C FF 
2550   152D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2550   1531 00 00 FF FF 
2550   1535 FF 
2551   1536 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2551   153A 00 00 FF FF 
2551   153E FF 
2552   153F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2552   1543 00 00 FF FF 
2552   1547 FF 
2553   1548 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2553   154C 00 00 FF FF 
2553   1550 FF 
2554   1551 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2554   1555 00 00 FF FF 
2554   1559 FF 
2555   155A 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2555   155E 00 00 7F FF 
2555   1562 FE 
2556   1563 00 00       			.DB	0,0
2557   1565             
2558   1565             spriteData07:
2559   1565 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2559   1569 00 00 7F FF 
2559   156D FE 
2560   156E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2560   1572 00 00 FF FF 
2560   1576 FF 
2561   1577 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2561   157B 00 00 FF FF 
2561   157F FF 
2562   1580 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2562   1584 00 00 FF FF 
2562   1588 FF 
2563   1589 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2563   158D 00 00 FF FF 
2563   1591 FF 
2564   1592 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2564   1596 00 00 FF FF 
2564   159A FF 
2565   159B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2565   159F 00 00 FF FF 
2565   15A3 FF 
2566   15A4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2566   15A8 00 00 FF FF 
2566   15AC FF 
2567   15AD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2567   15B1 00 00 FF FF 
2567   15B5 FF 
2568   15B6 80 00 01 00 			.DB	$80,$00,$01,$00,$08,$00,$ff,$ff,$ff
2568   15BA 08 00 FF FF 
2568   15BE FF 
2569   15BF 80 00 01 00 			.DB	$80,$00,$01,$00,$04,$00,$ff,$ff,$ff
2569   15C3 04 00 FF FF 
2569   15C7 FF 
2570   15C8 80 00 01 00 			.DB	$80,$00,$01,$00,$02,$00,$ff,$ff,$ff
2570   15CC 02 00 FF FF 
2570   15D0 FF 
2571   15D1 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2571   15D5 01 00 FF FF 
2571   15D9 FF 
2572   15DA 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2572   15DE 01 00 FF FF 
2572   15E2 FF 
2573   15E3 80 00 01 00 			.DB	$80,$00,$01,$00,$01,$00,$ff,$ff,$ff
2573   15E7 01 00 FF FF 
2573   15EB FF 
2574   15EC 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2574   15F0 FF 00 FF FF 
2574   15F4 FF 
2575   15F5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2575   15F9 00 00 FF FF 
2575   15FD FF 
2576   15FE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2576   1602 00 00 FF FF 
2576   1606 FF 
2577   1607 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2577   160B 00 00 FF FF 
2577   160F FF 
2578   1610 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2578   1614 00 00 FF FF 
2578   1618 FF 
2579   1619 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2579   161D 00 00 FF FF 
2579   1621 FF 
2580   1622 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2580   1626 00 00 FF FF 
2580   162A FF 
2581   162B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2581   162F 00 00 FF FF 
2581   1633 FF 
2582   1634 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2582   1638 00 00 7F FF 
2582   163C FE 
2583   163D 00 00       			.DB	0,0
2584   163F             
2585   163F             spriteData08:	
2586   163F 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2586   1643 00 00 7F FF 
2586   1647 FE 
2587   1648 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2587   164C 00 00 FF FF 
2587   1650 FF 
2588   1651 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2588   1655 00 00 FF FF 
2588   1659 FF 
2589   165A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2589   165E 00 00 FF FF 
2589   1662 FF 
2590   1663 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2590   1667 00 00 FF FF 
2590   166B FF 
2591   166C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2591   1670 00 00 FF FF 
2591   1674 FF 
2592   1675 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2592   1679 00 00 FF FF 
2592   167D FF 
2593   167E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2593   1682 00 00 FF FF 
2593   1686 FF 
2594   1687 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2594   168B 00 00 FF FF 
2594   168F FF 
2595   1690 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2595   1694 7E 00 FF FF 
2595   1698 FF 
2596   1699 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2596   169D 81 00 FF FF 
2596   16A1 FF 
2597   16A2 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2597   16A6 81 00 FF FF 
2597   16AA FF 
2598   16AB 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2598   16AF 7E 00 FF FF 
2598   16B3 FF 
2599   16B4 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2599   16B8 81 00 FF FF 
2599   16BC FF 
2600   16BD 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2600   16C1 81 00 FF FF 
2600   16C5 FF 
2601   16C6 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2601   16CA 7E 00 FF FF 
2601   16CE FF 
2602   16CF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2602   16D3 00 00 FF FF 
2602   16D7 FF 
2603   16D8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2603   16DC 00 00 FF FF 
2603   16E0 FF 
2604   16E1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2604   16E5 00 00 FF FF 
2604   16E9 FF 
2605   16EA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2605   16EE 00 00 FF FF 
2605   16F2 FF 
2606   16F3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2606   16F7 00 00 FF FF 
2606   16FB FF 
2607   16FC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2607   1700 00 00 FF FF 
2607   1704 FF 
2608   1705 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2608   1709 00 00 FF FF 
2608   170D FF 
2609   170E 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2609   1712 00 00 7F FF 
2609   1716 FE 
2610   1717 00 00       			.DB	0,0
2611   1719             
2612   1719             spriteData09:	
2613   1719 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2613   171D 00 00 7F FF 
2613   1721 FE 
2614   1722 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2614   1726 00 00 FF FF 
2614   172A FF 
2615   172B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2615   172F 00 00 FF FF 
2615   1733 FF 
2616   1734 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2616   1738 00 00 FF FF 
2616   173C FF 
2617   173D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2617   1741 00 00 FF FF 
2617   1745 FF 
2618   1746 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2618   174A 00 00 FF FF 
2618   174E FF 
2619   174F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2619   1753 00 00 FF FF 
2619   1757 FF 
2620   1758 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2620   175C 00 00 FF FF 
2620   1760 FF 
2621   1761 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2621   1765 00 00 FF FF 
2621   1769 FF 
2622   176A 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2622   176E 7E 00 FF FF 
2622   1772 FF 
2623   1773 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2623   1777 81 00 FF FF 
2623   177B FF 
2624   177C 80 00 01 00 			.DB	$80,$00,$01,$00,$08,$00,$ff,$ff,$ff
2624   1780 08 00 FF FF 
2624   1784 FF 
2625   1785 80 00 01 00 			.DB	$80,$00,$01,$00,$7f,$00,$ff,$ff,$ff
2625   1789 7F 00 FF FF 
2625   178D FF 
2626   178E 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2626   1792 81 00 FF FF 
2626   1796 FF 
2627   1797 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2627   179B 81 00 FF FF 
2627   179F FF 
2628   17A0 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2628   17A4 7E 00 FF FF 
2628   17A8 FF 
2629   17A9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2629   17AD 00 00 FF FF 
2629   17B1 FF 
2630   17B2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2630   17B6 00 00 FF FF 
2630   17BA FF 
2631   17BB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2631   17BF 00 00 FF FF 
2631   17C3 FF 
2632   17C4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2632   17C8 00 00 FF FF 
2632   17CC FF 
2633   17CD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2633   17D1 00 00 FF FF 
2633   17D5 FF 
2634   17D6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2634   17DA 00 00 FF FF 
2634   17DE FF 
2635   17DF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2635   17E3 00 00 FF FF 
2635   17E7 FF 
2636   17E8 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2636   17EC 00 00 7F FF 
2636   17F0 FE 
2637   17F1 00 00       			.DB	0,0
2638   17F3             
2639   17F3             spriteData10:	
2640   17F3 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2640   17F7 00 00 7F FF 
2640   17FB FE 
2641   17FC 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2641   1800 00 00 FF FF 
2641   1804 FF 
2642   1805 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2642   1809 00 00 FF FF 
2642   180D FF 
2643   180E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2643   1812 00 00 FF FF 
2643   1816 FF 
2644   1817 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2644   181B 00 00 FF FF 
2644   181F FF 
2645   1820 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2645   1824 00 00 FF FF 
2645   1828 FF 
2646   1829 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2646   182D 00 00 FF FF 
2646   1831 FF 
2647   1832 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2647   1836 00 00 FF FF 
2647   183A FF 
2648   183B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2648   183F 00 00 FF FF 
2648   1843 FF 
2649   1844 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2649   1848 81 00 FF FF 
2649   184C FF 
2650   184D 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2650   1851 81 00 FF FF 
2650   1855 FF 
2651   1856 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2651   185A 81 00 FF FF 
2651   185E FF 
2652   185F 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2652   1863 FF 00 FF FF 
2652   1867 FF 
2653   1868 80 00 01 00 			.DB	$80,$00,$01,$00,$42,$00,$ff,$ff,$ff
2653   186C 42 00 FF FF 
2653   1870 FF 
2654   1871 80 00 01 00 			.DB	$80,$00,$01,$00,$24,$00,$ff,$ff,$ff
2654   1875 24 00 FF FF 
2654   1879 FF 
2655   187A 80 00 01 00 			.DB	$80,$00,$01,$00,$18,$00,$ff,$ff,$ff
2655   187E 18 00 FF FF 
2655   1882 FF 
2656   1883 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2656   1887 00 00 FF FF 
2656   188B FF 
2657   188C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2657   1890 00 00 FF FF 
2657   1894 FF 
2658   1895 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2658   1899 00 00 FF FF 
2658   189D FF 
2659   189E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2659   18A2 00 00 FF FF 
2659   18A6 FF 
2660   18A7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2660   18AB 00 00 FF FF 
2660   18AF FF 
2661   18B0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2661   18B4 00 00 FF FF 
2661   18B8 FF 
2662   18B9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2662   18BD 00 00 FF FF 
2662   18C1 FF 
2663   18C2 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2663   18C6 00 00 7F FF 
2663   18CA FE 
2664   18CB 00 00       			.DB	0,0
2665   18CD             
2666   18CD             spriteData11:
2667   18CD 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2667   18D1 00 00 7F FF 
2667   18D5 FE 
2668   18D6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2668   18DA 00 00 FF FF 
2668   18DE FF 
2669   18DF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2669   18E3 00 00 FF FF 
2669   18E7 FF 
2670   18E8 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2670   18EC 00 00 FF FF 
2670   18F0 FF 
2671   18F1 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2671   18F5 00 00 FF FF 
2671   18F9 FF 
2672   18FA 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2672   18FE 00 00 FF FF 
2672   1902 FF 
2673   1903 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2673   1907 00 00 FF FF 
2673   190B FF 
2674   190C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2674   1910 00 00 FF FF 
2674   1914 FF 
2675   1915 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2675   1919 00 00 FF FF 
2675   191D FF 
2676   191E 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2676   1922 FE 00 FF FF 
2676   1926 FF 
2677   1927 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2677   192B 81 00 FF FF 
2677   192F FF 
2678   1930 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2678   1934 81 00 FF FF 
2678   1938 FF 
2679   1939 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2679   193D FE 00 FF FF 
2679   1941 FF 
2680   1942 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2680   1946 81 00 FF FF 
2680   194A FF 
2681   194B 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2681   194F 81 00 FF FF 
2681   1953 FF 
2682   1954 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2682   1958 FE 00 FF FF 
2682   195C FF 
2683   195D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2683   1961 00 00 FF FF 
2683   1965 FF 
2684   1966 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2684   196A 00 00 FF FF 
2684   196E FF 
2685   196F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2685   1973 00 00 FF FF 
2685   1977 FF 
2686   1978 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2686   197C 00 00 FF FF 
2686   1980 FF 
2687   1981 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2687   1985 00 00 FF FF 
2687   1989 FF 
2688   198A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2688   198E 00 00 FF FF 
2688   1992 FF 
2689   1993 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2689   1997 00 00 FF FF 
2689   199B FF 
2690   199C 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2690   19A0 00 00 7F FF 
2690   19A4 FE 
2691   19A5 00 00       			.DB	0,0
2692   19A7             
2693   19A7             spriteData12:
2694   19A7 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2694   19AB 00 00 7F FF 
2694   19AF FE 
2695   19B0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2695   19B4 00 00 FF FF 
2695   19B8 FF 
2696   19B9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2696   19BD 00 00 FF FF 
2696   19C1 FF 
2697   19C2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2697   19C6 00 00 FF FF 
2697   19CA FF 
2698   19CB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2698   19CF 00 00 FF FF 
2698   19D3 FF 
2699   19D4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2699   19D8 00 00 FF FF 
2699   19DC FF 
2700   19DD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2700   19E1 00 00 FF FF 
2700   19E5 FF 
2701   19E6 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2701   19EA 00 00 FF FF 
2701   19EE FF 
2702   19EF 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2702   19F3 00 00 FF FF 
2702   19F7 FF 
2703   19F8 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2703   19FC 7E 00 FF FF 
2703   1A00 FF 
2704   1A01 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2704   1A05 81 00 FF FF 
2704   1A09 FF 
2705   1A0A 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2705   1A0E 80 00 FF FF 
2705   1A12 FF 
2706   1A13 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2706   1A17 80 00 FF FF 
2706   1A1B FF 
2707   1A1C 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2707   1A20 80 00 FF FF 
2707   1A24 FF 
2708   1A25 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2708   1A29 81 00 FF FF 
2708   1A2D FF 
2709   1A2E 80 00 01 00 			.DB	$80,$00,$01,$00,$7e,$00,$ff,$ff,$ff
2709   1A32 7E 00 FF FF 
2709   1A36 FF 
2710   1A37 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2710   1A3B 00 00 FF FF 
2710   1A3F FF 
2711   1A40 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2711   1A44 00 00 FF FF 
2711   1A48 FF 
2712   1A49 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2712   1A4D 00 00 FF FF 
2712   1A51 FF 
2713   1A52 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2713   1A56 00 00 FF FF 
2713   1A5A FF 
2714   1A5B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2714   1A5F 00 00 FF FF 
2714   1A63 FF 
2715   1A64 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2715   1A68 00 00 FF FF 
2715   1A6C FF 
2716   1A6D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2716   1A71 00 00 FF FF 
2716   1A75 FF 
2717   1A76 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2717   1A7A 00 00 7F FF 
2717   1A7E FE 
2718   1A7F 00 00       			.DB	0,0
2719   1A81             
2720   1A81             spriteData13:
2721   1A81 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2721   1A85 00 00 7F FF 
2721   1A89 FE 
2722   1A8A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2722   1A8E 00 00 FF FF 
2722   1A92 FF 
2723   1A93 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2723   1A97 00 00 FF FF 
2723   1A9B FF 
2724   1A9C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2724   1AA0 00 00 FF FF 
2724   1AA4 FF 
2725   1AA5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2725   1AA9 00 00 FF FF 
2725   1AAD FF 
2726   1AAE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2726   1AB2 00 00 FF FF 
2726   1AB6 FF 
2727   1AB7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2727   1ABB 00 00 FF FF 
2727   1ABF FF 
2728   1AC0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2728   1AC4 00 00 FF FF 
2728   1AC8 FF 
2729   1AC9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2729   1ACD 00 00 FF FF 
2729   1AD1 FF 
2730   1AD2 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2730   1AD6 FE 00 FF FF 
2730   1ADA FF 
2731   1ADB 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2731   1ADF 81 00 FF FF 
2731   1AE3 FF 
2732   1AE4 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2732   1AE8 81 00 FF FF 
2732   1AEC FF 
2733   1AED 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2733   1AF1 81 00 FF FF 
2733   1AF5 FF 
2734   1AF6 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2734   1AFA 81 00 FF FF 
2734   1AFE FF 
2735   1AFF 80 00 01 00 			.DB	$80,$00,$01,$00,$81,$00,$ff,$ff,$ff
2735   1B03 81 00 FF FF 
2735   1B07 FF 
2736   1B08 80 00 01 00 			.DB	$80,$00,$01,$00,$fe,$00,$ff,$ff,$ff
2736   1B0C FE 00 FF FF 
2736   1B10 FF 
2737   1B11 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2737   1B15 00 00 FF FF 
2737   1B19 FF 
2738   1B1A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2738   1B1E 00 00 FF FF 
2738   1B22 FF 
2739   1B23 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2739   1B27 00 00 FF FF 
2739   1B2B FF 
2740   1B2C 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2740   1B30 00 00 FF FF 
2740   1B34 FF 
2741   1B35 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2741   1B39 00 00 FF FF 
2741   1B3D FF 
2742   1B3E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2742   1B42 00 00 FF FF 
2742   1B46 FF 
2743   1B47 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2743   1B4B 00 00 FF FF 
2743   1B4F FF 
2744   1B50 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2744   1B54 00 00 7F FF 
2744   1B58 FE 
2745   1B59 00 00       			.DB	0,0
2746   1B5B             
2747   1B5B             spriteData14:
2748   1B5B 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2748   1B5F 00 00 7F FF 
2748   1B63 FE 
2749   1B64 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2749   1B68 00 00 FF FF 
2749   1B6C FF 
2750   1B6D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2750   1B71 00 00 FF FF 
2750   1B75 FF 
2751   1B76 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2751   1B7A 00 00 FF FF 
2751   1B7E FF 
2752   1B7F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2752   1B83 00 00 FF FF 
2752   1B87 FF 
2753   1B88 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2753   1B8C 00 00 FF FF 
2753   1B90 FF 
2754   1B91 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2754   1B95 00 00 FF FF 
2754   1B99 FF 
2755   1B9A 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2755   1B9E 00 00 FF FF 
2755   1BA2 FF 
2756   1BA3 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2756   1BA7 00 00 FF FF 
2756   1BAB FF 
2757   1BAC 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2757   1BB0 FF 00 FF FF 
2757   1BB4 FF 
2758   1BB5 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2758   1BB9 80 00 FF FF 
2758   1BBD FF 
2759   1BBE 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2759   1BC2 80 00 FF FF 
2759   1BC6 FF 
2760   1BC7 80 00 01 00 			.DB	$80,$00,$01,$00,$fc,$00,$ff,$ff,$ff
2760   1BCB FC 00 FF FF 
2760   1BCF FF 
2761   1BD0 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2761   1BD4 80 00 FF FF 
2761   1BD8 FF 
2762   1BD9 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2762   1BDD 80 00 FF FF 
2762   1BE1 FF 
2763   1BE2 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2763   1BE6 FF 00 FF FF 
2763   1BEA FF 
2764   1BEB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2764   1BEF 00 00 FF FF 
2764   1BF3 FF 
2765   1BF4 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2765   1BF8 00 00 FF FF 
2765   1BFC FF 
2766   1BFD 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2766   1C01 00 00 FF FF 
2766   1C05 FF 
2767   1C06 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2767   1C0A 00 00 FF FF 
2767   1C0E FF 
2768   1C0F 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2768   1C13 00 00 FF FF 
2768   1C17 FF 
2769   1C18 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2769   1C1C 00 00 FF FF 
2769   1C20 FF 
2770   1C21 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2770   1C25 00 00 FF FF 
2770   1C29 FF 
2771   1C2A 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2771   1C2E 00 00 7F FF 
2771   1C32 FE 
2772   1C33 00 00       			.DB	0,0
2773   1C35             
2774   1C35             spriteData15:
2775   1C35 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2775   1C39 00 00 7F FF 
2775   1C3D FE 
2776   1C3E 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2776   1C42 00 00 FF FF 
2776   1C46 FF 
2777   1C47 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2777   1C4B 00 00 FF FF 
2777   1C4F FF 
2778   1C50 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2778   1C54 00 00 FF FF 
2778   1C58 FF 
2779   1C59 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2779   1C5D 00 00 FF FF 
2779   1C61 FF 
2780   1C62 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2780   1C66 00 00 FF FF 
2780   1C6A FF 
2781   1C6B 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2781   1C6F 00 00 FF FF 
2781   1C73 FF 
2782   1C74 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2782   1C78 00 00 FF FF 
2782   1C7C FF 
2783   1C7D 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2783   1C81 00 00 FF FF 
2783   1C85 FF 
2784   1C86 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2784   1C8A 80 00 FF FF 
2784   1C8E FF 
2785   1C8F 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2785   1C93 80 00 FF FF 
2785   1C97 FF 
2786   1C98 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2786   1C9C 80 00 FF FF 
2786   1CA0 FF 
2787   1CA1 80 00 01 00 			.DB	$80,$00,$01,$00,$fc,$00,$ff,$ff,$ff
2787   1CA5 FC 00 FF FF 
2787   1CA9 FF 
2788   1CAA 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2788   1CAE 80 00 FF FF 
2788   1CB2 FF 
2789   1CB3 80 00 01 00 			.DB	$80,$00,$01,$00,$80,$00,$ff,$ff,$ff
2789   1CB7 80 00 FF FF 
2789   1CBB FF 
2790   1CBC 80 00 01 00 			.DB	$80,$00,$01,$00,$ff,$00,$ff,$ff,$ff
2790   1CC0 FF 00 FF FF 
2790   1CC4 FF 
2791   1CC5 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2791   1CC9 00 00 FF FF 
2791   1CCD FF 
2792   1CCE 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2792   1CD2 00 00 FF FF 
2792   1CD6 FF 
2793   1CD7 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2793   1CDB 00 00 FF FF 
2793   1CDF FF 
2794   1CE0 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2794   1CE4 00 00 FF FF 
2794   1CE8 FF 
2795   1CE9 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2795   1CED 00 00 FF FF 
2795   1CF1 FF 
2796   1CF2 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2796   1CF6 00 00 FF FF 
2796   1CFA FF 
2797   1CFB 80 00 01 00 			.DB	$80,$00,$01,$00,$00,$00,$ff,$ff,$ff
2797   1CFF 00 00 FF FF 
2797   1D03 FF 
2798   1D04 7F FF FE 00 			.DB	$7f,$ff,$fe,$00,$00,$00,$7f,$ff,$fe
2798   1D08 00 00 7F FF 
2798   1D0C FE 
2799   1D0D             			; .DB	0,0
2800   1D0D             
2801   1D0D             ;================================================================
2802   1D0D             			.ENDtasm: Number of errors = 0
